{"version":3,"sources":["no-case.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,YAAR,CAAhB;;AAEA,IAAI,kBAAkB,QAAQ,0BAAR,CAAtB;AACA,IAAI,oBAAoB,QAAQ,4BAAR,CAAxB;AACA,IAAI,0BAA0B,QAAQ,kCAAR,CAA9B;;AAEA;;;;;;;;AAQA,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,MAAf,EAAuB,WAAvB,EAAoC;AACnD,MAAI,OAAO,IAAX,EAAiB;AACf,WAAO,EAAP;AACD;;AAED,gBAAc,OAAO,WAAP,KAAuB,QAAvB,GAAkC,GAAlC,GAAwC,WAAtD;;AAEA,WAAS,OAAT,CAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC;AACrC,QAAI,UAAU,CAAV,IAAe,UAAW,MAAM,MAAN,GAAe,MAAM,MAAnD,EAA4D;AAC1D,aAAO,EAAP;AACD;;AAED,WAAO,WAAP;AACD;;AAED,QAAM,OAAO,GAAP;AACJ;AADI,GAEH,OAFG,CAEK,iBAFL,EAEwB,OAFxB;AAGJ;AAHI,GAIH,OAJG,CAIK,uBAJL,EAI8B,OAJ9B;AAKJ;AALI,GAMH,OANG,CAMK,eANL,EAMsB,OANtB,CAAN;;AAQA;AACA,SAAO,UAAU,GAAV,EAAe,MAAf,CAAP;AACD,CAzBD","file":"no-case-compiled.js","sourcesContent":["var lowerCase = require('lower-case')\n\nvar NON_WORD_REGEXP = require('./vendor/non-word-regexp')\nvar CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp')\nvar CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp')\n\n/**\n * Sentence case a string.\n *\n * @param  {string} str\n * @param  {string} locale\n * @param  {string} replacement\n * @return {string}\n */\nmodule.exports = function (str, locale, replacement) {\n  if (str == null) {\n    return ''\n  }\n\n  replacement = typeof replacement !== 'string' ? ' ' : replacement\n\n  function replace (match, index, value) {\n    if (index === 0 || index === (value.length - match.length)) {\n      return ''\n    }\n\n    return replacement\n  }\n\n  str = String(str)\n    // Support camel case (\"camelCase\" -> \"camel Case\").\n    .replace(CAMEL_CASE_REGEXP, '$1 $2')\n    // Support odd camel case (\"CAMELCase\" -> \"CAMEL Case\").\n    .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')\n    // Remove all non-word characters and replace with a single space.\n    .replace(NON_WORD_REGEXP, replace)\n\n  // Lower case the entire string.\n  return lowerCase(str, locale)\n}\n"]}