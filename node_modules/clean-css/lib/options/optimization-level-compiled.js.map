{"version":3,"sources":["optimization-level.js"],"names":[],"mappings":"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","file":"optimization-level-compiled.js","sourcesContent":["var roundingPrecisionFrom = require('./rounding-precision').roundingPrecisionFrom;\n\nvar override = require('../utils/override');\n\nvar OptimizationLevel = {\n  Zero: '0',\n  One: '1',\n  Two: '2'\n};\n\nvar DEFAULTS = {};\n\nDEFAULTS[OptimizationLevel.Zero] = {};\nDEFAULTS[OptimizationLevel.One] = {\n  cleanupCharsets: true,\n  normalizeUrls: true,\n  optimizeBackground: true,\n  optimizeBorderRadius: true,\n  optimizeFilter: true,\n  optimizeFontWeight: true,\n  optimizeOutline: true,\n  removeEmpty: true,\n  removeNegativePaddings: true,\n  removeQuotes: true,\n  removeWhitespace: true,\n  replaceMultipleZeros: true,\n  replaceTimeUnits: true,\n  replaceZeroUnits: true,\n  roundingPrecision: roundingPrecisionFrom(undefined),\n  selectorsSortingMethod: 'standard',\n  specialComments: 'all',\n  tidyAtRules: true,\n  tidyBlockScopes: true,\n  tidySelectors: true,\n  transform: noop\n};\nDEFAULTS[OptimizationLevel.Two] = {\n  mergeAdjacentRules: true,\n  mergeIntoShorthands: true,\n  mergeMedia: true,\n  mergeNonAdjacentRules: true,\n  mergeSemantically: false,\n  overrideProperties: true,\n  removeEmpty: true,\n  reduceNonAdjacentRules: true,\n  removeDuplicateFontRules: true,\n  removeDuplicateMediaBlocks: true,\n  removeDuplicateRules: true,\n  removeUnusedAtRules: false,\n  restructureRules: false,\n  skipProperties: []\n};\n\nvar ALL_KEYWORD_1 = '*';\nvar ALL_KEYWORD_2 = 'all';\nvar FALSE_KEYWORD_1 = 'false';\nvar FALSE_KEYWORD_2 = 'off';\nvar TRUE_KEYWORD_1 = 'true';\nvar TRUE_KEYWORD_2 = 'on';\n\nvar LIST_VALUE_SEPARATOR = ',';\nvar OPTION_SEPARATOR = ';';\nvar OPTION_VALUE_SEPARATOR = ':';\n\nfunction noop() {}\n\nfunction optimizationLevelFrom(source) {\n  var level = override(DEFAULTS, {});\n  var Zero = OptimizationLevel.Zero;\n  var One = OptimizationLevel.One;\n  var Two = OptimizationLevel.Two;\n\n\n  if (undefined === source) {\n    delete level[Two];\n    return level;\n  }\n\n  if (typeof source == 'string') {\n    source = parseInt(source);\n  }\n\n  if (typeof source == 'number' && source === parseInt(Two)) {\n    return level;\n  }\n\n  if (typeof source == 'number' && source === parseInt(One)) {\n    delete level[Two];\n    return level;\n  }\n\n  if (typeof source == 'number' && source === parseInt(Zero)) {\n    delete level[Two];\n    delete level[One];\n    return level;\n  }\n\n  if (typeof source == 'object') {\n    source = covertValuesToHashes(source);\n  }\n\n  if (One in source && 'roundingPrecision' in source[One]) {\n    source[One].roundingPrecision = roundingPrecisionFrom(source[One].roundingPrecision);\n  }\n\n  if (Two in source && 'skipProperties' in source[Two] && typeof(source[Two].skipProperties) == 'string') {\n    source[Two].skipProperties = source[Two].skipProperties.split(LIST_VALUE_SEPARATOR);\n  }\n\n  if (Zero in source || One in source || Two in source) {\n    level[Zero] = override(level[Zero], source[Zero]);\n  }\n\n  if (One in source && ALL_KEYWORD_1 in source[One]) {\n    level[One] = override(level[One], defaults(One, normalizeValue(source[One][ALL_KEYWORD_1])));\n    delete source[One][ALL_KEYWORD_1];\n  }\n\n  if (One in source && ALL_KEYWORD_2 in source[One]) {\n    level[One] = override(level[One], defaults(One, normalizeValue(source[One][ALL_KEYWORD_2])));\n    delete source[One][ALL_KEYWORD_2];\n  }\n\n  if (One in source || Two in source) {\n    level[One] = override(level[One], source[One]);\n  } else {\n    delete level[One];\n  }\n\n  if (Two in source && ALL_KEYWORD_1 in source[Two]) {\n    level[Two] = override(level[Two], defaults(Two, normalizeValue(source[Two][ALL_KEYWORD_1])));\n    delete source[Two][ALL_KEYWORD_1];\n  }\n\n  if (Two in source && ALL_KEYWORD_2 in source[Two]) {\n    level[Two] = override(level[Two], defaults(Two, normalizeValue(source[Two][ALL_KEYWORD_2])));\n    delete source[Two][ALL_KEYWORD_2];\n  }\n\n  if (Two in source) {\n    level[Two] = override(level[Two], source[Two]);\n  } else {\n    delete level[Two];\n  }\n\n  return level;\n}\n\nfunction defaults(level, value) {\n  var options = override(DEFAULTS[level], {});\n  var key;\n\n  for (key in options) {\n    if (typeof options[key] == 'boolean') {\n      options[key] = value;\n    }\n  }\n\n  return options;\n}\n\nfunction normalizeValue(value) {\n  switch (value) {\n    case FALSE_KEYWORD_1:\n    case FALSE_KEYWORD_2:\n      return false;\n    case TRUE_KEYWORD_1:\n    case TRUE_KEYWORD_2:\n      return true;\n    default:\n      return value;\n  }\n}\n\nfunction covertValuesToHashes(source) {\n  var clonedSource = override(source, {});\n  var level;\n  var i;\n\n  for (i = 0; i <= 2; i++) {\n    level = '' + i;\n\n    if (level in clonedSource && (clonedSource[level] === undefined || clonedSource[level] === false)) {\n      delete clonedSource[level];\n    }\n\n    if (level in clonedSource && clonedSource[level] === true) {\n      clonedSource[level] = {};\n    }\n\n    if (level in clonedSource && typeof clonedSource[level] == 'string') {\n      clonedSource[level] = covertToHash(clonedSource[level], level);\n    }\n  }\n\n  return clonedSource;\n}\n\nfunction covertToHash(asString, level) {\n  return asString\n    .split(OPTION_SEPARATOR)\n    .reduce(function (accumulator, directive) {\n      var parts = directive.split(OPTION_VALUE_SEPARATOR);\n      var name = parts[0];\n      var value = parts[1];\n      var normalizedValue = normalizeValue(value);\n\n      if (ALL_KEYWORD_1 == name || ALL_KEYWORD_2 == name) {\n        accumulator = override(accumulator, defaults(level, normalizedValue));\n      } else {\n        accumulator[name] = normalizedValue;\n      }\n\n      return accumulator;\n    }, {});\n}\n\nmodule.exports = {\n  OptimizationLevel: OptimizationLevel,\n  optimizationLevelFrom: optimizationLevelFrom,\n};\n"]}