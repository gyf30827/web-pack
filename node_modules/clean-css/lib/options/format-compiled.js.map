{"version":3,"sources":["format.js"],"names":[],"mappings":"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","file":"format-compiled.js","sourcesContent":["var override = require('../utils/override');\n\nvar Breaks = {\n  AfterAtRule: 'afterAtRule',\n  AfterBlockBegins: 'afterBlockBegins',\n  AfterBlockEnds: 'afterBlockEnds',\n  AfterComment: 'afterComment',\n  AfterProperty: 'afterProperty',\n  AfterRuleBegins: 'afterRuleBegins',\n  AfterRuleEnds: 'afterRuleEnds',\n  BeforeBlockEnds: 'beforeBlockEnds',\n  BetweenSelectors: 'betweenSelectors'\n};\n\nvar IndentWith = {\n  Space: ' ',\n  Tab: '\\t'\n};\n\nvar Spaces = {\n  AroundSelectorRelation: 'aroundSelectorRelation',\n  BeforeBlockBegins: 'beforeBlockBegins',\n  BeforeValue: 'beforeValue'\n};\n\nvar DEFAULTS = {\n  breaks: breaks(false),\n  indentBy: 0,\n  indentWith: IndentWith.Space,\n  spaces: spaces(false),\n  wrapAt: false\n};\n\nvar BEAUTIFY_ALIAS = 'beautify';\nvar KEEP_BREAKS_ALIAS = 'keep-breaks';\n\nvar OPTION_SEPARATOR = ';';\nvar OPTION_NAME_VALUE_SEPARATOR = ':';\nvar HASH_VALUES_OPTION_SEPARATOR = ',';\nvar HASH_VALUES_NAME_VALUE_SEPARATOR = '=';\n\nvar FALSE_KEYWORD_1 = 'false';\nvar FALSE_KEYWORD_2 = 'off';\nvar TRUE_KEYWORD_1 = 'true';\nvar TRUE_KEYWORD_2 = 'on';\n\nfunction breaks(value) {\n  var breakOptions = {};\n\n  breakOptions[Breaks.AfterAtRule] = value;\n  breakOptions[Breaks.AfterBlockBegins] = value;\n  breakOptions[Breaks.AfterBlockEnds] = value;\n  breakOptions[Breaks.AfterComment] = value;\n  breakOptions[Breaks.AfterProperty] = value;\n  breakOptions[Breaks.AfterRuleBegins] = value;\n  breakOptions[Breaks.AfterRuleEnds] = value;\n  breakOptions[Breaks.BeforeBlockEnds] = value;\n  breakOptions[Breaks.BetweenSelectors] = value;\n\n  return breakOptions;\n}\n\nfunction spaces(value) {\n  var spaceOptions = {};\n\n  spaceOptions[Spaces.AroundSelectorRelation] = value;\n  spaceOptions[Spaces.BeforeBlockBegins] = value;\n  spaceOptions[Spaces.BeforeValue] = value;\n\n  return spaceOptions;\n}\n\nfunction formatFrom(source) {\n  if (source === undefined || source === false) {\n    return false;\n  }\n\n  if (typeof source == 'object' && 'indentBy' in source) {\n    source = override(source, { indentBy: parseInt(source.indentBy) });\n  }\n\n  if (typeof source == 'object' && 'indentWith' in source) {\n    source = override(source, { indentWith: mapIndentWith(source.indentWith) });\n  }\n\n  if (typeof source == 'object') {\n    return override(DEFAULTS, source);\n  }\n\n  if (typeof source == 'object') {\n    return override(DEFAULTS, source);\n  }\n\n  if (typeof source == 'string' && source == BEAUTIFY_ALIAS) {\n    return override(DEFAULTS, {\n      breaks: breaks(true),\n      indentBy: 2,\n      spaces: spaces(true)\n    });\n  }\n\n  if (typeof source == 'string' && source == KEEP_BREAKS_ALIAS) {\n    return override(DEFAULTS, {\n      breaks: {\n        afterAtRule: true,\n        afterBlockBegins: true,\n        afterBlockEnds: true,\n        afterComment: true,\n        afterRuleEnds: true,\n        beforeBlockEnds: true\n      }\n    });\n  }\n\n  if (typeof source == 'string') {\n    return override(DEFAULTS, toHash(source));\n  }\n\n  return DEFAULTS;\n}\n\nfunction toHash(string) {\n  return string\n    .split(OPTION_SEPARATOR)\n    .reduce(function (accumulator, directive) {\n      var parts = directive.split(OPTION_NAME_VALUE_SEPARATOR);\n      var name = parts[0];\n      var value = parts[1];\n\n      if (name == 'breaks' || name == 'spaces') {\n        accumulator[name] = hashValuesToHash(value);\n      } else if (name == 'indentBy' || name == 'wrapAt') {\n        accumulator[name] = parseInt(value);\n      } else if (name == 'indentWith') {\n        accumulator[name] = mapIndentWith(value);\n      }\n\n      return accumulator;\n    }, {});\n}\n\nfunction hashValuesToHash(string) {\n  return string\n    .split(HASH_VALUES_OPTION_SEPARATOR)\n    .reduce(function (accumulator, directive) {\n      var parts = directive.split(HASH_VALUES_NAME_VALUE_SEPARATOR);\n      var name = parts[0];\n      var value = parts[1];\n\n      accumulator[name] = normalizeValue(value);\n\n      return accumulator;\n    }, {});\n}\n\n\nfunction normalizeValue(value) {\n  switch (value) {\n    case FALSE_KEYWORD_1:\n    case FALSE_KEYWORD_2:\n      return false;\n    case TRUE_KEYWORD_1:\n    case TRUE_KEYWORD_2:\n      return true;\n    default:\n      return value;\n  }\n}\n\nfunction mapIndentWith(value) {\n  switch (value) {\n    case 'space':\n      return IndentWith.Space;\n    case 'tab':\n      return IndentWith.Tab;\n    default:\n      return value;\n  }\n}\n\nmodule.exports = {\n  Breaks: Breaks,\n  Spaces: Spaces,\n  formatFrom: formatFrom\n};\n"]}