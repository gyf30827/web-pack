{"version":3,"sources":["tidy-rules.js"],"names":[],"mappings":"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","file":"tidy-rules-compiled.js","sourcesContent":["var Spaces = require('../../options/format').Spaces;\nvar Marker = require('../../tokenizer/marker');\nvar formatPosition = require('../../utils/format-position');\n\nvar CASE_ATTRIBUTE_PATTERN = /[\\s\"'][iI]\\s*\\]/;\nvar CASE_RESTORE_PATTERN = /([\\d\\w])([iI])\\]/g;\nvar DOUBLE_QUOTE_CASE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"([iI])/g;\nvar DOUBLE_QUOTE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"(\\s|\\])/g;\nvar HTML_COMMENT_PATTERN = /^(?:(?:<!--|-->)\\s*)+/;\nvar SINGLE_QUOTE_CASE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'([iI])/g;\nvar SINGLE_QUOTE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'(\\s|\\])/g;\nvar RELATION_PATTERN = /[>\\+~]/;\nvar WHITESPACE_PATTERN = /\\s/;\n\nvar ASTERISK_PLUS_HTML_HACK = '*+html ';\nvar ASTERISK_FIRST_CHILD_PLUS_HTML_HACK = '*:first-child+html ';\nvar LESS_THAN = '<';\n\nfunction hasInvalidCharacters(value) {\n  var isEscaped;\n  var isInvalid = false;\n  var character;\n  var isQuote = false;\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    if (isEscaped) {\n      // continue as always\n    } else if (character == Marker.SINGLE_QUOTE || character == Marker.DOUBLE_QUOTE) {\n      isQuote = !isQuote;\n    } else if (!isQuote && (character == Marker.CLOSE_CURLY_BRACKET || character == Marker.EXCLAMATION || character == LESS_THAN || character == Marker.SEMICOLON)) {\n      isInvalid = true;\n      break;\n    } else if (!isQuote && i === 0 && RELATION_PATTERN.test(character)) {\n      isInvalid = true;\n      break;\n    }\n\n    isEscaped = character == Marker.BACK_SLASH;\n  }\n\n  return isInvalid;\n}\n\nfunction removeWhitespace(value, format) {\n  var stripped = [];\n  var character;\n  var isNewLineNix;\n  var isNewLineWin;\n  var isEscaped;\n  var wasEscaped;\n  var isQuoted;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var isAttribute;\n  var isRelation;\n  var isWhitespace;\n  var roundBracketLevel = 0;\n  var wasRelation = false;\n  var wasWhitespace = false;\n  var withCaseAttribute = CASE_ATTRIBUTE_PATTERN.test(value);\n  var spaceAroundRelation = format && format.spaces[Spaces.AroundSelectorRelation];\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    isNewLineNix = character == Marker.NEW_LINE_NIX;\n    isNewLineWin = character == Marker.NEW_LINE_NIX && value[i - 1] == Marker.NEW_LINE_WIN;\n    isQuoted = isSingleQuoted || isDoubleQuoted;\n    isRelation = !isAttribute && !isEscaped && roundBracketLevel === 0 && RELATION_PATTERN.test(character);\n    isWhitespace = WHITESPACE_PATTERN.test(character);\n\n    if (wasEscaped && isQuoted && isNewLineWin) {\n      // swallow escaped new windows lines in comments\n      stripped.pop();\n      stripped.pop();\n    } else if (isEscaped && isQuoted && isNewLineNix) {\n      // swallow escaped new *nix lines in comments\n      stripped.pop();\n    } else if (isEscaped) {\n      stripped.push(character);\n    } else if (character == Marker.OPEN_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = true;\n    } else if (character == Marker.CLOSE_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = false;\n    } else if (character == Marker.OPEN_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.SINGLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = false;\n    } else if (isWhitespace && wasRelation && !spaceAroundRelation) {\n      continue;\n    } else if (!isWhitespace && wasRelation && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace && (isAttribute || roundBracketLevel > 0) && !isQuoted) {\n      // skip space\n    } else if (isWhitespace && wasWhitespace && !isQuoted) {\n      // skip extra space\n    } else if ((isNewLineWin || isNewLineNix) && (isAttribute || roundBracketLevel > 0) && isQuoted) {\n      // skip newline\n    } else if (isRelation && wasWhitespace && !spaceAroundRelation) {\n      stripped.pop();\n      stripped.push(character);\n    } else if (isRelation && !wasWhitespace && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace) {\n      stripped.push(Marker.SPACE);\n    } else {\n      stripped.push(character);\n    }\n\n    wasEscaped = isEscaped;\n    isEscaped = character == Marker.BACK_SLASH;\n    wasRelation = isRelation;\n    wasWhitespace = isWhitespace;\n  }\n\n  return withCaseAttribute ?\n    stripped.join('').replace(CASE_RESTORE_PATTERN, '$1 $2]') :\n    stripped.join('');\n}\n\nfunction removeQuotes(value) {\n  if (value.indexOf('\\'') == -1 && value.indexOf('\"') == -1) {\n    return value;\n  }\n\n  return value\n    .replace(SINGLE_QUOTE_CASE_PATTERN, '=$1 $2')\n    .replace(SINGLE_QUOTE_PATTERN, '=$1$2')\n    .replace(DOUBLE_QUOTE_CASE_PATTERN, '=$1 $2')\n    .replace(DOUBLE_QUOTE_PATTERN, '=$1$2');\n}\n\nfunction tidyRules(rules, removeUnsupported, adjacentSpace, format, warnings) {\n  var list = [];\n  var repeated = [];\n\n  function removeHTMLComment(rule, match) {\n    warnings.push('HTML comment \\'' + match + '\\' at ' + formatPosition(rule[2][0]) + '. Removing.');\n    return '';\n  }\n\n  for (var i = 0, l = rules.length; i < l; i++) {\n    var rule = rules[i];\n    var reduced = rule[1];\n\n    reduced = reduced.replace(HTML_COMMENT_PATTERN, removeHTMLComment.bind(null, rule));\n\n    if (hasInvalidCharacters(reduced)) {\n      warnings.push('Invalid selector \\'' + rule[1] + '\\' at ' + formatPosition(rule[2][0]) + '. Ignoring.');\n      continue;\n    }\n\n    reduced = removeWhitespace(reduced, format);\n    reduced = removeQuotes(reduced);\n\n    if (adjacentSpace && reduced.indexOf('nav') > 0) {\n      reduced = reduced.replace(/\\+nav(\\S|$)/, '+ nav$1');\n    }\n\n    if (removeUnsupported && reduced.indexOf(ASTERISK_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n\n    if (removeUnsupported && reduced.indexOf(ASTERISK_FIRST_CHILD_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n\n    if (reduced.indexOf('*') > -1) {\n      reduced = reduced\n        .replace(/\\*([:#\\.\\[])/g, '$1')\n        .replace(/^(\\:first\\-child)?\\+html/, '*$1+html');\n    }\n\n    if (repeated.indexOf(reduced) > -1) {\n      continue;\n    }\n\n    rule[1] = reduced;\n    repeated.push(reduced);\n    list.push(rule);\n  }\n\n  if (list.length == 1 && list[0][1].length === 0) {\n    warnings.push('Empty selector \\'' + list[0][1] + '\\' at ' + formatPosition(list[0][2][0]) + '. Ignoring.');\n    list = [];\n  }\n\n  return list;\n}\n\nmodule.exports = tidyRules;\n"]}