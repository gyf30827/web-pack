{"version":3,"sources":["merge-into-shorthands.js"],"names":[],"mappings":"AAAA,IAAI,kBAAkB,QAAQ,qBAAR,CAAtB;AACA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,qBAAqB,QAAQ,uBAAR,CAAzB;;AAEA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AACA,IAAI,YAAY,QAAQ,UAAR,EAAoB,IAApC;AACA,IAAI,wBAAwB,QAAQ,4BAAR,CAA5B;;AAEA,IAAI,wBAAwB,QAAQ,+BAAR,CAA5B;AACA,IAAI,aAAa,QAAQ,2BAAR,EAAqC,MAAtD;;AAEA,IAAI,gBAAgB,QAAQ,0BAAR,EAAoC,IAAxD;AACA,IAAI,QAAQ,QAAQ,0BAAR,CAAZ;;AAEA,SAAS,mBAAT,CAA6B,UAA7B,EAAyC,SAAzC,EAAoD;AAClD,MAAI,aAAa,EAAjB;AACA,MAAI,UAAJ;AACA,MAAI,WAAJ;AACA,MAAI,QAAJ;AACA,MAAI,CAAJ,EAAO,CAAP;AACA,MAAI,CAAJ,EAAO,CAAP;;AAEA;AACA,MAAI,WAAW,MAAX,GAAoB,CAAxB,EAA2B;AACzB;AACD;;AAED,OAAK,IAAI,CAAJ,EAAO,IAAI,WAAW,MAA3B,EAAmC,IAAI,CAAvC,EAA0C,GAA1C,EAA+C;AAC7C,eAAW,WAAW,CAAX,CAAX;AACA,iBAAa,YAAY,SAAS,IAArB,CAAb;;AAEA,QAAI,SAAS,MAAb,EAAqB;AACnB;AACD;;AAED,QAAI,SAAS,IAAb,EAAmB;AACjB;AACD;;AAED,QAAI,SAAS,KAAb,EAAoB;AAClB;AACD;;AAED,wBAAoB,UAApB,EAAgC,CAAhC,EAAmC,UAAnC,EAA+C,SAA/C;;AAEA,QAAI,cAAc,WAAW,WAA7B,EAA0C;AACxC,WAAK,IAAI,CAAJ,EAAO,IAAI,WAAW,WAAX,CAAuB,MAAvC,EAA+C,IAAI,CAAnD,EAAsD,GAAtD,EAA2D;AACzD,sBAAc,WAAW,WAAX,CAAuB,CAAvB,CAAd;;AAEA,mBAAW,WAAX,IAA0B,WAAW,WAAX,KAA2B,EAArD;AACA,mBAAW,WAAX,EAAwB,SAAS,IAAjC,IAAyC,QAAzC;AACD;AACF;AACF;;AAED,sBAAoB,UAApB,EAAgC,CAAhC,EAAmC,UAAnC,EAA+C,SAA/C;AACD;;AAED,SAAS,mBAAT,CAA6B,UAA7B,EAAyC,QAAzC,EAAmD,UAAnD,EAA+D,SAA/D,EAA0E;AACxE,MAAI,gBAAgB,WAAW,QAAX,CAApB;AACA,MAAI,aAAJ;AACA,MAAI,mBAAJ;AACA,MAAI,mBAAJ;;AAEA,OAAK,aAAL,IAAsB,UAAtB,EAAkC;AAChC,QAAI,cAAc,aAAd,IAA+B,iBAAiB,cAAc,IAAlE,EAAwE;AACtE;AACD;;AAED,0BAAsB,YAAY,aAAZ,CAAtB;AACA,0BAAsB,WAAW,aAAX,CAAtB;AACA,QAAI,iBAAiB,YAAY,UAAZ,EAAwB,aAAxB,EAAuC,aAAvC,CAArB,EAA4E;AAC1E,aAAO,WAAW,aAAX,CAAP;AACA;AACD;;AAED,QAAI,oBAAoB,UAApB,CAA+B,MAA/B,GAAwC,OAAO,IAAP,CAAY,mBAAZ,EAAiC,MAA7E,EAAqF;AACnF;AACD;;AAED,QAAI,gBAAgB,mBAAhB,CAAJ,EAA0C;AACxC;AACD;;AAED,QAAI,CAAC,YAAY,mBAAZ,EAAiC,aAAjC,EAAgD,SAAhD,CAAL,EAAiE;AAC/D;AACD;;AAED,QAAI,CAAC,UAAU,mBAAV,CAAL,EAAqC;AACnC;AACD;;AAED,QAAI,aAAa,mBAAb,CAAJ,EAAuC;AACrC,gCAA0B,UAA1B,EAAsC,mBAAtC,EAA2D,aAA3D,EAA0E,SAA1E;AACD,KAFD,MAEO;AACL,2BAAqB,UAArB,EAAiC,mBAAjC,EAAsD,aAAtD,EAAqE,SAArE;AACD;AACF;AACF;;AAED,SAAS,WAAT,CAAqB,UAArB,EAAiC,aAAjC,EAAgD,aAAhD,EAA+D;AAC7D,MAAI,sBAAsB,YAAY,aAAZ,CAA1B;AACA,MAAI,0BAA0B,YAAY,cAAc,IAA1B,CAA9B;AACA,MAAI,aAAJ;;AAEA,MAAI,yBAAyB,mBAAzB,IAAgD,oBAAoB,mBAApB,CAAwC,OAAxC,CAAgD,cAAc,IAA9D,IAAsE,CAAC,CAA3H,EAA8H;AAC5H,WAAO,IAAP;AACD;;AAED,MAAI,2BAA2B,iBAAiB,uBAAhD,EAAyE;AACvE,SAAK,aAAL,IAAsB,WAAW,aAAX,CAAtB,EAAiD;AAC/C,UAAI,wBAAwB,WAAxB,CAAoC,OAApC,CAA4C,aAA5C,IAA6D,CAAC,CAAlE,EAAqE;AACnE,eAAO,IAAP;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,eAAT,CAAyB,UAAzB,EAAqC;AACnC,MAAI,SAAJ;AACA,MAAI,aAAJ;;AAEA,OAAK,aAAL,IAAsB,UAAtB,EAAkC;AAChC,QAAI,cAAc,SAAd,IAA2B,WAAW,aAAX,EAA0B,SAA1B,IAAuC,SAAtE,EAAiF;AAC/E,aAAO,IAAP;AACD;;AAED,gBAAY,WAAW,aAAX,EAA0B,SAAtC;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,WAAT,CAAqB,UAArB,EAAiC,aAAjC,EAAgD,SAAhD,EAA2D;AACzD,MAAI,aAAa,YAAY,aAAZ,CAAjB;AACA,MAAI,sBAAsB,CACxB,MAAM,QADkB,EAExB,CAAC,MAAM,aAAP,EAAsB,aAAtB,CAFwB,EAGxB,CAAC,MAAM,cAAP,EAAuB,WAAW,YAAlC,CAHwB,CAA1B;AAKA,MAAI,cAAc,WAAW,mBAAX,CAAlB;AACA,MAAI,SAAJ;AACA,MAAI,WAAJ;AACA,MAAI,CAAJ,EAAO,CAAP;;AAEA,qBAAmB,CAAC,WAAD,CAAnB,EAAkC,SAAlC,EAA6C,EAA7C;;AAEA,OAAK,IAAI,CAAJ,EAAO,IAAI,WAAW,UAAX,CAAsB,MAAtC,EAA8C,IAAI,CAAlD,EAAqD,GAArD,EAA0D;AACxD,gBAAY,WAAW,WAAW,UAAX,CAAsB,CAAtB,CAAX,CAAZ;AACA,kBAAc,YAAY,UAAU,IAAtB,EAA4B,WAA1C;;AAEA,QAAI,CAAC,gBAAgB,YAAY,IAAZ,CAAiB,IAAjB,EAAuB,SAAvB,CAAhB,EAAmD,YAAY,UAAZ,CAAuB,CAAvB,CAAnD,EAA8E,SAA9E,CAAL,EAA+F;AAC7F,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED,SAAS,SAAT,CAAmB,UAAnB,EAA+B;AAC7B,MAAI,YAAY,IAAhB;AACA,MAAI,YAAJ;AACA,MAAI,aAAJ;AACA,MAAI,SAAJ;AACA,MAAI,UAAJ;AACA,MAAI,MAAJ;;AAEA,OAAK,aAAL,IAAsB,UAAtB,EAAkC;AAChC,gBAAY,WAAW,aAAX,CAAZ;AACA,iBAAa,YAAY,aAAZ,CAAb;;AAEA,QAAI,EAAE,aAAa,UAAf,CAAJ,EAAgC;AAC9B;AACD;;AAED,0BAAsB,CAAC,UAAU,GAAV,CAAc,UAAU,QAAxB,CAAD,CAAtB,EAA2D,qBAA3D;AACA,aAAS,WAAW,OAAX,CAAmB,SAAnB,EAA8B,WAA9B,CAAT;;AAEA,mBAAe,OAAO,MAAtB;;AAEA,QAAI,cAAc,IAAd,IAAsB,iBAAiB,SAA3C,EAAsD;AACpD,aAAO,KAAP;AACD;;AAED,gBAAY,YAAZ;AACD;;AAED,SAAO,IAAP;AACD;;AAED,SAAS,YAAT,CAAsB,UAAtB,EAAkC;AAChC,MAAI,aAAJ;AACA,MAAI,YAAY,IAAhB;AACA,MAAI,YAAJ;;AAEA,OAAK,aAAL,IAAsB,UAAtB,EAAkC;AAChC,mBAAe,WAAW,WAAW,aAAX,CAAX,CAAf;;AAEA,QAAI,cAAc,IAAd,IAAsB,cAAc,YAAxC,EAAsD;AACpD,aAAO,IAAP;AACD;;AAED,gBAAY,YAAZ;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAAS,yBAAT,CAAmC,UAAnC,EAA+C,mBAA/C,EAAoE,aAApE,EAAmF,SAAnF,EAA8F;AAC5F,MAAI,eAAe,kCAAkC,mBAAlC,EAAuD,aAAvD,EAAsE,SAAtE,CAAnB;AACA,MAAI,eAAe,kCAAkC,mBAAlC,EAAuD,aAAvD,EAAsE,SAAtE,CAAnB;AACA,MAAI,yBAAyB,aAAa,CAAb,CAA7B;AACA,MAAI,0BAA0B,aAAa,CAAb,CAA9B;AACA,MAAI,qBAAqB,cAAc,sBAAd,EAAsC,MAAtC,GAA+C,cAAc,uBAAd,EAAuC,MAA/G;AACA,MAAI,oBAAoB,qBAAqB,sBAArB,GAA8C,uBAAtE;AACA,MAAI,cAAc,qBAAqB,aAAa,CAAb,CAArB,GAAuC,aAAa,CAAb,CAAzD;AACA,MAAI,gBAAgB,qBAAqB,aAAa,CAAb,CAArB,GAAuC,aAAa,CAAb,CAA3D;AACA,MAAI,MAAM,oBAAoB,OAAO,IAAP,CAAY,mBAAZ,EAAiC,CAAjC,CAApB,EAAyD,GAAnE;AACA,MAAI,aAAJ;AACA,MAAI,YAAJ;AACA,MAAI,YAAJ;AACA,MAAI,QAAJ;;AAEA,cAAY,QAAZ,GAAuB,IAAI,MAA3B;AACA,cAAY,SAAZ,GAAwB,IAAxB;AACA,cAAY,KAAZ,GAAoB,IAApB;AACA,cAAY,GAAZ,GAAkB,GAAlB;AACA,cAAY,GAAZ,CAAgB,IAAhB,CAAqB,kBAAkB,CAAlB,CAArB;;AAEA,aAAW,IAAX,CAAgB,WAAhB;;AAEA,OAAK,aAAL,IAAsB,mBAAtB,EAA2C;AACzC,mBAAe,oBAAoB,aAApB,CAAf;AACA,iBAAa,MAAb,GAAsB,IAAtB;;AAEA,QAAI,aAAa,IAAb,IAAqB,aAAzB,EAAwC;AACtC,qBAAe,cAAc,aAAa,IAA3B,CAAf;AACA,iBAAW,YAAY,iBAAZ,EAA+B,aAA/B,CAAX;;AAEA,mBAAa,QAAb,GAAwB,IAAI,MAA5B;AACA,mBAAa,GAAb,GAAmB,GAAnB;AACA,mBAAa,GAAb,CAAiB,IAAjB,CAAsB,QAAtB;;AAEA,iBAAW,IAAX,CAAgB,YAAhB;AACD;AACF;AACF;;AAED,SAAS,iCAAT,CAA2C,UAA3C,EAAuD,aAAvD,EAAsE,SAAtE,EAAiF;AAC/E,MAAI,iBAAiB,EAArB;AACA,MAAI,oBAAoB,EAAxB;AACA,MAAI,uBAAuB,EAA3B;AACA,MAAI,aAAa,YAAY,aAAZ,CAAjB;AACA,MAAI,iBAAiB,CACnB,MAAM,QADa,EAEnB,CAAC,MAAM,aAAP,EAAsB,aAAtB,CAFmB,EAGnB,CAAC,MAAM,cAAP,EAAuB,WAAW,YAAlC,CAHmB,CAArB;AAKA,MAAI,cAAc,WAAW,cAAX,CAAlB;AACA,MAAI,SAAJ;AACA,MAAI,aAAJ;AACA,MAAI,YAAJ;AACA,MAAI,YAAJ;AACA,MAAI,CAAJ,EAAO,CAAP;;AAEA,qBAAmB,CAAC,WAAD,CAAnB,EAAkC,SAAlC,EAA6C,EAA7C;;AAEA,OAAK,IAAI,CAAJ,EAAO,IAAI,WAAW,UAAX,CAAsB,MAAtC,EAA8C,IAAI,CAAlD,EAAqD,GAArD,EAA0D;AACxD,gBAAY,WAAW,WAAW,UAAX,CAAsB,CAAtB,CAAX,CAAZ;;AAEA,QAAI,WAAW,SAAX,CAAJ,EAA2B;AACzB,sBAAgB,UAAU,GAAV,CAAc,UAAU,QAAxB,EAAkC,KAAlC,CAAwC,CAAxC,EAA2C,CAA3C,CAAhB;AACA,YAAM,SAAN,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,aAA3B,EAA0C,UAAU,KAApD;AACA,qBAAe,IAAf,CAAoB,aAApB;;AAEA,qBAAe,UAAU,SAAV,CAAf;AACA,mBAAa,KAAb,GAAqB,oBAAoB,UAApB,EAAgC,aAAa,IAA7C,CAArB;;AAEA,kBAAY,UAAZ,CAAuB,CAAvB,IAA4B,YAA5B;AACA,wBAAkB,UAAU,IAA5B,IAAoC,UAAU,SAAV,CAApC;AACD,KAVD,MAUO;AACL,qBAAe,UAAU,SAAV,CAAf;AACA,mBAAa,GAAb,GAAmB,UAAU,GAA7B;AACA,kBAAY,UAAZ,CAAuB,CAAvB,IAA4B,YAA5B;;AAEA,2BAAqB,UAAU,IAA/B,IAAuC,SAAvC;AACD;AACF;;AAED,iBAAe,aAAa,oBAAb,EAAmC,CAAnC,CAAf;AACA,iBAAe,CAAf,EAAkB,IAAlB,CAAuB,YAAvB;;AAEA,wBAAsB,CAAC,WAAD,CAAtB,EAAqC,qBAArC;;AAEA,mBAAiB,eAAe,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAAjB;AACA,QAAM,SAAN,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,cAA3B,EAA2C,YAAY,KAAvD;;AAEA,iBAAe,OAAf,CAAuB,cAAvB;;AAEA,SAAO,CAAC,cAAD,EAAiB,WAAjB,EAA8B,iBAA9B,CAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,UAA7B,EAAyC,YAAzC,EAAuD;AACrD,MAAI,aAAa,YAAY,YAAZ,CAAjB;;AAEA,MAAI,gBAAgB,UAApB,EAAgC;AAC9B,WAAO,WAAW,WAAW,UAAtB,EAAkC,KAAzC;AACD,GAFD,MAEO;AACL,WAAO,CAAC,CAAC,MAAM,cAAP,EAAuB,WAAW,YAAlC,CAAD,CAAP;AACD;AACF;;AAED,SAAS,YAAT,CAAsB,UAAtB,EAAkC,EAAlC,EAAsC;AACpC,MAAI,WAAW,EAAf;AACA,MAAI,SAAJ;AACA,MAAI,aAAJ;AACA,MAAI,iBAAJ;AACA,MAAI,aAAJ;;AAEA,OAAK,aAAL,IAAsB,UAAtB,EAAkC;AAChC,gBAAY,WAAW,aAAX,CAAZ;AACA,oBAAgB,UAAU,GAAV,CAAc,UAAU,QAAxB,CAAhB;AACA,wBAAoB,cAAc,EAAd,EAAkB,cAAc,EAAd,EAAkB,MAAlB,GAA2B,CAA7C,CAApB;;AAEA,UAAM,SAAN,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,QAA3B,EAAqC,iBAArC;AACD;;AAED,SAAO,SAAS,IAAT,CAAc,cAAd,CAAP;AACD;;AAED,SAAS,cAAT,CAAwB,SAAxB,EAAmC,SAAnC,EAA8C;AAC5C,MAAI,QAAQ,UAAU,CAAV,CAAZ;AACA,MAAI,QAAQ,UAAU,CAAV,CAAZ;AACA,MAAI,UAAU,UAAU,CAAV,CAAd;AACA,MAAI,UAAU,UAAU,CAAV,CAAd;;AAEA,MAAI,QAAQ,KAAZ,EAAmB;AACjB,WAAO,CAAC,CAAR;AACD,GAFD,MAEO,IAAI,UAAU,KAAd,EAAqB;AAC1B,WAAO,UAAU,OAAV,GAAoB,CAAC,CAArB,GAAyB,CAAhC;AACD,GAFM,MAEA;AACL,WAAO,CAAP;AACD;AACF;;AAED,SAAS,iCAAT,CAA2C,UAA3C,EAAuD,aAAvD,EAAsE,SAAtE,EAAiF;AAC/E,MAAI,iBAAiB,EAArB;AACA,MAAI,oBAAoB,EAAxB;AACA,MAAI,uBAAuB,EAA3B;AACA,MAAI,aAAa,YAAY,aAAZ,CAAjB;AACA,MAAI,iBAAiB,CACnB,MAAM,QADa,EAEnB,CAAC,MAAM,aAAP,EAAsB,aAAtB,CAFmB,EAGnB,CAAC,MAAM,cAAP,EAAuB,SAAvB,CAHmB,CAArB;AAKA,MAAI,cAAc,WAAW,cAAX,CAAlB;AACA,MAAI,SAAJ;AACA,MAAI,aAAJ;AACA,MAAI,YAAJ;AACA,MAAI,aAAJ;AACA,MAAI,CAAJ,EAAO,CAAP;;AAEA,qBAAmB,CAAC,WAAD,CAAnB,EAAkC,SAAlC,EAA6C,EAA7C;;AAEA,OAAK,IAAI,CAAJ,EAAO,IAAI,WAAW,UAAX,CAAsB,MAAtC,EAA8C,IAAI,CAAlD,EAAqD,GAArD,EAA0D;AACxD,gBAAY,WAAW,WAAW,UAAX,CAAsB,CAAtB,CAAX,CAAZ;;AAEA,QAAI,WAAW,SAAX,CAAJ,EAA2B;AACzB,wBAAkB,UAAU,IAA5B,IAAoC,SAApC;AACD,KAFD,MAEO;AACL,sBAAgB,UAAU,GAAV,CAAc,UAAU,QAAxB,EAAkC,KAAlC,CAAwC,CAAxC,EAA2C,CAA3C,CAAhB;AACA,YAAM,SAAN,CAAgB,IAAhB,CAAqB,KAArB,CAA2B,aAA3B,EAA0C,UAAU,KAApD;AACA,qBAAe,IAAf,CAAoB,aAApB;;AAEA,2BAAqB,UAAU,IAA/B,IAAuC,UAAU,SAAV,CAAvC;AACD;AACF;;AAED,iBAAe,aAAa,iBAAb,EAAgC,CAAhC,CAAf;AACA,iBAAe,CAAf,EAAkB,IAAlB,CAAuB,YAAvB;;AAEA,kBAAgB,aAAa,iBAAb,EAAgC,CAAhC,CAAhB;AACA,iBAAe,CAAf,EAAkB,IAAlB,CAAuB,aAAvB;;AAEA,iBAAe,OAAf,CAAuB,cAAvB;;AAEA,SAAO,CAAC,cAAD,EAAiB,WAAjB,EAA8B,oBAA9B,CAAP;AACD;;AAED,SAAS,WAAT,CAAqB,MAArB,EAA6B,aAA7B,EAA4C;AAC1C,MAAI,CAAJ,EAAO,CAAP;;AAEA,OAAK,IAAI,CAAJ,EAAO,IAAI,OAAO,MAAvB,EAA+B,IAAI,CAAnC,EAAsC,GAAtC,EAA2C;AACzC,QAAI,OAAO,CAAP,EAAU,CAAV,EAAa,CAAb,KAAmB,aAAvB,EAAsC;AACpC,aAAO,OAAO,CAAP,CAAP;AACD;AACF;AACF;;AAED,SAAS,oBAAT,CAA8B,UAA9B,EAA0C,mBAA1C,EAA+D,aAA/D,EAA8E,SAA9E,EAAyF;AACvF,MAAI,aAAa,YAAY,aAAZ,CAAjB;AACA,MAAI,YAAJ;AACA,MAAI,aAAJ;AACA,MAAI,sBAAsB,CACxB,MAAM,QADkB,EAExB,CAAC,MAAM,aAAP,EAAsB,aAAtB,CAFwB,EAGxB,CAAC,MAAM,cAAP,EAAuB,WAAW,YAAlC,CAHwB,CAA1B;AAKA,MAAI,GAAJ;;AAEA,MAAI,cAAc,WAAW,mBAAX,CAAlB;AACA,cAAY,SAAZ,GAAwB,IAAxB;AACA,cAAY,KAAZ,GAAoB,IAApB;;AAEA,qBAAmB,CAAC,WAAD,CAAnB,EAAkC,SAAlC,EAA6C,EAA7C;;AAEA,OAAK,IAAI,IAAI,CAAR,EAAW,IAAI,WAAW,UAAX,CAAsB,MAA1C,EAAkD,IAAI,CAAtD,EAAyD,GAAzD,EAA8D;AAC5D,QAAI,YAAY,oBAAoB,WAAW,UAAX,CAAsB,CAAtB,CAApB,CAAhB;;AAEA,gBAAY,UAAZ,CAAuB,CAAvB,IAA4B,UAAU,SAAV,CAA5B;AACA,gBAAY,SAAZ,GAAwB,UAAU,SAAlC;;AAEA,UAAM,UAAU,GAAhB;AACD;;AAED,OAAK,IAAI,aAAT,IAA0B,mBAA1B,EAA+C;AAC7C,wBAAoB,aAApB,EAAmC,MAAnC,GAA4C,IAA5C;AACD;;AAED,iBAAe,aAAa,mBAAb,EAAkC,CAAlC,CAAf;AACA,sBAAoB,CAApB,EAAuB,IAAvB,CAA4B,YAA5B;;AAEA,kBAAgB,aAAa,mBAAb,EAAkC,CAAlC,CAAhB;AACA,sBAAoB,CAApB,EAAuB,IAAvB,CAA4B,aAA5B;;AAEA,cAAY,QAAZ,GAAuB,IAAI,MAA3B;AACA,cAAY,GAAZ,GAAkB,GAAlB;AACA,cAAY,GAAZ,CAAgB,IAAhB,CAAqB,mBAArB;;AAEA,aAAW,IAAX,CAAgB,WAAhB;AACD;;AAED,OAAO,OAAP,GAAiB,mBAAjB","file":"merge-into-shorthands-compiled.js","sourcesContent":["var everyValuesPair = require('./every-values-pair');\nvar hasInherit = require('./has-inherit');\nvar populateComponents = require('./populate-components');\n\nvar compactable = require('../compactable');\nvar deepClone = require('../clone').deep;\nvar restoreWithComponents = require('../restore-with-components');\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\nvar wrapSingle = require('../../wrap-for-optimizing').single;\n\nvar serializeBody = require('../../../writer/one-time').body;\nvar Token = require('../../../tokenizer/token');\n\nfunction mergeIntoShorthands(properties, validator) {\n  var candidates = {};\n  var descriptor;\n  var componentOf;\n  var property;\n  var i, l;\n  var j, m;\n\n  // there is no shorthand property made up of less than 3 longhands\n  if (properties.length < 3) {\n    return;\n  }\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n    descriptor = compactable[property.name];\n\n    if (property.unused) {\n      continue;\n    }\n\n    if (property.hack) {\n      continue;\n    }\n\n    if (property.block) {\n      continue;\n    }\n\n    invalidateOrCompact(properties, i, candidates, validator);\n\n    if (descriptor && descriptor.componentOf) {\n      for (j = 0, m = descriptor.componentOf.length; j < m; j++) {\n        componentOf = descriptor.componentOf[j];\n\n        candidates[componentOf] = candidates[componentOf] || {};\n        candidates[componentOf][property.name] = property;\n      }\n    }\n  }\n\n  invalidateOrCompact(properties, i, candidates, validator);\n}\n\nfunction invalidateOrCompact(properties, position, candidates, validator) {\n  var invalidatedBy = properties[position];\n  var shorthandName;\n  var shorthandDescriptor;\n  var candidateComponents;\n\n  for (shorthandName in candidates) {\n    if (undefined !== invalidatedBy && shorthandName == invalidatedBy.name) {\n      continue;\n    }\n\n    shorthandDescriptor = compactable[shorthandName];\n    candidateComponents = candidates[shorthandName];\n    if (invalidatedBy && invalidates(candidates, shorthandName, invalidatedBy)) {\n      delete candidates[shorthandName];\n      continue;\n    }\n\n    if (shorthandDescriptor.components.length > Object.keys(candidateComponents).length) {\n      continue;\n    }\n\n    if (mixedImportance(candidateComponents)) {\n      continue;\n    }\n\n    if (!overridable(candidateComponents, shorthandName, validator)) {\n      continue;\n    }\n\n    if (!mergeable(candidateComponents)) {\n      continue;\n    }\n\n    if (mixedInherit(candidateComponents)) {\n      replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator);\n    } else {\n      replaceWithShorthand(properties, candidateComponents, shorthandName, validator);\n    }\n  }\n}\n\nfunction invalidates(candidates, shorthandName, invalidatedBy) {\n  var shorthandDescriptor = compactable[shorthandName];\n  var invalidatedByDescriptor = compactable[invalidatedBy.name];\n  var componentName;\n\n  if ('overridesShorthands' in shorthandDescriptor && shorthandDescriptor.overridesShorthands.indexOf(invalidatedBy.name) > -1) {\n    return true;\n  }\n\n  if (invalidatedByDescriptor && 'componentOf' in invalidatedByDescriptor) {\n    for (componentName in candidates[shorthandName]) {\n      if (invalidatedByDescriptor.componentOf.indexOf(componentName) > -1) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction mixedImportance(components) {\n  var important;\n  var componentName;\n\n  for (componentName in components) {\n    if (undefined !== important && components[componentName].important != important) {\n      return true;\n    }\n\n    important = components[componentName].important;\n  }\n\n  return false;\n}\n\nfunction overridable(components, shorthandName, validator) {\n  var descriptor = compactable[shorthandName];\n  var newValuePlaceholder = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var newProperty = wrapSingle(newValuePlaceholder);\n  var component;\n  var mayOverride;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n    mayOverride = compactable[component.name].canOverride;\n\n    if (!everyValuesPair(mayOverride.bind(null, validator), newProperty.components[i], component)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction mergeable(components) {\n  var lastCount = null;\n  var currentCount;\n  var componentName;\n  var component;\n  var descriptor;\n  var values;\n\n  for (componentName in components) {\n    component = components[componentName];\n    descriptor = compactable[componentName];\n\n    if (!('restore' in descriptor)) {\n      continue;\n    }\n\n    restoreFromOptimizing([component.all[component.position]], restoreWithComponents);\n    values = descriptor.restore(component, compactable);\n\n    currentCount = values.length;\n\n    if (lastCount !== null && currentCount !== lastCount) {\n      return false;\n    }\n\n    lastCount = currentCount;\n  }\n\n  return true;\n}\n\nfunction mixedInherit(components) {\n  var componentName;\n  var lastValue = null;\n  var currentValue;\n\n  for (componentName in components) {\n    currentValue = hasInherit(components[componentName]);\n\n    if (lastValue !== null && lastValue !== currentValue) {\n      return true;\n    }\n\n    lastValue = currentValue;\n  }\n\n  return false;\n}\n\nfunction replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator) {\n  var viaLonghands = buildSequenceWithInheritLonghands(candidateComponents, shorthandName, validator);\n  var viaShorthand = buildSequenceWithInheritShorthand(candidateComponents, shorthandName, validator);\n  var longhandTokensSequence = viaLonghands[0];\n  var shorthandTokensSequence = viaShorthand[0];\n  var isLonghandsShorter = serializeBody(longhandTokensSequence).length < serializeBody(shorthandTokensSequence).length;\n  var newTokensSequence = isLonghandsShorter ? longhandTokensSequence : shorthandTokensSequence;\n  var newProperty = isLonghandsShorter ? viaLonghands[1] : viaShorthand[1];\n  var newComponents = isLonghandsShorter ? viaLonghands[2] : viaShorthand[2];\n  var all = candidateComponents[Object.keys(candidateComponents)[0]].all;\n  var componentName;\n  var oldComponent;\n  var newComponent;\n  var newToken;\n\n  newProperty.position = all.length;\n  newProperty.shorthand = true;\n  newProperty.dirty = true;\n  newProperty.all = all;\n  newProperty.all.push(newTokensSequence[0]);\n\n  properties.push(newProperty);\n\n  for (componentName in candidateComponents) {\n    oldComponent = candidateComponents[componentName];\n    oldComponent.unused = true;\n\n    if (oldComponent.name in newComponents) {\n      newComponent = newComponents[oldComponent.name];\n      newToken = findTokenIn(newTokensSequence, componentName);\n\n      newComponent.position = all.length;\n      newComponent.all = all;\n      newComponent.all.push(newToken);\n\n      properties.push(newComponent);\n    }\n  }\n}\n\nfunction buildSequenceWithInheritLonghands(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = compactable[shorthandName];\n  var shorthandToken = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var newComponent;\n  var nameMetadata;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n\n      newComponent = deepClone(component);\n      newComponent.value = inferComponentValue(components, newComponent.name);\n\n      newProperty.components[i] = newComponent;\n      inheritComponents[component.name] = deepClone(component);\n    } else {\n      newComponent = deepClone(component);\n      newComponent.all = component.all;\n      newProperty.components[i] = newComponent;\n\n      nonInheritComponents[component.name] = component;\n    }\n  }\n\n  nameMetadata = joinMetadata(nonInheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n\n  restoreFromOptimizing([newProperty], restoreWithComponents);\n\n  shorthandToken = shorthandToken.slice(0, 2);\n  Array.prototype.push.apply(shorthandToken, newProperty.value);\n\n  tokensSequence.unshift(shorthandToken);\n\n  return [tokensSequence, newProperty, inheritComponents];\n}\n\nfunction inferComponentValue(components, propertyName) {\n  var descriptor = compactable[propertyName];\n\n  if ('oppositeTo' in descriptor) {\n    return components[descriptor.oppositeTo].value;\n  } else {\n    return [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n  }\n}\n\nfunction joinMetadata(components, at) {\n  var metadata = [];\n  var component;\n  var originalValue;\n  var componentMetadata;\n  var componentName;\n\n  for (componentName in components) {\n    component = components[componentName];\n    originalValue = component.all[component.position];\n    componentMetadata = originalValue[at][originalValue[at].length - 1];\n\n    Array.prototype.push.apply(metadata, componentMetadata);\n  }\n\n  return metadata.sort(metadataSorter);\n}\n\nfunction metadataSorter(metadata1, metadata2) {\n  var line1 = metadata1[0];\n  var line2 = metadata2[0];\n  var column1 = metadata1[1];\n  var column2 = metadata2[1];\n\n  if (line1 < line2) {\n    return -1;\n  } else if (line1 === line2) {\n    return column1 < column2 ? -1 : 1;\n  } else {\n    return 1;\n  }\n}\n\nfunction buildSequenceWithInheritShorthand(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = compactable[shorthandName];\n  var shorthandToken = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, 'inherit']\n  ];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var nameMetadata;\n  var valueMetadata;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      inheritComponents[component.name] = component;\n    } else {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n\n      nonInheritComponents[component.name] = deepClone(component);\n    }\n  }\n\n  nameMetadata = joinMetadata(inheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n\n  valueMetadata = joinMetadata(inheritComponents, 2);\n  shorthandToken[2].push(valueMetadata);\n\n  tokensSequence.unshift(shorthandToken);\n\n  return [tokensSequence, newProperty, nonInheritComponents];\n}\n\nfunction findTokenIn(tokens, componentName) {\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    if (tokens[i][1][1] == componentName) {\n      return tokens[i];\n    }\n  }\n}\n\nfunction replaceWithShorthand(properties, candidateComponents, shorthandName, validator) {\n  var descriptor = compactable[shorthandName];\n  var nameMetadata;\n  var valueMetadata;\n  var newValuePlaceholder = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var all;\n\n  var newProperty = wrapSingle(newValuePlaceholder);\n  newProperty.shorthand = true;\n  newProperty.dirty = true;\n\n  populateComponents([newProperty], validator, []);\n\n  for (var i = 0, l = descriptor.components.length; i < l; i++) {\n    var component = candidateComponents[descriptor.components[i]];\n\n    newProperty.components[i] = deepClone(component);\n    newProperty.important = component.important;\n\n    all = component.all;\n  }\n\n  for (var componentName in candidateComponents) {\n    candidateComponents[componentName].unused = true;\n  }\n\n  nameMetadata = joinMetadata(candidateComponents, 1);\n  newValuePlaceholder[1].push(nameMetadata);\n\n  valueMetadata = joinMetadata(candidateComponents, 2);\n  newValuePlaceholder[2].push(valueMetadata);\n\n  newProperty.position = all.length;\n  newProperty.all = all;\n  newProperty.all.push(newValuePlaceholder);\n\n  properties.push(newProperty);\n}\n\nmodule.exports = mergeIntoShorthands;\n"]}