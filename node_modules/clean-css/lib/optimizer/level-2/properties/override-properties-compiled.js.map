{"version":3,"sources":["override-properties.js"],"names":[],"mappings":"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","file":"override-properties-compiled.js","sourcesContent":["var hasInherit = require('./has-inherit');\nvar everyValuesPair = require('./every-values-pair');\nvar findComponentIn = require('./find-component-in');\nvar isComponentOf = require('./is-component-of');\nvar isMergeableShorthand = require('./is-mergeable-shorthand');\nvar overridesNonComponentShorthand = require('./overrides-non-component-shorthand');\nvar sameVendorPrefixesIn = require('./vendor-prefixes').same;\n\nvar compactable = require('../compactable');\nvar deepClone = require('../clone').deep;\nvar deepClone = require('../clone').deep;\nvar restoreWithComponents = require('../restore-with-components');\nvar shallowClone = require('../clone').shallow;\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar Token = require('../../../tokenizer/token');\nvar Marker = require('../../../tokenizer/marker');\n\nvar serializeProperty = require('../../../writer/one-time').property;\n\nfunction wouldBreakCompatibility(property, validator) {\n  for (var i = 0; i < property.components.length; i++) {\n    var component = property.components[i];\n    var descriptor = compactable[component.name];\n    var canOverride = descriptor && descriptor.canOverride || canOverride.sameValue;\n\n    var _component = shallowClone(component);\n    _component.value = [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n\n    if (!everyValuesPair(canOverride.bind(null, validator), _component, component)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction overrideIntoMultiplex(property, by) {\n  by.unused = true;\n\n  turnIntoMultiplex(by, multiplexSize(property));\n  property.value = by.value;\n}\n\nfunction overrideByMultiplex(property, by) {\n  by.unused = true;\n  property.multiplex = true;\n  property.value = by.value;\n}\n\nfunction overrideSimple(property, by) {\n  by.unused = true;\n  property.value = by.value;\n}\n\nfunction override(property, by) {\n  if (by.multiplex)\n    overrideByMultiplex(property, by);\n  else if (property.multiplex)\n    overrideIntoMultiplex(property, by);\n  else\n    overrideSimple(property, by);\n}\n\nfunction overrideShorthand(property, by) {\n  by.unused = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    override(property.components[i], by.components[i], property.multiplex);\n  }\n}\n\nfunction turnIntoMultiplex(property, size) {\n  property.multiplex = true;\n\n  if (compactable[property.name].shorthand) {\n    turnShorthandValueIntoMultiplex(property, size);\n  } else {\n    turnLonghandValueIntoMultiplex(property, size);\n  }\n}\n\nfunction turnShorthandValueIntoMultiplex(property, size) {\n  var component;\n  var i, l;\n\n  for (i = 0, l = property.components.length; i < l; i++) {\n    component = property.components[i];\n\n    if (!component.multiplex) {\n      turnLonghandValueIntoMultiplex(component, size);\n    }\n  }\n}\n\nfunction turnLonghandValueIntoMultiplex(property, size) {\n  var withRealValue = compactable[property.name].intoMultiplexMode == 'real';\n  var withValue = withRealValue ?\n    property.value.slice(0) :\n    compactable[property.name].defaultValue;\n  var i = multiplexSize(property);\n  var j;\n  var m = withValue.length;\n\n  for (; i < size; i++) {\n    property.value.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n\n    if (Array.isArray(withValue)) {\n      for (j = 0; j < m; j++) {\n        property.value.push(withRealValue ? withValue[j] : [Token.PROPERTY_VALUE, withValue[j]]);\n      }\n    } else {\n      property.value.push(withRealValue ? withValue : [Token.PROPERTY_VALUE, withValue]);\n    }\n  }\n}\n\nfunction multiplexSize(component) {\n  var size = 0;\n\n  for (var i = 0, l = component.value.length; i < l; i++) {\n    if (component.value[i][1] == Marker.COMMA)\n      size++;\n  }\n\n  return size + 1;\n}\n\nfunction lengthOf(property) {\n  var fakeAsArray = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, property.name]\n  ].concat(property.value);\n  return serializeProperty([fakeAsArray], 0).length;\n}\n\nfunction moreSameShorthands(properties, startAt, name) {\n  // Since we run the main loop in `compactOverrides` backwards, at this point some\n  // properties may not be marked as unused.\n  // We should consider reverting the order if possible\n  var count = 0;\n\n  for (var i = startAt; i >= 0; i--) {\n    if (properties[i].name == name && !properties[i].unused)\n      count++;\n    if (count > 1)\n      break;\n  }\n\n  return count > 1;\n}\n\nfunction overridingFunction(shorthand, validator) {\n  for (var i = 0, l = shorthand.components.length; i < l; i++) {\n    if (!anyValue(validator.isUrl, shorthand.components[i]) && anyValue(validator.isFunction, shorthand.components[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction anyValue(fn, property) {\n  for (var i = 0, l = property.value.length; i < l; i++) {\n    if (property.value[i][1] == Marker.COMMA)\n      continue;\n\n    if (fn(property.value[i][1]))\n      return true;\n  }\n\n  return false;\n}\n\nfunction wouldResultInLongerValue(left, right) {\n  if (!left.multiplex && !right.multiplex || left.multiplex && right.multiplex)\n    return false;\n\n  var multiplex = left.multiplex ? left : right;\n  var simple = left.multiplex ? right : left;\n  var component;\n\n  var multiplexClone = deepClone(multiplex);\n  restoreFromOptimizing([multiplexClone], restoreWithComponents);\n\n  var simpleClone = deepClone(simple);\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthBefore = lengthOf(multiplexClone) + 1 + lengthOf(simpleClone);\n\n  if (left.multiplex) {\n    component = findComponentIn(multiplexClone, simpleClone);\n    overrideIntoMultiplex(component, simpleClone);\n  } else {\n    component = findComponentIn(simpleClone, multiplexClone);\n    turnIntoMultiplex(simpleClone, multiplexSize(multiplexClone));\n    overrideByMultiplex(component, multiplexClone);\n  }\n\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthAfter = lengthOf(simpleClone);\n\n  return lengthBefore <= lengthAfter;\n}\n\nfunction isCompactable(property) {\n  return property.name in compactable;\n}\n\nfunction noneOverrideHack(left, right) {\n  return !left.multiplex &&\n    (left.name == 'background' || left.name == 'background-image') &&\n    right.multiplex &&\n    (right.name == 'background' || right.name == 'background-image') &&\n    anyLayerIsNone(right.value);\n}\n\nfunction anyLayerIsNone(values) {\n  var layers = intoLayers(values);\n\n  for (var i = 0, l = layers.length; i < l; i++) {\n    if (layers[i].length == 1 && layers[i][0][1] == 'none')\n      return true;\n  }\n\n  return false;\n}\n\nfunction intoLayers(values) {\n  var layers = [];\n\n  for (var i = 0, layer = [], l = values.length; i < l; i++) {\n    var value = values[i];\n    if (value[1] == Marker.COMMA) {\n      layers.push(layer);\n      layer = [];\n    } else {\n      layer.push(value);\n    }\n  }\n\n  layers.push(layer);\n  return layers;\n}\n\nfunction overrideProperties(properties, withMerging, compatibility, validator) {\n  var mayOverride, right, left, component;\n  var overriddenComponents;\n  var overriddenComponent;\n  var overridingComponent;\n  var overridable;\n  var i, j, k;\n\n  propertyLoop:\n  for (i = properties.length - 1; i >= 0; i--) {\n    right = properties[i];\n\n    if (!isCompactable(right))\n      continue;\n\n    if (right.block)\n      continue;\n\n    mayOverride = compactable[right.name].canOverride;\n\n    traverseLoop:\n    for (j = i - 1; j >= 0; j--) {\n      left = properties[j];\n\n      if (!isCompactable(left))\n        continue;\n\n      if (left.block)\n        continue;\n\n      if (left.unused || right.unused)\n        continue;\n\n      if (left.hack && !right.hack && !right.important || !left.hack && !left.important && right.hack)\n        continue;\n\n      if (left.important == right.important && left.hack[0] != right.hack[0])\n        continue;\n\n      if (left.important == right.important && (left.hack[0] != right.hack[0] || (left.hack[1] && left.hack[1] != right.hack[1])))\n        continue;\n\n      if (hasInherit(right))\n        continue;\n\n      if (noneOverrideHack(left, right))\n        continue;\n\n      if (right.shorthand && isComponentOf(right, left)) {\n        // maybe `left` can be overridden by `right` which is a shorthand?\n        if (!right.important && left.important)\n          continue;\n\n        if (!sameVendorPrefixesIn([left], right.components))\n          continue;\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator))\n          continue;\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        component = findComponentIn(right, left);\n        mayOverride = compactable[left.name].canOverride;\n        if (everyValuesPair(mayOverride.bind(null, validator), left, component)) {\n          left.unused = true;\n        }\n      } else if (right.shorthand && overridesNonComponentShorthand(right, left)) {\n        // `right` is a shorthand while `left` can be overriden by it, think `border` and `border-top`\n        if (!right.important && left.important) {\n          continue;\n        }\n\n        if (!sameVendorPrefixesIn([left], right.components)) {\n          continue;\n        }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) {\n          continue;\n        }\n\n        overriddenComponents = left.shorthand ?\n          left.components:\n          [left];\n\n        for (k = overriddenComponents.length - 1; k >= 0; k--) {\n          overriddenComponent = overriddenComponents[k];\n          overridingComponent = findComponentIn(right, overriddenComponent);\n          mayOverride = compactable[overriddenComponent.name].canOverride;\n\n          if (!everyValuesPair(mayOverride.bind(null, validator), left, overridingComponent)) {\n            continue traverseLoop;\n          }\n        }\n\n        left.unused = true;\n      } else if (withMerging && left.shorthand && !right.shorthand && isComponentOf(left, right, true)) {\n        // maybe `right` can be pulled into `left` which is a shorthand?\n        if (right.important && !left.important)\n          continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue;\n        }\n\n        // Pending more clever algorithm in #527\n        if (moreSameShorthands(properties, i - 1, left.name))\n          continue;\n\n        if (overridingFunction(left, validator))\n          continue;\n\n        if (!isMergeableShorthand(left))\n          continue;\n\n        component = findComponentIn(left, right);\n        if (everyValuesPair(mayOverride.bind(null, validator), component, right)) {\n          var disabledBackgroundMerging =\n            !compatibility.properties.backgroundClipMerging && component.name.indexOf('background-clip') > -1 ||\n            !compatibility.properties.backgroundOriginMerging && component.name.indexOf('background-origin') > -1 ||\n            !compatibility.properties.backgroundSizeMerging && component.name.indexOf('background-size') > -1;\n          var nonMergeableValue = compactable[right.name].nonMergeableValue === right.value[0][1];\n\n          if (disabledBackgroundMerging || nonMergeableValue)\n            continue;\n\n          if (!compatibility.properties.merging && wouldBreakCompatibility(left, validator))\n            continue;\n\n          if (component.value[0][1] != right.value[0][1] && (hasInherit(left) || hasInherit(right)))\n            continue;\n\n          if (wouldResultInLongerValue(left, right))\n            continue;\n\n          if (!left.multiplex && right.multiplex)\n            turnIntoMultiplex(left, multiplexSize(right));\n\n          override(component, right);\n          left.dirty = true;\n        }\n      } else if (withMerging && left.shorthand && right.shorthand && left.name == right.name) {\n        // merge if all components can be merged\n\n        if (!left.multiplex && right.multiplex)\n          continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue propertyLoop;\n        }\n\n        if (right.important && !left.important) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        for (k = left.components.length - 1; k >= 0; k--) {\n          var leftComponent = left.components[k];\n          var rightComponent = right.components[k];\n\n          mayOverride = compactable[leftComponent.name].canOverride;\n          if (!everyValuesPair(mayOverride.bind(null, validator), leftComponent, rightComponent))\n            continue propertyLoop;\n        }\n\n        overrideShorthand(left, right);\n        left.dirty = true;\n      } else if (withMerging && left.shorthand && right.shorthand && isComponentOf(left, right)) {\n        // border is a shorthand but any of its components is a shorthand too\n\n        if (!left.important && right.important)\n          continue;\n\n        component = findComponentIn(left, right);\n        mayOverride = compactable[right.name].canOverride;\n        if (!everyValuesPair(mayOverride.bind(null, validator), component, right))\n          continue;\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        var rightRestored = compactable[right.name].restore(right, compactable);\n        if (rightRestored.length > 1)\n          continue;\n\n        component = findComponentIn(left, right);\n        override(component, right);\n        right.dirty = true;\n      } else if (left.name == right.name) {\n        // two non-shorthands should be merged based on understandability\n        overridable = true;\n\n        if (right.shorthand) {\n          for (k = right.components.length - 1; k >= 0 && overridable; k--) {\n            overriddenComponent = left.components[k];\n            overridingComponent = right.components[k];\n            mayOverride = compactable[overridingComponent.name].canOverride;\n\n            overridable = overridable && everyValuesPair(mayOverride.bind(null, validator), overriddenComponent, overridingComponent);\n          }\n        } else {\n          mayOverride = compactable[right.name].canOverride;\n          overridable = everyValuesPair(mayOverride.bind(null, validator), left, right);\n        }\n\n        if (left.important && !right.important && overridable) {\n          right.unused = true;\n          continue;\n        }\n\n        if (!left.important && right.important && overridable) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!overridable) {\n          continue;\n        }\n\n        left.unused = true;\n      }\n    }\n  }\n}\n\nmodule.exports = overrideProperties;\n"]}