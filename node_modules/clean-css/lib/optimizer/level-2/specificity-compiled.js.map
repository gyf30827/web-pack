{"version":3,"sources":["specificity.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,wBAAR,CAAb;;AAEA,IAAI,WAAW;AACb,oBAAkB,GADL;AAEb,cAAY,GAFC;AAGb,OAAK,GAHQ;AAIb,QAAM,GAJO;AAKb,wBAAsB,GALT;AAMb,UAAQ;AANK,CAAf;;AASA,IAAI,iBAAiB,UAArB;AACA,IAAI,aAAa,OAAjB;AACA,IAAI,oBAAoB,aAAxB;;AAEA,SAAS,WAAT,CAAqB,QAArB,EAA+B;AAC7B,MAAI,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;AACA,MAAI,SAAJ;AACA,MAAI,SAAJ;AACA,MAAI,cAAJ;AACA,MAAI,cAAJ;AACA,MAAI,oBAAoB,CAAxB;AACA,MAAI,6BAAJ;AACA,MAAI,uBAAuB,KAA3B;AACA,MAAI,iBAAiB,KAArB;AACA,MAAI,CAAJ,EAAO,CAAP;;AAEA,OAAK,IAAI,CAAJ,EAAO,IAAI,SAAS,MAAzB,EAAiC,IAAI,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,gBAAY,SAAS,CAAT,CAAZ;;AAEA,QAAI,SAAJ,EAAe;AACb;AACD,KAFD,MAEO,IAAI,aAAa,OAAO,YAApB,IAAoC,CAAC,cAArC,IAAuD,CAAC,cAA5D,EAA4E;AACjF,uBAAiB,IAAjB;AACD,KAFM,MAEA,IAAI,aAAa,OAAO,YAApB,IAAoC,CAAC,cAArC,IAAuD,cAA3D,EAA2E;AAChF,uBAAiB,KAAjB;AACD,KAFM,MAEA,IAAI,aAAa,OAAO,YAApB,IAAoC,CAAC,cAArC,IAAuD,CAAC,cAA5D,EAA4E;AACjF,uBAAiB,IAAjB;AACD,KAFM,MAEA,IAAI,aAAa,OAAO,YAApB,IAAoC,cAApC,IAAsD,CAAC,cAA3D,EAA2E;AAChF,uBAAiB,KAAjB;AACD,KAFM,MAEA,IAAI,kBAAkB,cAAtB,EAAsC;AAC3C;AACD,KAFM,MAEA,IAAI,oBAAoB,CAApB,IAAyB,CAAC,oBAA9B,EAAoD;AACzD;AACD,KAFM,MAEA,IAAI,aAAa,OAAO,kBAAxB,EAA4C;AACjD;AACD,KAFM,MAEA,IAAI,aAAa,OAAO,mBAApB,IAA2C,qBAAqB,CAApE,EAAuE;AAC5E;AACA,6BAAuB,KAAvB;AACD,KAHM,MAGA,IAAI,aAAa,OAAO,mBAAxB,EAA6C;AAClD;AACD,KAFM,MAEA,IAAI,aAAa,SAAS,IAA1B,EAAgC;AACrC,aAAO,CAAP;AACD,KAFM,MAEA,IAAI,aAAa,SAAS,GAAtB,IAA6B,aAAa,OAAO,mBAArD,EAA0E;AAC/E,aAAO,CAAP;AACD,KAFM,MAEA,IAAI,aAAa,SAAS,MAAtB,IAAgC,CAAC,cAAjC,IAAmD,CAAC,iBAAiB,QAAjB,EAA2B,CAA3B,CAAxD,EAAuF;AAC5F,aAAO,CAAP;AACA,6BAAuB,KAAvB;AACD,KAHM,MAGA,IAAI,aAAa,SAAS,MAA1B,EAAkC;AACvC,6BAAuB,IAAvB;AACD,KAFM,MAEA,IAAI,CAAC,MAAM,CAAN,IAAW,6BAAZ,KAA8C,eAAe,IAAf,CAAoB,SAApB,CAAlD,EAAkF;AACvF,aAAO,CAAP;AACD;;AAED,gBAAY,aAAa,OAAO,UAAhC;AACA,qBAAiB,aAAa,SAAS,MAAvC;AACA,oCAAgC,CAAC,SAAD,IAAc,kBAAkB,IAAlB,CAAuB,SAAvB,CAA9C;AACD;;AAED,SAAO,MAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,QAA1B,EAAoC,KAApC,EAA2C;AACzC,SAAO,SAAS,OAAT,CAAiB,UAAjB,EAA6B,KAA7B,MAAwC,KAA/C;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"specificity-compiled.js","sourcesContent":["var Marker = require('../../tokenizer/marker');\n\nvar Selector = {\n  ADJACENT_SIBLING: '+',\n  DESCENDANT: '>',\n  DOT: '.',\n  HASH: '#',\n  NON_ADJACENT_SIBLING: '~',\n  PSEUDO: ':'\n};\n\nvar LETTER_PATTERN = /[a-zA-Z]/;\nvar NOT_PREFIX = ':not(';\nvar SEPARATOR_PATTERN = /[\\s,\\(>~\\+]/;\n\nfunction specificity(selector) {\n  var result = [0, 0, 0];\n  var character;\n  var isEscaped;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var roundBracketLevel = 0;\n  var couldIntroduceNewTypeSelector;\n  var withinNotPseudoClass = false;\n  var wasPseudoClass = false;\n  var i, l;\n\n  for (i = 0, l = selector.length; i < l; i++) {\n    character = selector[i];\n\n    if (isEscaped) {\n      // noop\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isSingleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && isSingleQuoted) {\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = false;\n    } else if (isSingleQuoted || isDoubleQuoted) {\n      continue;\n    } else if (roundBracketLevel > 0 && !withinNotPseudoClass) {\n      // noop\n    } else if (character == Marker.OPEN_ROUND_BRACKET) {\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && roundBracketLevel == 1) {\n      roundBracketLevel--;\n      withinNotPseudoClass = false;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET) {\n      roundBracketLevel--;\n    } else if (character == Selector.HASH) {\n      result[0]++;\n    } else if (character == Selector.DOT || character == Marker.OPEN_SQUARE_BRACKET) {\n      result[1]++;\n    } else if (character == Selector.PSEUDO && !wasPseudoClass && !isNotPseudoClass(selector, i)) {\n      result[1]++;\n      withinNotPseudoClass = false;\n    } else if (character == Selector.PSEUDO) {\n      withinNotPseudoClass = true;\n    } else if ((i === 0 || couldIntroduceNewTypeSelector) && LETTER_PATTERN.test(character)) {\n      result[2]++;\n    }\n\n    isEscaped = character == Marker.BACK_SLASH;\n    wasPseudoClass = character == Selector.PSEUDO;\n    couldIntroduceNewTypeSelector = !isEscaped && SEPARATOR_PATTERN.test(character);\n  }\n\n  return result;\n}\n\nfunction isNotPseudoClass(selector, index) {\n  return selector.indexOf(NOT_PREFIX, index) === index;\n}\n\nmodule.exports = specificity;\n"]}