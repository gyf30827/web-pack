{"version":3,"sources":["merge-non-adjacent-by-body.js"],"names":[],"mappings":"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","file":"merge-non-adjacent-by-body-compiled.js","sourcesContent":["var isMergeable = require('./is-mergeable');\n\nvar sortSelectors = require('../level-1/sort-selectors');\nvar tidyRules = require('../level-1/tidy-rules');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar serializeBody = require('../../writer/one-time').body;\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar Token = require('../../tokenizer/token');\n\nfunction unsafeSelector(value) {\n  return /\\.|\\*| :/.test(value);\n}\n\nfunction isBemElement(token) {\n  var asString = serializeRules(token[1]);\n  return asString.indexOf('__') > -1 || asString.indexOf('--') > -1;\n}\n\nfunction withoutModifier(selector) {\n  return selector.replace(/--[^ ,>\\+~:]+/g, '');\n}\n\nfunction removeAnyUnsafeElements(left, candidates) {\n  var leftSelector = withoutModifier(serializeRules(left[1]));\n\n  for (var body in candidates) {\n    var right = candidates[body];\n    var rightSelector = withoutModifier(serializeRules(right[1]));\n\n    if (rightSelector.indexOf(leftSelector) > -1 || leftSelector.indexOf(rightSelector) > -1)\n      delete candidates[body];\n  }\n}\n\nfunction mergeNonAdjacentByBody(tokens, context) {\n  var options = context.options;\n  var mergeSemantically = options.level[OptimizationLevel.Two].mergeSemantically;\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n  var selectorsSortingMethod = options.level[OptimizationLevel.One].selectorsSortingMethod;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var candidates = {};\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    if (token[0] != Token.RULE)\n      continue;\n\n    if (token[2].length > 0 && (!mergeSemantically && unsafeSelector(serializeRules(token[1]))))\n      candidates = {};\n\n    if (token[2].length > 0 && mergeSemantically && isBemElement(token))\n      removeAnyUnsafeElements(token, candidates);\n\n    var candidateBody = serializeBody(token[2]);\n    var oldToken = candidates[candidateBody];\n    if (oldToken &&\n        isMergeable(serializeRules(token[1]), mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging) &&\n        isMergeable(serializeRules(oldToken[1]), mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging)) {\n\n      if (token[2].length > 0) {\n        token[1] = tidyRules(oldToken[1].concat(token[1]), false, adjacentSpace, false, context.warnings);\n        token[1] = token[1].length > 1 ? sortSelectors(token[1], selectorsSortingMethod) : token[1];\n      } else {\n        token[1] = oldToken[1].concat(token[1]);\n      }\n\n      oldToken[2] = [];\n      candidates[candidateBody] = null;\n    }\n\n    candidates[serializeBody(token[2])] = token;\n  }\n}\n\nmodule.exports = mergeNonAdjacentByBody;\n"]}