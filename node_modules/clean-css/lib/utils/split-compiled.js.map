{"version":3,"sources":["split.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,qBAAR,CAAb;;AAEA,SAAS,KAAT,CAAe,KAAf,EAAsB,SAAtB,EAAiC;AAC/B,MAAI,YAAY,OAAO,kBAAvB;AACA,MAAI,aAAa,OAAO,mBAAxB;AACA,MAAI,QAAQ,CAAZ;AACA,MAAI,SAAS,CAAb;AACA,MAAI,YAAY,CAAhB;AACA,MAAI,SAAJ;AACA,MAAI,aAAJ;AACA,MAAI,MAAM,MAAM,MAAhB;AACA,MAAI,QAAQ,EAAZ;;AAEA,MAAI,MAAM,OAAN,CAAc,SAAd,KAA4B,CAAC,CAAjC,EAAoC;AAClC,WAAO,CAAC,KAAD,CAAP;AACD;;AAED,MAAI,MAAM,OAAN,CAAc,SAAd,KAA4B,CAAC,CAAjC,EAAoC;AAClC,WAAO,MAAM,KAAN,CAAY,SAAZ,CAAP;AACD;;AAED,SAAO,SAAS,GAAhB,EAAqB;AACnB,QAAI,MAAM,MAAN,KAAiB,SAArB,EAAgC;AAC9B;AACD,KAFD,MAEO,IAAI,MAAM,MAAN,KAAiB,UAArB,EAAiC;AACtC;AACD;;AAED,QAAI,UAAU,CAAV,IAAe,SAAS,CAAxB,IAA6B,SAAS,CAAT,GAAa,GAA1C,IAAiD,MAAM,MAAN,KAAiB,SAAtE,EAAiF;AAC/E,YAAM,IAAN,CAAW,MAAM,SAAN,CAAgB,SAAhB,EAA2B,MAA3B,CAAX;AACA,kBAAY,SAAS,CAArB;AACD;;AAED;AACD;;AAED,MAAI,YAAY,SAAS,CAAzB,EAA4B;AAC1B,gBAAY,MAAM,SAAN,CAAgB,SAAhB,CAAZ;AACA,oBAAgB,UAAU,UAAU,MAAV,GAAmB,CAA7B,CAAhB;AACA,QAAI,iBAAiB,SAArB,EAAgC;AAC9B,kBAAY,UAAU,SAAV,CAAoB,CAApB,EAAuB,UAAU,MAAV,GAAmB,CAA1C,CAAZ;AACD;;AAED,UAAM,IAAN,CAAW,SAAX;AACD;;AAED,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,KAAjB","file":"split-compiled.js","sourcesContent":["var Marker = require('../tokenizer/marker');\n\nfunction split(value, separator) {\n  var openLevel = Marker.OPEN_ROUND_BRACKET;\n  var closeLevel = Marker.CLOSE_ROUND_BRACKET;\n  var level = 0;\n  var cursor = 0;\n  var lastStart = 0;\n  var lastValue;\n  var lastCharacter;\n  var len = value.length;\n  var parts = [];\n\n  if (value.indexOf(separator) == -1) {\n    return [value];\n  }\n\n  if (value.indexOf(openLevel) == -1) {\n    return value.split(separator);\n  }\n\n  while (cursor < len) {\n    if (value[cursor] == openLevel) {\n      level++;\n    } else if (value[cursor] == closeLevel) {\n      level--;\n    }\n\n    if (level === 0 && cursor > 0 && cursor + 1 < len && value[cursor] == separator) {\n      parts.push(value.substring(lastStart, cursor));\n      lastStart = cursor + 1;\n    }\n\n    cursor++;\n  }\n\n  if (lastStart < cursor + 1) {\n    lastValue = value.substring(lastStart);\n    lastCharacter = lastValue[lastValue.length - 1];\n    if (lastCharacter == separator) {\n      lastValue = lastValue.substring(0, lastValue.length - 1);\n    }\n\n    parts.push(lastValue);\n  }\n\n  return parts;\n}\n\nmodule.exports = split;\n"]}