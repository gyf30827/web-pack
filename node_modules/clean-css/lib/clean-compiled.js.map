{"version":3,"sources":["clean.js"],"names":[],"mappings":"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","file":"clean-compiled.js","sourcesContent":["/**\n * Clean-css - https://github.com/jakubpawlowicz/clean-css\n * Released under the terms of MIT license\n *\n * Copyright (C) 2017 JakubPawlowicz.com\n */\n\nvar level0Optimize = require('./optimizer/level-0/optimize');\nvar level1Optimize = require('./optimizer/level-1/optimize');\nvar level2Optimize = require('./optimizer/level-2/optimize');\nvar validator = require('./optimizer/validator');\n\nvar compatibilityFrom = require('./options/compatibility');\nvar fetchFrom = require('./options/fetch');\nvar formatFrom = require('./options/format').formatFrom;\nvar inlineFrom = require('./options/inline');\nvar inlineRequestFrom = require('./options/inline-request');\nvar inlineTimeoutFrom = require('./options/inline-timeout');\nvar OptimizationLevel = require('./options/optimization-level').OptimizationLevel;\nvar optimizationLevelFrom = require('./options/optimization-level').optimizationLevelFrom;\nvar rebaseFrom = require('./options/rebase');\nvar rebaseToFrom = require('./options/rebase-to');\n\nvar inputSourceMapTracker = require('./reader/input-source-map-tracker');\nvar readSources = require('./reader/read-sources');\n\nvar serializeStyles = require('./writer/simple');\nvar serializeStylesAndSourceMap = require('./writer/source-maps');\n\nvar CleanCSS = module.exports = function CleanCSS(options) {\n  options = options || {};\n\n  this.options = {\n    compatibility: compatibilityFrom(options.compatibility),\n    fetch: fetchFrom(options.fetch),\n    format: formatFrom(options.format),\n    inline: inlineFrom(options.inline),\n    inlineRequest: inlineRequestFrom(options.inlineRequest),\n    inlineTimeout: inlineTimeoutFrom(options.inlineTimeout),\n    level: optimizationLevelFrom(options.level),\n    rebase: rebaseFrom(options.rebase),\n    rebaseTo: rebaseToFrom(options.rebaseTo),\n    returnPromise: !!options.returnPromise,\n    sourceMap: !!options.sourceMap,\n    sourceMapInlineSources: !!options.sourceMapInlineSources\n  };\n};\n\nCleanCSS.prototype.minify = function (input, maybeSourceMap, maybeCallback) {\n  var options = this.options;\n\n  if (options.returnPromise) {\n    return new Promise(function (resolve, reject) {\n      minify(input, options, maybeSourceMap, function (errors, output) {\n        return errors ?\n          reject(errors) :\n          resolve(output);\n      });\n    });\n  } else {\n    return minify(input, options, maybeSourceMap, maybeCallback);\n  }\n};\n\nfunction minify(input, options, maybeSourceMap, maybeCallback) {\n  var sourceMap = typeof maybeSourceMap != 'function' ?\n    maybeSourceMap :\n    null;\n  var callback = typeof maybeCallback == 'function' ?\n    maybeCallback :\n    (typeof maybeSourceMap == 'function' ? maybeSourceMap : null);\n  var context = {\n    stats: {\n      efficiency: 0,\n      minifiedSize: 0,\n      originalSize: 0,\n      startedAt: Date.now(),\n      timeSpent: 0\n    },\n    cache: {\n      specificity: {}\n    },\n    errors: [],\n    inlinedStylesheets: [],\n    inputSourceMapTracker: inputSourceMapTracker(),\n    localOnly: !callback,\n    options: options,\n    source: null,\n    sourcesContent: {},\n    validator: validator(options.compatibility),\n    warnings: []\n  };\n\n  if (sourceMap) {\n    context.inputSourceMapTracker.track(undefined, sourceMap);\n  }\n\n  return runner(context.localOnly)(function () {\n    return readSources(input, context, function (tokens) {\n      var serialize = context.options.sourceMap ?\n        serializeStylesAndSourceMap :\n        serializeStyles;\n\n      var optimizedTokens = optimize(tokens, context);\n      var optimizedStyles = serialize(optimizedTokens, context);\n      var output = withMetadata(optimizedStyles, context);\n\n      return callback ?\n        callback(context.errors.length > 0 ? context.errors : null, output) :\n        output;\n    });\n  });\n}\n\nfunction runner(localOnly) {\n  // to always execute code asynchronously when a callback is given\n  // more at blog.izs.me/post/59142742143/designing-apis-for-asynchrony\n  return localOnly ?\n    function (callback) { return callback(); } :\n    process.nextTick;\n}\n\nfunction optimize(tokens, context) {\n  var optimized;\n\n  optimized = level0Optimize(tokens, context);\n  optimized = OptimizationLevel.One in context.options.level ?\n    level1Optimize(tokens, context) :\n    tokens;\n  optimized = OptimizationLevel.Two in context.options.level ?\n    level2Optimize(tokens, context, true) :\n    optimized;\n\n  return optimized;\n}\n\nfunction withMetadata(output, context) {\n  output.stats = calculateStatsFrom(output.styles, context);\n  output.errors = context.errors;\n  output.inlinedStylesheets = context.inlinedStylesheets;\n  output.warnings = context.warnings;\n\n  return output;\n}\n\nfunction calculateStatsFrom(styles, context) {\n  var finishedAt = Date.now();\n  var timeSpent = finishedAt - context.stats.startedAt;\n\n  delete context.stats.startedAt;\n  context.stats.timeSpent = timeSpent;\n  context.stats.efficiency = 1 - styles.length / context.stats.originalSize;\n  context.stats.minifiedSize = styles.length;\n\n  return context.stats;\n}\n"]}