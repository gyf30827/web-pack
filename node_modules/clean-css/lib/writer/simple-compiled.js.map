{"version":3,"sources":["simple.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,QAAQ,WAAR,EAAqB,GAA/B;;AAEA,IAAI,YAAY,QAAQ,IAAR,EAAc,GAA9B;;AAEA,SAAS,KAAT,CAAe,gBAAf,EAAiC,KAAjC,EAAwC;AACtC,MAAI,QAAQ,OAAO,KAAP,IAAgB,QAAhB,GACV,KADU,GAEV,MAAM,CAAN,CAFF;AAGA,MAAI,OAAO,iBAAiB,IAA5B;;AAEA,OAAK,gBAAL,EAAuB,KAAvB;AACA,QAAM,gBAAN,EAAwB,KAAxB;AACA,mBAAiB,MAAjB,CAAwB,IAAxB,CAA6B,KAA7B;AACD;;AAED,SAAS,IAAT,CAAc,gBAAd,EAAgC,KAAhC,EAAuC;AACrC,MAAI,iBAAiB,MAAjB,GAA0B,MAAM,MAAhC,GAAyC,iBAAiB,MAAjB,CAAwB,MAArE,EAA6E;AAC3E,UAAM,gBAAN,EAAwB,SAAxB;AACA,qBAAiB,MAAjB,CAAwB,IAAxB,CAA6B,SAA7B;AACD;AACF;;AAED,SAAS,KAAT,CAAe,gBAAf,EAAiC,KAAjC,EAAwC;AACtC,MAAI,QAAQ,MAAM,KAAN,CAAY,IAAZ,CAAZ;;AAEA,mBAAiB,IAAjB,IAAyB,MAAM,MAAN,GAAe,CAAxC;AACA,mBAAiB,MAAjB,GAA0B,MAAM,MAAN,GAAe,CAAf,GAAmB,CAAnB,GAAwB,iBAAiB,MAAjB,GAA0B,MAAM,GAAN,GAAY,MAAxF;AACD;;AAED,SAAS,eAAT,CAAyB,MAAzB,EAAiC,OAAjC,EAA0C;AACxC,MAAI,mBAAmB;AACrB,YAAQ,CADa;AAErB,YAAQ,QAAQ,OAAR,CAAgB,MAFH;AAGrB,cAAU,CAHW;AAIrB,gBAAY,EAJS;AAKrB,UAAM,CALe;AAMrB,YAAQ,EANa;AAOrB,4BAAwB,QAAQ,OAAR,CAAgB,aAAhB,CAA8B,UAA9B,CAAyC,sBAP5C;AAQrB,WAAO,KARc;AASrB,UAAM,QAAQ,OAAR,CAAgB,MAAhB,CAAuB,MAAvB,GACJ,IADI,GAEJ,YAAY,CAAE,UAAa;AAXR,GAAvB;;AAcA,MAAI,gBAAJ,EAAsB,MAAtB;;AAEA,SAAO;AACL,YAAQ,iBAAiB,MAAjB,CAAwB,IAAxB,CAA6B,EAA7B;AADH,GAAP;AAGD;;AAED,OAAO,OAAP,GAAiB,eAAjB","file":"simple-compiled.js","sourcesContent":["var all = require('./helpers').all;\n\nvar lineBreak = require('os').EOL;\n\nfunction store(serializeContext, token) {\n  var value = typeof token == 'string' ?\n    token :\n    token[1];\n  var wrap = serializeContext.wrap;\n\n  wrap(serializeContext, value);\n  track(serializeContext, value);\n  serializeContext.output.push(value);\n}\n\nfunction wrap(serializeContext, value) {\n  if (serializeContext.column + value.length > serializeContext.format.wrapAt) {\n    track(serializeContext, lineBreak);\n    serializeContext.output.push(lineBreak);\n  }\n}\n\nfunction track(serializeContext, value) {\n  var parts = value.split('\\n');\n\n  serializeContext.line += parts.length - 1;\n  serializeContext.column = parts.length > 1 ? 0 : (serializeContext.column + parts.pop().length);\n}\n\nfunction serializeStyles(tokens, context) {\n  var serializeContext = {\n    column: 0,\n    format: context.options.format,\n    indentBy: 0,\n    indentWith: '',\n    line: 1,\n    output: [],\n    spaceAfterClosingBrace: context.options.compatibility.properties.spaceAfterClosingBrace,\n    store: store,\n    wrap: context.options.format.wrapAt ?\n      wrap :\n      function () { /* noop */  }\n  };\n\n  all(serializeContext, tokens);\n\n  return {\n    styles: serializeContext.output.join('')\n  };\n}\n\nmodule.exports = serializeStyles;\n"]}