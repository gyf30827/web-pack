{"version":3,"sources":["source-maps.js"],"names":[],"mappings":"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","file":"source-maps-compiled.js","sourcesContent":["var SourceMapGenerator = require('source-map').SourceMapGenerator;\nvar all = require('./helpers').all;\n\nvar lineBreak = require('os').EOL;\nvar isRemoteResource = require('../utils/is-remote-resource');\n\nvar isWindows = process.platform == 'win32';\n\nvar NIX_SEPARATOR_PATTERN = /\\//g;\nvar UNKNOWN_SOURCE = '$stdin';\nvar WINDOWS_SEPARATOR = '\\\\';\n\nfunction store(serializeContext, element) {\n  var fromString = typeof element == 'string';\n  var value = fromString ? element : element[1];\n  var mappings = fromString ? null : element[2];\n  var wrap = serializeContext.wrap;\n\n  wrap(serializeContext, value);\n  track(serializeContext, value, mappings);\n  serializeContext.output.push(value);\n}\n\nfunction wrap(serializeContext, value) {\n  if (serializeContext.column + value.length > serializeContext.format.wrapAt) {\n    track(serializeContext, lineBreak, false);\n    serializeContext.output.push(lineBreak);\n  }\n}\n\nfunction track(serializeContext, value, mappings) {\n  var parts = value.split('\\n');\n\n  if (mappings) {\n    trackAllMappings(serializeContext, mappings);\n  }\n\n  serializeContext.line += parts.length - 1;\n  serializeContext.column = parts.length > 1 ? 0 : (serializeContext.column + parts.pop().length);\n}\n\nfunction trackAllMappings(serializeContext, mappings) {\n  for (var i = 0, l = mappings.length; i < l; i++) {\n    trackMapping(serializeContext, mappings[i]);\n  }\n}\n\nfunction trackMapping(serializeContext, mapping) {\n  var line = mapping[0];\n  var column = mapping[1];\n  var originalSource = mapping[2];\n  var source = originalSource;\n  var storedSource = source || UNKNOWN_SOURCE;\n\n  if (isWindows && source && !isRemoteResource(source)) {\n    storedSource = source.replace(NIX_SEPARATOR_PATTERN, WINDOWS_SEPARATOR);\n  }\n\n  serializeContext.outputMap.addMapping({\n    generated: {\n      line: serializeContext.line,\n      column: serializeContext.column\n    },\n    source: storedSource,\n    original: {\n      line: line,\n      column: column\n    }\n  });\n\n  if (serializeContext.inlineSources && (originalSource in serializeContext.sourcesContent)) {\n    serializeContext.outputMap.setSourceContent(storedSource, serializeContext.sourcesContent[originalSource]);\n  }\n}\n\nfunction serializeStylesAndSourceMap(tokens, context) {\n  var serializeContext = {\n    column: 0,\n    format: context.options.format,\n    indentBy: 0,\n    indentWith: '',\n    inlineSources: context.options.sourceMapInlineSources,\n    line: 1,\n    output: [],\n    outputMap: new SourceMapGenerator(),\n    sourcesContent: context.sourcesContent,\n    spaceAfterClosingBrace: context.options.compatibility.properties.spaceAfterClosingBrace,\n    store: store,\n    wrap: context.options.format.wrapAt ?\n      wrap :\n      function () { /* noop */  }\n  };\n\n  all(serializeContext, tokens);\n\n  return {\n    sourceMap: serializeContext.outputMap,\n    styles: serializeContext.output.join('')\n  };\n}\n\nmodule.exports = serializeStylesAndSourceMap;\n"]}