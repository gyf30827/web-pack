{"version":3,"sources":["helpers.js"],"names":[],"mappings":"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","file":"helpers-compiled.js","sourcesContent":["var makeDom = require(\"../utils\").makeDom;\nvar helpers = require(\"../..\");\nvar assert = require(\"assert\");\n\ndescribe(\"helpers\", function() {\n\tdescribe(\"removeSubsets\", function() {\n\t\tvar removeSubsets = helpers.removeSubsets;\n\t\tvar dom = makeDom(\"<div><p><span></span></p><p></p></div>\")[0];\n\n\t\tit(\"removes identical trees\", function() {\n\t\t\tvar matches = removeSubsets([dom, dom]);\n\t\t\tassert.equal(matches.length, 1);\n\t\t});\n\n\t\tit(\"Removes subsets found first\", function() {\n\t\t\tvar matches = removeSubsets([dom, dom.children[0].children[0]]);\n\t\t\tassert.equal(matches.length, 1);\n\t\t});\n\n\t\tit(\"Removes subsets found last\", function() {\n\t\t\tvar matches = removeSubsets([dom.children[0], dom]);\n\t\t\tassert.equal(matches.length, 1);\n\t\t});\n\n\t\tit(\"Does not remove unique trees\", function() {\n\t\t\tvar matches = removeSubsets([dom.children[0], dom.children[1]]);\n\t\t\tassert.equal(matches.length, 2);\n\t\t});\n\t});\n\n\tdescribe(\"compareDocumentPosition\", function() {\n\t\tvar compareDocumentPosition = helpers.compareDocumentPosition;\n\t\tvar markup = \"<div><p><span></span></p><a></a></div>\";\n\t\tvar dom = makeDom(markup)[0];\n\t\tvar p = dom.children[0];\n\t\tvar span = p.children[0];\n\t\tvar a = dom.children[1];\n\n\t\tit(\"reports when the first node occurs before the second indirectly\", function() {\n\t\t\tassert.equal(compareDocumentPosition(span, a), 2);\n\t\t});\n\n\t\tit(\"reports when the first node contains the second\", function() {\n\t\t\tassert.equal(compareDocumentPosition(p, span), 10);\n\t\t});\n\n\t\tit(\"reports when the first node occurs after the second indirectly\", function() {\n\t\t\tassert.equal(compareDocumentPosition(a, span), 4);\n\t\t});\n\n\t\tit(\"reports when the first node is contained by the second\", function() {\n\t\t\tassert.equal(compareDocumentPosition(span, p), 20);\n\t\t});\n\n\t\tit(\"reports when the nodes belong to separate documents\", function() {\n\t\t\tvar other = makeDom(markup)[0].children[0].children[0];\n\n\t\t\tassert.equal(compareDocumentPosition(span, other), 1);\n\t\t});\n\n\t\tit(\"reports when the nodes are identical\", function() {\n\t\t\tassert.equal(compareDocumentPosition(span, span), 0);\n\t\t});\n\t});\n\n\tdescribe(\"uniqueSort\", function() {\n\t\tvar uniqueSort = helpers.uniqueSort;\n\t\tvar dom, p, span, a;\n\n\t\tbeforeEach(function() {\n\t\t\tdom = makeDom(\"<div><p><span></span></p><a></a></div>\")[0];\n\t\t\tp = dom.children[0];\n\t\t\tspan = p.children[0];\n\t\t\ta = dom.children[1];\n\t\t});\n\n\t\tit(\"leaves unique elements untouched\", function() {\n\t\t\tassert.deepEqual(uniqueSort([p, a]), [p, a]);\n\t\t});\n\n\t\tit(\"removes duplicate elements\", function() {\n\t\t\tassert.deepEqual(uniqueSort([p, a, p]), [p, a]);\n\t\t});\n\n\t\tit(\"sorts nodes in document order\", function() {\n\t\t\tassert.deepEqual(uniqueSort([a, dom, span, p]), [dom, p, span, a]);\n\t\t});\n\t});\n});\n"]}