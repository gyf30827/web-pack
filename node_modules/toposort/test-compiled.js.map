{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var vows = require('vows')\n  , toposort = require('./index')\n  , assert = require('assert')\n\nvar suite = vows.describe('toposort')\nsuite.addBatch(\n{ 'acyclic graphs':\n  { topic: function() {\n      /*(read downwards)\n      6  3\n      |  |\n      5->2\n      |  |\n      4  1\n      */\n      return toposort(\n      [ [\"3\", '2']\n      , [\"2\", \"1\"]\n      , [\"6\", \"5\"]\n      , [\"5\", \"2\"]\n      , [\"5\", \"4\"]\n      ])\n    }\n  , 'should be sorted correctly': function(er, result) {\n      assert.instanceOf(result, Array)\n      var failed = [], passed\n      // valid permutations\n      ;[ [ '3','6','5','2','1','4' ]\n      , [ '3','6','5','2','4','1' ]\n      , [ '6','3','5','2','1','4' ]\n      , [ '6','5','3','2','1','4' ]\n      , [ '6','5','3','2','4','1' ]\n      , [ '6','5', '4','3','2','1' ]\n      ].forEach(function(solution) {\n        try {\n          assert.deepEqual(result, solution)\n          passed = true\n        }catch (e) {\n          failed.push(e)\n        }\n      })\n      if (!passed) {\n        console.log(failed)\n        throw failed[0];\n      }\n    }\n  }\n, 'simple cyclic graphs':\n  { topic: function() {\n      /*\n      foo<->bar\n      */\n      return toposort(\n      [ [\"foo\", 'bar']\n      , [\"bar\", \"foo\"]// cyclic dependecy\n      ])\n    }\n  , 'should throw an exception': function(_, val) {\n      assert.instanceOf(val, Error)\n    }\n  }\n, 'complex cyclic graphs':\n  { topic: function() {\n      /*\n      foo\n      |\n      bar<-john\n      |     ^\n      ron->tom\n      */\n      return toposort(\n      [ [\"foo\", 'bar']\n      , [\"bar\", \"ron\"]\n      , [\"john\", \"bar\"]\n      , [\"tom\", \"john\"]\n      , [\"ron\", \"tom\"]// cyclic dependecy\n      ])\n    }\n  , 'should throw an exception': function(_, val) {\n      assert.instanceOf(val, Error)\n    }\n  }\n, 'unknown nodes in edges':\n  { topic: function() {\n      return toposort.array(['bla']\n      [ [\"foo\", 'bar']\n      , [\"bar\", \"ron\"]\n      , [\"john\", \"bar\"]\n      , [\"tom\", \"john\"]\n      , [\"ron\", \"tom\"]\n      ])\n    }\n  , 'should throw an exception': function(_, val) {\n      assert.instanceOf(val, Error)\n    }\n  }\n, 'triangular dependency':\n  { topic: function() {\n      /*\n      a-> b\n      |  /\n      c<-\n      */\n      return toposort([\n        ['a', 'b']\n      , ['a', 'c']\n      , ['b', 'c']\n      ]);\n    }\n  , 'shouldn\\'t throw an error': function(er, result) {\n      assert.deepEqual(result, ['a', 'b', 'c'])\n    }\n  }\n, 'toposort.array':\n  { topic: function() {\n      return toposort.array(['d', 'c', 'a', 'b'], [['a','b'],['b','c']])\n    }\n  , 'should include unconnected nodes': function(er, result){\n      var i = result.indexOf('d')\n      assert(i >= 0)\n      result.splice(i, 1)\n      assert.deepEqual(result, ['a', 'b', 'c'])\n    }\n  }\n, 'toposort.array mutation':\n  { topic: function() {\n    var array = ['d', 'c', 'a', 'b']\n    toposort.array(array, [['a','b'],['b','c']])\n    return array\n    }\n  , 'should not mutate its arguments': function(er, result){\n     assert.deepEqual(result, ['d', 'c', 'a', 'b'])\n    }\n  }\n, 'giant graphs':\n  {\n    topic: function() {\n      var graph = []\n      for (var i = 0; i < 100000; i++) {\n        graph.push([i, i + 1])\n      }\n      return graph\n    }\n  , 'should sort quickly': function(er, result){\n     var start = (new Date).getTime()\n     var sorted = toposort(result)\n     var end = (new Date).getTime()\n     var elapsedSeconds = (end - start) / 1000\n     assert(elapsedSeconds < 1)\n    }\n  }\n})\n.run(null, function() {\n  (suite.results.broken+suite.results.errored) > 0 && process.exit(1)\n})\n"]}