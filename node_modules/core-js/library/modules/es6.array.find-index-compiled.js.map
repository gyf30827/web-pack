{"version":3,"sources":["es6.array.find-index.js"],"names":[],"mappings":"AAAA;AACA;;AACA,IAAI,UAAU,QAAQ,YAAR,CAAd;AAAA,IACI,QAAU,QAAQ,mBAAR,EAA6B,CAA7B,CADd;AAAA,IAEI,MAAU,WAFd;AAAA,IAGI,SAAU,IAHd;AAIA;AACA,IAAG,OAAO,EAAV,EAAa,MAAM,CAAN,EAAS,GAAT,EAAc,YAAU;AAAE,WAAS,KAAT;AAAiB,CAA3C;AACb,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,GAAY,MAAhC,EAAwC,OAAxC,EAAiD;AAC/C,aAAW,SAAS,SAAT,CAAmB,UAAnB,CAA6B,uBAA7B,EAAqD;AAC9D,WAAO,MAAM,IAAN,EAAY,UAAZ,EAAwB,UAAU,MAAV,GAAmB,CAAnB,GAAuB,UAAU,CAAV,CAAvB,GAAsC,SAA9D,CAAP;AACD;AAH8C,CAAjD;AAKA,QAAQ,wBAAR,EAAkC,GAAlC","file":"es6.array.find-index-compiled.js","sourcesContent":["'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./$.export')\n  , $find   = require('./$.array-methods')(6)\n  , KEY     = 'findIndex'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./$.add-to-unscopables')(KEY);"]}