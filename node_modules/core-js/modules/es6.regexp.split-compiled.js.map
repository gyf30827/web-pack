{"version":3,"sources":["es6.regexp.split.js"],"names":[],"mappings":"AAAA;AACA,QAAQ,gBAAR,EAA0B,OAA1B,EAAmC,CAAnC,EAAsC,UAAS,OAAT,EAAkB,KAAlB,EAAyB,MAAzB,EAAgC;AACpE;AACA,SAAO,SAAS,KAAT,CAAe,SAAf,EAA0B,KAA1B,EAAgC;AACrC;;AACA,QAAI,IAAK,QAAQ,IAAR,CAAT;AAAA,QACI,KAAK,aAAa,SAAb,GAAyB,SAAzB,GAAqC,UAAU,KAAV,CAD9C;AAEA,WAAO,OAAO,SAAP,GACH,GAAG,IAAH,CAAQ,SAAR,EAAmB,CAAnB,EAAsB,KAAtB,CADG,GAEH,OAAO,IAAP,CAAY,OAAO,CAAP,CAAZ,EAAuB,SAAvB,EAAkC,KAAlC,CAFJ;AAGD,GAPD;AAQD,CAVD","file":"es6.regexp.split-compiled.js","sourcesContent":["// @@split logic\nrequire('./$.fix-re-wks')('split', 2, function(defined, SPLIT, $split){\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return function split(separator, limit){\n    'use strict';\n    var O  = defined(this)\n      , fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined\n      ? fn.call(separator, O, limit)\n      : $split.call(String(O), separator, limit);\n  };\n});"]}