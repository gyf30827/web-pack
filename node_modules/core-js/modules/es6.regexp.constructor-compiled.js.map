{"version":3,"sources":["es6.regexp.constructor.js"],"names":[],"mappings":"AAAA,IAAI,IAAW,QAAQ,KAAR,CAAf;AAAA,IACI,SAAW,QAAQ,YAAR,CADf;AAAA,IAEI,WAAW,QAAQ,eAAR,CAFf;AAAA,IAGI,SAAW,QAAQ,WAAR,CAHf;AAAA,IAII,UAAW,OAAO,MAJtB;AAAA,IAKI,OAAW,OALf;AAAA,IAMI,QAAW,QAAQ,SANvB;AAAA,IAOI,MAAW,IAPf;AAAA,IAQI,MAAW;AACb;AATF;AAAA,IAUI,cAAc,IAAI,OAAJ,CAAY,GAAZ,MAAqB,GAVvC;;AAYA,IAAG,QAAQ,iBAAR,MAA+B,CAAC,WAAD,IAAgB,QAAQ,WAAR,EAAqB,YAAU;AAC/E,MAAI,QAAQ,SAAR,EAAmB,OAAnB,CAAJ,IAAmC,KAAnC;AACA;AACA,SAAO,QAAQ,GAAR,KAAgB,GAAhB,IAAuB,QAAQ,GAAR,KAAgB,GAAvC,IAA8C,QAAQ,GAAR,EAAa,GAAb,KAAqB,MAA1E;AACD,CAJiD,CAA/C,CAAH,EAII;AACF,YAAU,SAAS,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAqB;AAC7B,QAAI,OAAO,SAAS,CAAT,CAAX;AAAA,QACI,MAAO,MAAM,SADjB;AAEA,WAAO,EAAE,gBAAgB,OAAlB,KAA8B,IAA9B,IAAsC,EAAE,WAAF,KAAkB,OAAxD,IAAmE,GAAnE,GAAyE,CAAzE,GACH,cACE,IAAI,IAAJ,CAAS,QAAQ,CAAC,GAAT,GAAe,EAAE,MAAjB,GAA0B,CAAnC,EAAsC,CAAtC,CADF,GAEE,KAAK,CAAC,OAAO,aAAa,OAArB,IAAgC,EAAE,MAAlC,GAA2C,CAAhD,EAAmD,QAAQ,GAAR,GAAc,OAAO,IAAP,CAAY,CAAZ,CAAd,GAA+B,CAAlF,CAHN;AAID,GAPD;AAQA,IAAE,IAAF,CAAO,IAAP,CAAY,EAAE,QAAF,CAAW,IAAX,CAAZ,EAA8B,UAAS,GAAT,EAAa;AACzC,WAAO,OAAP,IAAkB,EAAE,OAAF,CAAU,OAAV,EAAmB,GAAnB,EAAwB;AACxC,oBAAc,IAD0B;AAExC,WAAK,YAAU;AAAE,eAAO,KAAK,GAAL,CAAP;AAAmB,OAFI;AAGxC,WAAK,UAAS,EAAT,EAAY;AAAE,aAAK,GAAL,IAAY,EAAZ;AAAiB;AAHI,KAAxB,CAAlB;AAKD,GAND;AAOA,QAAM,WAAN,GAAoB,OAApB;AACA,UAAQ,SAAR,GAAoB,KAApB;AACA,UAAQ,cAAR,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,OAA1C;AACD;;AAED,QAAQ,iBAAR,EAA2B,QAA3B","file":"es6.regexp.constructor-compiled.js","sourcesContent":["var $        = require('./$')\n  , global   = require('./$.global')\n  , isRegExp = require('./$.is-regexp')\n  , $flags   = require('./$.flags')\n  , $RegExp  = global.RegExp\n  , Base     = $RegExp\n  , proto    = $RegExp.prototype\n  , re1      = /a/g\n  , re2      = /a/g\n  // \"new\" creates a new object, old webkit buggy here\n  , CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif(require('./$.descriptors') && (!CORRECT_NEW || require('./$.fails')(function(){\n  re2[require('./$.wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))){\n  $RegExp = function RegExp(p, f){\n    var piRE = isRegExp(p)\n      , fiU  = f === undefined;\n    return !(this instanceof $RegExp) && piRE && p.constructor === $RegExp && fiU ? p\n      : CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f);\n  };\n  $.each.call($.getNames(Base), function(key){\n    key in $RegExp || $.setDesc($RegExp, key, {\n      configurable: true,\n      get: function(){ return Base[key]; },\n      set: function(it){ Base[key] = it; }\n    });\n  });\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./$.redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./$.set-species')('RegExp');"]}