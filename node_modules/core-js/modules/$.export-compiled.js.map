{"version":3,"sources":["$.export.js"],"names":[],"mappings":"AAAA,IAAI,SAAY,QAAQ,YAAR,CAAhB;AAAA,IACI,OAAY,QAAQ,UAAR,CADhB;AAAA,IAEI,OAAY,QAAQ,UAAR,CAFhB;AAAA,IAGI,WAAY,QAAQ,cAAR,CAHhB;AAAA,IAII,MAAY,QAAQ,SAAR,CAJhB;AAAA,IAKI,YAAY,WALhB;;AAOA,IAAI,UAAU,UAAS,IAAT,EAAe,IAAf,EAAqB,MAArB,EAA4B;AACxC,MAAI,YAAY,OAAO,QAAQ,CAA/B;AAAA,MACI,YAAY,OAAO,QAAQ,CAD/B;AAAA,MAEI,YAAY,OAAO,QAAQ,CAF/B;AAAA,MAGI,WAAY,OAAO,QAAQ,CAH/B;AAAA,MAII,UAAY,OAAO,QAAQ,CAJ/B;AAAA,MAKI,SAAY,YAAY,MAAZ,GAAqB,YAAY,OAAO,IAAP,MAAiB,OAAO,IAAP,IAAe,EAAhC,CAAZ,GAAkD,CAAC,OAAO,IAAP,KAAgB,EAAjB,EAAqB,SAArB,CALvF;AAAA,MAMI,UAAY,YAAY,IAAZ,GAAmB,KAAK,IAAL,MAAe,KAAK,IAAL,IAAa,EAA5B,CANnC;AAAA,MAOI,WAAY,QAAQ,SAAR,MAAuB,QAAQ,SAAR,IAAqB,EAA5C,CAPhB;AAAA,MAQI,GARJ;AAAA,MAQS,GART;AAAA,MAQc,GARd;AAAA,MAQmB,GARnB;AASA,MAAG,SAAH,EAAa,SAAS,IAAT;AACb,OAAI,GAAJ,IAAW,MAAX,EAAkB;AAChB;AACA,UAAM,CAAC,SAAD,IAAc,MAAd,IAAwB,OAAO,MAArC;AACA;AACA,UAAM,CAAC,MAAM,MAAN,GAAe,MAAhB,EAAwB,GAAxB,CAAN;AACA;AACA,UAAM,WAAW,GAAX,GAAiB,IAAI,GAAJ,EAAS,MAAT,CAAjB,GAAoC,YAAY,OAAO,GAAP,IAAc,UAA1B,GAAuC,IAAI,SAAS,IAAb,EAAmB,GAAnB,CAAvC,GAAiE,GAA3G;AACA;AACA,QAAG,UAAU,CAAC,GAAd,EAAkB,SAAS,MAAT,EAAiB,GAAjB,EAAsB,GAAtB;AAClB;AACA,QAAG,QAAQ,GAAR,KAAgB,GAAnB,EAAuB,KAAK,OAAL,EAAc,GAAd,EAAmB,GAAnB;AACvB,QAAG,YAAY,SAAS,GAAT,KAAiB,GAAhC,EAAoC,SAAS,GAAT,IAAgB,GAAhB;AACrC;AACF,CAxBD;AAyBA,OAAO,IAAP,GAAc,IAAd;AACA;AACA,QAAQ,CAAR,GAAY,CAAZ,C,CAAgB;AAChB,QAAQ,CAAR,GAAY,CAAZ,C,CAAgB;AAChB,QAAQ,CAAR,GAAY,CAAZ,C,CAAgB;AAChB,QAAQ,CAAR,GAAY,CAAZ,C,CAAgB;AAChB,QAAQ,CAAR,GAAY,EAAZ,C,CAAgB;AAChB,QAAQ,CAAR,GAAY,EAAZ,C,CAAgB;AAChB,OAAO,OAAP,GAAiB,OAAjB","file":"$.export-compiled.js","sourcesContent":["var global    = require('./$.global')\n  , core      = require('./$.core')\n  , hide      = require('./$.hide')\n  , redefine  = require('./$.redefine')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n    , key, own, out, exp;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if(target && !own)redefine(target, key, out);\n    // export\n    if(exports[key] != out)hide(exports, key, exp);\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;"]}