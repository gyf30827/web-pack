{"version":3,"sources":["$.object-assign.js"],"names":[],"mappings":"AAAA;AACA,IAAI,IAAW,QAAQ,KAAR,CAAf;AAAA,IACI,WAAW,QAAQ,eAAR,CADf;AAAA,IAEI,UAAW,QAAQ,aAAR,CAFf;;AAIA;AACA,OAAO,OAAP,GAAiB,QAAQ,WAAR,EAAqB,YAAU;AAC9C,MAAI,IAAI,OAAO,MAAf;AAAA,MACI,IAAI,EADR;AAAA,MAEI,IAAI,EAFR;AAAA,MAGI,IAAI,QAHR;AAAA,MAII,IAAI,sBAJR;AAKA,IAAE,CAAF,IAAO,CAAP;AACA,IAAE,KAAF,CAAQ,EAAR,EAAY,OAAZ,CAAoB,UAAS,CAAT,EAAW;AAAE,MAAE,CAAF,IAAO,CAAP;AAAW,GAA5C;AACA,SAAO,EAAE,EAAF,EAAM,CAAN,EAAS,CAAT,KAAe,CAAf,IAAoB,OAAO,IAAP,CAAY,EAAE,EAAF,EAAM,CAAN,CAAZ,EAAsB,IAAtB,CAA2B,EAA3B,KAAkC,CAA7D;AACD,CATgB,IASZ,SAAS,MAAT,CAAgB,MAAhB,EAAwB,MAAxB,EAA+B;AAAE;AACpC,MAAI,IAAQ,SAAS,MAAT,CAAZ;AAAA,MACI,KAAQ,SADZ;AAAA,MAEI,QAAQ,GAAG,MAFf;AAAA,MAGI,QAAQ,CAHZ;AAAA,MAII,UAAa,EAAE,OAJnB;AAAA,MAKI,aAAa,EAAE,UALnB;AAAA,MAMI,SAAa,EAAE,MANnB;AAOA,SAAM,QAAQ,KAAd,EAAoB;AAClB,QAAI,IAAS,QAAQ,GAAG,OAAH,CAAR,CAAb;AAAA,QACI,OAAS,aAAa,QAAQ,CAAR,EAAW,MAAX,CAAkB,WAAW,CAAX,CAAlB,CAAb,GAAgD,QAAQ,CAAR,CAD7D;AAAA,QAEI,SAAS,KAAK,MAFlB;AAAA,QAGI,IAAS,CAHb;AAAA,QAII,GAJJ;AAKA,WAAM,SAAS,CAAf,EAAiB,IAAG,OAAO,IAAP,CAAY,CAAZ,EAAe,MAAM,KAAK,GAAL,CAArB,CAAH,EAAmC,EAAE,GAAF,IAAS,EAAE,GAAF,CAAT;AACrD;AACD,SAAO,CAAP;AACD,CA1BgB,GA0Bb,OAAO,MA1BX","file":"$.object-assign-compiled.js","sourcesContent":["// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./$')\n  , toObject = require('./$.to-object')\n  , IObject  = require('./$.iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./$.fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , $$    = arguments\n    , $$len = $$.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while($$len > index){\n    var S      = IObject($$[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;"]}