{"version":3,"sources":["$.microtask.js"],"names":[],"mappings":"AAAA,IAAI,SAAY,QAAQ,YAAR,CAAhB;AAAA,IACI,YAAY,QAAQ,UAAR,EAAoB,GADpC;AAAA,IAEI,WAAY,OAAO,gBAAP,IAA2B,OAAO,sBAFlD;AAAA,IAGI,UAAY,OAAO,OAHvB;AAAA,IAII,UAAY,OAAO,OAJvB;AAAA,IAKI,SAAY,QAAQ,SAAR,EAAmB,OAAnB,KAA+B,SAL/C;AAAA,IAMI,IANJ;AAAA,IAMU,IANV;AAAA,IAMgB,MANhB;;AAQA,IAAI,QAAQ,YAAU;AACpB,MAAI,MAAJ,EAAY,MAAZ,EAAoB,EAApB;AACA,MAAG,WAAW,SAAS,QAAQ,MAA5B,CAAH,EAAuC;AACrC,YAAQ,MAAR,GAAiB,IAAjB;AACA,WAAO,IAAP;AACD;AACD,SAAM,IAAN,EAAW;AACT,aAAS,KAAK,MAAd;AACA,SAAS,KAAK,EAAd;AACA,QAAG,MAAH,EAAU,OAAO,KAAP;AACV,SAJS,CAIH;AACN,QAAG,MAAH,EAAU,OAAO,IAAP;AACV,WAAO,KAAK,IAAZ;AACD,GAAC,OAAO,SAAP;AACF,MAAG,MAAH,EAAU,OAAO,KAAP;AACX,CAfD;;AAiBA;AACA,IAAG,MAAH,EAAU;AACR,WAAS,YAAU;AACjB,YAAQ,QAAR,CAAiB,KAAjB;AACD,GAFD;AAGF;AACC,CALD,MAKO,IAAG,QAAH,EAAY;AACjB,MAAI,SAAS,CAAb;AAAA,MACI,OAAS,SAAS,cAAT,CAAwB,EAAxB,CADb;AAEA,MAAI,QAAJ,CAAa,KAAb,EAAoB,OAApB,CAA4B,IAA5B,EAAkC,EAAC,eAAe,IAAhB,EAAlC,EAHiB,CAGyC;AAC1D,WAAS,YAAU;AACjB,SAAK,IAAL,GAAY,SAAS,CAAC,MAAtB;AACD,GAFD;AAGF;AACC,CARM,MAQA,IAAG,WAAW,QAAQ,OAAtB,EAA8B;AACnC,WAAS,YAAU;AACjB,YAAQ,OAAR,GAAkB,IAAlB,CAAuB,KAAvB;AACD,GAFD;AAGF;AACA;AACA;AACA;AACA;AACA;AACC,CAVM,MAUA;AACL,WAAS,YAAU;AACjB;AACA,cAAU,IAAV,CAAe,MAAf,EAAuB,KAAvB;AACD,GAHD;AAID;;AAED,OAAO,OAAP,GAAiB,SAAS,IAAT,CAAc,EAAd,EAAiB;AAChC,MAAI,OAAO,EAAC,IAAI,EAAL,EAAS,MAAM,SAAf,EAA0B,QAAQ,UAAU,QAAQ,MAApD,EAAX;AACA,MAAG,IAAH,EAAQ,KAAK,IAAL,GAAY,IAAZ;AACR,MAAG,CAAC,IAAJ,EAAS;AACP,WAAO,IAAP;AACA;AACD,GAAC,OAAO,IAAP;AACH,CAPD","file":"$.microtask-compiled.js","sourcesContent":["var global    = require('./$.global')\n  , macrotask = require('./$.task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./$.cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};"]}