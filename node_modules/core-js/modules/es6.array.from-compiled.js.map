{"version":3,"sources":["es6.array.from.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,MAAc,QAAQ,SAAR,CAAlB;AAAA,IACI,UAAc,QAAQ,YAAR,CADlB;AAAA,IAEI,WAAc,QAAQ,eAAR,CAFlB;AAAA,IAGI,OAAc,QAAQ,eAAR,CAHlB;AAAA,IAII,cAAc,QAAQ,mBAAR,CAJlB;AAAA,IAKI,WAAc,QAAQ,eAAR,CALlB;AAAA,IAMI,YAAc,QAAQ,4BAAR,CANlB;AAOA,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,GAAY,CAAC,QAAQ,iBAAR,EAA2B,UAAS,IAAT,EAAc;AAAE,QAAM,IAAN,CAAW,IAAX;AAAmB,CAA9D,CAAjC,EAAkG,OAAlG,EAA2G;AACzG;AACA,QAAM,SAAS,IAAT,CAAc,SAAd,CAAuB,4CAAvB,EAAoE;AACxE,QAAI,IAAU,SAAS,SAAT,CAAd;AAAA,QACI,IAAU,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmC,KADjD;AAAA,QAEI,KAAU,SAFd;AAAA,QAGI,QAAU,GAAG,MAHjB;AAAA,QAII,QAAU,QAAQ,CAAR,GAAY,GAAG,CAAH,CAAZ,GAAoB,SAJlC;AAAA,QAKI,UAAU,UAAU,SALxB;AAAA,QAMI,QAAU,CANd;AAAA,QAOI,SAAU,UAAU,CAAV,CAPd;AAAA,QAQI,MARJ;AAAA,QAQY,MARZ;AAAA,QAQoB,IARpB;AAAA,QAQ0B,QAR1B;AASA,QAAG,OAAH,EAAW,QAAQ,IAAI,KAAJ,EAAW,QAAQ,CAAR,GAAY,GAAG,CAAH,CAAZ,GAAoB,SAA/B,EAA0C,CAA1C,CAAR;AACX;AACA,QAAG,UAAU,SAAV,IAAuB,EAAE,KAAK,KAAL,IAAc,YAAY,MAAZ,CAAhB,CAA1B,EAA+D;AAC7D,WAAI,WAAW,OAAO,IAAP,CAAY,CAAZ,CAAX,EAA2B,SAAS,IAAI,CAAJ,EAAxC,EAA+C,CAAC,CAAC,OAAO,SAAS,IAAT,EAAR,EAAyB,IAAzE,EAA+E,OAA/E,EAAuF;AACrF,eAAO,KAAP,IAAgB,UAAU,KAAK,QAAL,EAAe,KAAf,EAAsB,CAAC,KAAK,KAAN,EAAa,KAAb,CAAtB,EAA2C,IAA3C,CAAV,GAA6D,KAAK,KAAlF;AACD;AACF,KAJD,MAIO;AACL,eAAS,SAAS,EAAE,MAAX,CAAT;AACA,WAAI,SAAS,IAAI,CAAJ,CAAM,MAAN,CAAb,EAA4B,SAAS,KAArC,EAA4C,OAA5C,EAAoD;AAClD,eAAO,KAAP,IAAgB,UAAU,MAAM,EAAE,KAAF,CAAN,EAAgB,KAAhB,CAAV,GAAmC,EAAE,KAAF,CAAnD;AACD;AACF;AACD,WAAO,MAAP,GAAgB,KAAhB;AACA,WAAO,MAAP;AACD;AA1BwG,CAA3G","file":"es6.array.from-compiled.js","sourcesContent":["'use strict';\nvar ctx         = require('./$.ctx')\n  , $export     = require('./$.export')\n  , toObject    = require('./$.to-object')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\n$export($export.S + $export.F * !require('./$.iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , $$      = arguments\n      , $$len   = $$.length\n      , mapfn   = $$len > 1 ? $$[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        result[index] = mapping ? mapfn(O[index], index) : O[index];\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n"]}