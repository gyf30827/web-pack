{"version":3,"sources":["sanitizer.js"],"names":[],"mappings":"AAAA,IAAI,MAAJ;AAAA,IAAY,SAAZ;AAAA,IACE,YAAY,GAAG,cADjB;;AAGA,SAAS,QAAQ,OAAR,EAAiB,MAA1B;;AAEA,OAAO,OAAP,GAAiB,YAAY;AAC3B,YAAU,UAAS,GAAT,EAAc;AACtB,WAAO,UAAU,mBAAV,CAA8B,GAA9B,CAAP;AACD,GAH0B;AAI3B,uBAAqB,UAAS,GAAT,EAAc;AACjC,QAAI,IAAJ;AACA,QAAI,OAAO,YAAP,CAAoB,GAApB,CAAJ,EAA8B;AAC5B,aAAO,UAAU,yBAAV,CAAoC,GAApC,CAAP;AACD,KAFD,MAEO,IAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AAC7B,aAAO,UAAU,wBAAV,CAAmC,GAAnC,CAAP;AACD,KAFM,MAEA,IAAI,QAAQ,IAAR,IAAgB,OAAO,GAAP,KAAe,WAAnC,EAAgD;AACrD,aAAO,EAAP;AACD,KAFM,MAEA,IAAI,CAAC,OAAO,OAAO,GAAf,MAAwB,QAAxB,IAAoC,SAAS,QAAjD,EAA2D;AAChE,aAAO,CAAC,OAAO,GAAP,CAAD,CAAP;AACD,KAFM,MAEA;AACL,YAAM,MAAM,8BAA8B,GAApC,CAAN;AACD;AACF,GAjB0B;AAkB3B,6BAA2B,UAAS,CAAT,EAAY;AACrC,QAAI,CAAJ,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB;AACA,QAAI,EAAJ;AACA,SAAK,GAAL,IAAY,CAAZ,EAAe;AACb,UAAI,CAAC,UAAU,IAAV,CAAe,CAAf,EAAkB,GAAlB,CAAL,EAA6B;AAC7B,YAAM,EAAE,GAAF,CAAN;AACA,YAAM,EAAN;AACA,UAAI,GAAJ,IAAW,UAAU,QAAV,CAAmB,GAAnB,CAAX;AACA,QAAE,IAAF,CAAO,GAAP;AACD;AACD,WAAO,CAAP;AACD,GA7B0B;AA8B3B,4BAA0B,UAAS,CAAT,EAAY;AACpC,QAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,EAAgB,IAAhB;AACA,UAAM,EAAN;AACA,SAAK,KAAK,CAAL,EAAQ,OAAO,EAAE,MAAtB,EAA8B,KAAK,IAAnC,EAAyC,IAAzC,EAA+C;AAC7C,UAAI,EAAE,EAAF,CAAJ;AACA,UAAI,IAAJ,CAAS,UAAU,eAAV,CAA0B,CAA1B,CAAT;AACD;AACD,WAAO,GAAP;AACD,GAtC0B;AAuC3B,mBAAiB,UAAS,CAAT,EAAY;AAC3B,QAAI,GAAJ,EAAS,IAAT,EAAe,GAAf,EAAoB,IAApB;AACA,QAAI,CAAC,OAAO,OAAO,CAAf,MAAsB,QAAtB,IAAkC,SAAS,QAA/C,EAAyD;AACvD,aAAO,OAAO,CAAP,CAAP;AACD,KAFD,MAEO,IAAI,OAAO,YAAP,CAAoB,CAApB,CAAJ,EAA4B;AACjC,aAAO,OAAO,IAAP,CAAY,CAAZ,CAAP;AACA,UAAI,KAAK,MAAL,KAAgB,CAApB,EAAuB;AACrB,cAAM,MAAM,2CAAN,CAAN;AACD;AACD,YAAM,KAAK,CAAL,CAAN;AACA,YAAM,EAAN;AACA,UAAI,GAAJ,IAAW,UAAU,mBAAV,CAA8B,EAAE,GAAF,CAA9B,CAAX;AACA,aAAO,GAAP;AACD,KATM,MASA;AACL,YAAM,MAAM,wBAAwB,CAAxB,GAA4B,GAAlC,CAAN;AACD;AACF;AAvD0B,CAA7B","file":"sanitizer-compiled.js","sourcesContent":["var object, sanitizer,\n  __hasProp = {}.hasOwnProperty;\n\nobject = require('utila').object;\n\nmodule.exports = sanitizer = {\n  sanitize: function(val) {\n    return sanitizer._sanitizeAsChildren(val);\n  },\n  _sanitizeAsChildren: function(val) {\n    var _ref;\n    if (object.isBareObject(val)) {\n      return sanitizer._sanitizeObjectAsChildren(val);\n    } else if (Array.isArray(val)) {\n      return sanitizer._sanitizeArrayAsChildren(val);\n    } else if (val === null || typeof val === 'undefined') {\n      return [];\n    } else if ((_ref = typeof val) === 'string' || _ref === 'number') {\n      return [String(val)];\n    } else {\n      throw Error(\"not a valid child node: `\" + val);\n    }\n  },\n  _sanitizeObjectAsChildren: function(o) {\n    var a, cur, key, val;\n    a = [];\n    for (key in o) {\n      if (!__hasProp.call(o, key)) continue;\n      val = o[key];\n      cur = {};\n      cur[key] = sanitizer.sanitize(val);\n      a.push(cur);\n    }\n    return a;\n  },\n  _sanitizeArrayAsChildren: function(a) {\n    var ret, v, _i, _len;\n    ret = [];\n    for (_i = 0, _len = a.length; _i < _len; _i++) {\n      v = a[_i];\n      ret.push(sanitizer._sanitizeAsNode(v));\n    }\n    return ret;\n  },\n  _sanitizeAsNode: function(o) {\n    var key, keys, obj, _ref;\n    if ((_ref = typeof o) === 'string' || _ref === 'number') {\n      return String(o);\n    } else if (object.isBareObject(o)) {\n      keys = Object.keys(o);\n      if (keys.length !== 1) {\n        throw Error(\"a node must only have one key as tag name\");\n      }\n      key = keys[0];\n      obj = {};\n      obj[key] = sanitizer._sanitizeAsChildren(o[key]);\n      return obj;\n    } else {\n      throw Error(\"not a valid node: `\" + o + \"`\");\n    }\n  }\n};\n"]}