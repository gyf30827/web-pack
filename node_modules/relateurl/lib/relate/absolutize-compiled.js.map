{"version":3,"sources":["absolutize.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,gBAAR,CAAnB;AACA,IAAI,WAAe,QAAQ,gBAAR,CAAnB;AACA,IAAI,YAAe,QAAQ,cAAR,CAAnB;;AAIA,SAAS,UAAT,CAAoB,MAApB,EAA4B,UAA5B,EAAwC,OAAxC,EACA;AACC,cAAa,QAAb,CAAsB,MAAtB,EAA8B,UAA9B,EAA0C,OAA1C;;AAEA;AACA,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,aAA1B,EAAyC,OAAO,MAAP,GAAgB,WAAW,MAA3B;AACzC,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,WAA1B,EAAyC,OAAO,IAAP,GAAgB,WAAW,IAA3B;AACzC,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,WAA1B,EAAyC,OAAO,IAAP,GAAgB,SAAS,KAAT,CAAe,WAAW,IAA1B,CAAhB;AACzC,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,WAA1B,EAAyC,SAAS,MAAT,EAAiB,UAAjB;AACzC,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,aAA1B,EAAyC,SAAS,MAAT,EAAiB,UAAjB;;AAEzC;AACA,cAAa,MAAb,CAAoB,MAApB,EAA4B,UAA5B,EAAwC,OAAxC;;AAEA;AACA,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,eAA1B,EAA2C,aAAa,MAAb,EAAqB,UAArB;AAC3C,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,YAA1B,EAA2C,OAAO,KAAP,GAAe,SAAS,KAAT,CAAe,WAAW,KAA1B,CAAf;AAC3C,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,WAA1B,EAA2C,OAAO,IAAP,GAAe,WAAW,IAA1B;AAC3C;;AAID;;;AAGA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,UAA1B,EACA;AACC,KAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,IAAqC,CAAC,OAAO,KAAP,CAAa,QAAb,CAAsB,mBAAhE,EACA;AACC,MAAI,YAAY,OAAO,IAAP,CAAY,QAAZ,CAAqB,KAArC;AACA,MAAI,aAAa,GAAjB;;AAEA;AACA,MAAI,SAAJ,EACA;AACC;AACA,OAAI,OAAO,KAAP,CAAa,QAAb,CAAsB,eAAtB,IAAyC,OAAO,IAAP,CAAY,QAAZ,CAAqB,MAArB,CAA4B,OAA5B,CAAoC,GAApC,MAA2C,CAAxF,EACA;AACC;AACA,gBAAY,WAAW,IAAX,CAAgB,QAAhB,CAAyB,KAAzB,CAA+B,MAA/B,CAAsC,SAAtC,CAAZ;AACA;;AAED,eAAc,UAAU,kBAAV,CAA6B,SAA7B,CAAd;AACA,iBAAc,UAAU,IAAV,CAAe,SAAf,CAAd;AACA,GAXD,MAaA;AACC,eAAY,EAAZ;AACA;;AAED,SAAO,IAAP,CAAY,QAAZ,CAAqB,KAArB,GAA8B,SAA9B;AACA,SAAO,IAAP,CAAY,QAAZ,CAAqB,MAArB,GAA8B,UAA9B;AACA,EAzBD,MA2BA;AACC;AACA,SAAO,IAAP,GAAc,SAAS,KAAT,CAAe,WAAW,IAA1B,CAAd;AACA;AACD;;AAID,SAAS,QAAT,CAAkB,MAAlB,EAA0B,UAA1B,EACA;AACC,QAAO,IAAP,GAAc,WAAW,IAAzB;;AAEA,QAAO,KAAP,CAAa,aAAb,GAA6B,WAAW,KAAX,CAAiB,aAA9C;AACA;;AAID,SAAS,YAAT,CAAsB,MAAtB,EAA8B,UAA9B,EACA;AACC,QAAO,QAAP,GAAkB,WAAW,QAA7B;;AAEA,QAAO,KAAP,CAAa,eAAb,GAA+B,WAAW,KAAX,CAAiB,eAAhD;AACA;;AAID,OAAO,OAAP,GAAiB,UAAjB","file":"absolutize-compiled.js","sourcesContent":["\"use strict\";\n\nvar findRelation = require(\"./findRelation\");\nvar objUtils     = require(\"../util/object\");\nvar pathUtils    = require(\"../util/path\");\n\n\n\nfunction absolutize(urlObj, siteUrlObj, options)\n{\n\tfindRelation.upToPath(urlObj, siteUrlObj, options);\n\t\n\t// Fill in relative URLs\n\tif (urlObj.extra.relation.minimumScheme) urlObj.scheme = siteUrlObj.scheme;\n\tif (urlObj.extra.relation.minimumAuth)   urlObj.auth   = siteUrlObj.auth;\n\tif (urlObj.extra.relation.minimumHost)   urlObj.host   = objUtils.clone(siteUrlObj.host);\n\tif (urlObj.extra.relation.minimumPort)   copyPort(urlObj, siteUrlObj);\n\tif (urlObj.extra.relation.minimumScheme) copyPath(urlObj, siteUrlObj);\n\t\n\t// Check remaining relativeness now that path has been copied and/or resolved\n\tfindRelation.pathOn(urlObj, siteUrlObj, options);\n\t\n\t// Fill in relative URLs\n\tif (urlObj.extra.relation.minimumResource) copyResource(urlObj, siteUrlObj);\n\tif (urlObj.extra.relation.minimumQuery)    urlObj.query = objUtils.clone(siteUrlObj.query);\n\tif (urlObj.extra.relation.minimumHash)     urlObj.hash  = siteUrlObj.hash;\n}\n\n\n\n/*\n\tGet an absolute path that's relative to site url.\n*/\nfunction copyPath(urlObj, siteUrlObj)\n{\n\tif (urlObj.extra.relation.maximumHost || !urlObj.extra.hrefInfo.minimumResourceOnly)\n\t{\n\t\tvar pathArray = urlObj.path.absolute.array;\n\t\tvar pathString = \"/\";\n\t\t\n\t\t// If not erroneous URL\n\t\tif (pathArray)\n\t\t{\n\t\t\t// If is relative path\n\t\t\tif (urlObj.extra.hrefInfo.minimumPathOnly && urlObj.path.absolute.string.indexOf(\"/\")!==0)\n\t\t\t{\n\t\t\t\t// Append path to site path\n\t\t\t\tpathArray = siteUrlObj.path.absolute.array.concat(pathArray);\n\t\t\t}\n\t\t\t\n\t\t\tpathArray   = pathUtils.resolveDotSegments(pathArray);\n\t\t\tpathString += pathUtils.join(pathArray);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpathArray = [];\n\t\t}\n\t\t\n\t\turlObj.path.absolute.array  = pathArray;\n\t\turlObj.path.absolute.string = pathString;\n\t}\n\telse\n\t{\n\t\t// Resource-, query- or hash-only or empty\n\t\turlObj.path = objUtils.clone(siteUrlObj.path);\n\t}\n}\n\n\n\nfunction copyPort(urlObj, siteUrlObj)\n{\n\turlObj.port = siteUrlObj.port;\n\t\n\turlObj.extra.portIsDefault = siteUrlObj.extra.portIsDefault;\n}\n\n\n\nfunction copyResource(urlObj, siteUrlObj)\n{\n\turlObj.resource = siteUrlObj.resource;\n\t\n\turlObj.extra.resourceIsIndex = siteUrlObj.extra.resourceIsIndex;\n}\n\n\n\nmodule.exports = absolutize;\n"]}