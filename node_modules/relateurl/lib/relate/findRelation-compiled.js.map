{"version":3,"sources":["findRelation.js"],"names":[],"mappings":"AAAA;;AAEA,SAAS,qBAAT,CAA+B,MAA/B,EAAuC,UAAvC,EAAmD,OAAnD,EACA;AACC;AACA,KAAI,WAAW,OAAO,KAAP,CAAa,QAAb,CAAsB,eAArC;;AAEA;AACA,KAAI,gBAAiB,OAAO,MAAP,KAAgB,WAAW,MAA3B,IAAqC,CAAC,OAAO,MAAlE;;AAEA;AACA,KAAI,cAAc,kBAAkB,OAAO,IAAP,KAAc,WAAW,IAAzB,IAAiC,QAAQ,UAAzC,IAAuD,QAAzE,CAAlB;;AAEA;AACA,KAAI,MAAM,QAAQ,UAAR,GAAqB,UAArB,GAAkC,MAA5C;AACA,KAAI,cAAc,gBAAgB,OAAO,IAAP,CAAY,GAAZ,MAAmB,WAAW,IAAX,CAAgB,GAAhB,CAAnB,IAA2C,QAA3D,CAAlB;;AAEA;AACA,KAAI,cAAc,gBAAgB,OAAO,IAAP,KAAc,WAAW,IAAzB,IAAiC,QAAjD,CAAlB;;AAEA,QAAO,KAAP,CAAa,QAAb,CAAsB,aAAtB,GAAsC,aAAtC;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAsC,WAAtC;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAsC,WAAtC;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAsC,WAAtC;;AAEA,QAAO,KAAP,CAAa,QAAb,CAAsB,aAAtB,GAAsC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,WAA1E;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAsC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,WAA1E;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAsC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,WAA1E;AACA;;AAID,SAAS,mBAAT,CAA6B,MAA7B,EAAqC,UAArC,EAAiD,OAAjD,EACA;AACC,KAAI,YAAY,OAAO,KAAP,CAAa,QAAb,CAAsB,gBAAtC;AACA,KAAI,WAAY,OAAO,KAAP,CAAa,QAAb,CAAsB,eAAtC;AACA,KAAI,QAAY,OAAO,KAAP,CAAa,QAAb,CAAsB,KAAtC,CAHD,CAG8C;;AAE7C;AACA,KAAI,cAAgB,OAAO,KAAP,CAAa,QAAb,CAAsB,WAA1C;AACA,KAAI,gBAAgB,OAAO,KAAP,CAAa,QAAb,CAAsB,aAA1C;;AAEA;AACA,KAAI,cAAc,eAAe,OAAO,IAAP,CAAY,QAAZ,CAAqB,MAArB,KAA8B,WAAW,IAAX,CAAgB,QAAhB,CAAyB,MAAxF;;AAEA;AACA,KAAI,mBAAoB,OAAO,QAAP,KAAkB,WAAW,QAA7B,IAAyC,CAAC,OAAO,QAAR,IAAoB,WAAW,KAAX,CAAiB,eAA/E,IAAoG,QAAQ,sBAAR,IAAkC,OAAO,KAAP,CAAa,eAA/C,IAAkE,CAAC,WAAW,QAAzM;AACA,KAAI,kBAAkB,gBAAgB,oBAAoB,SAApB,IAAiC,QAAjC,IAA6C,KAA7D,CAAtB;;AAEA;AACA,KAAI,QAAQ,QAAQ,kBAAR,GAA6B,UAA7B,GAA0C,MAAtD;AACA,KAAI,WAAW,OAAO,KAAP,CAAa,MAAb,CAAoB,KAApB,CAAf;AACA,KAAI,eAAe,WAAW,KAAX,CAAiB,MAAjB,CAAwB,KAAxB,CAAnB;AACA,KAAI,eAAgB,mBAAmB,CAAC,CAAC,QAArB,IAAiC,aAAW,YAA7C,IAA+D,CAAC,YAAY,KAAb,KAAuB,CAAC,OAAO,KAAP,CAAa,QAAb,CAAsB,kBAAhI;;AAEA,KAAI,cAAc,gBAAgB,OAAO,IAAP,KAAc,WAAW,IAA3D;;AAEA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAwC,WAAxC;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,eAAtB,GAAwC,eAAxC;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,YAAtB,GAAwC,YAAxC;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAwC,WAAxC;;AAEA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAwC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,WAA5E;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAwC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,eAA5E;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,eAAtB,GAAwC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,YAA5E;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,YAAtB,GAAwC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,WAA5E;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,WAAtB,GAAwC,CAAC,aAAD,IAAkB,iBAAiB,CAAC,WAA5E,CAjCD,CAiC0F;;AAEzF;AACA,QAAO,KAAP,CAAa,QAAb,CAAsB,cAAtB,GAAwC,eAAe,OAAO,KAAP,CAAa,QAAb,CAAsB,eAArC,IAAwD,CAAC,YAAzD,IAAyE,CAAC,CAAC,YAAnH;AACA;;AAID,OAAO,OAAP,GACA;AACC,SAAU,mBADX;AAEC,WAAU;AAFX,CADA","file":"findRelation-compiled.js","sourcesContent":["\"use strict\";\n\nfunction findRelation_upToPath(urlObj, siteUrlObj, options)\n{\n\t// Path- or root-relative URL\n\tvar pathOnly = urlObj.extra.hrefInfo.minimumPathOnly;\n\t\n\t// Matching scheme, scheme-relative or path-only\n\tvar minimumScheme = (urlObj.scheme===siteUrlObj.scheme || !urlObj.scheme);\n\t\n\t// Matching auth, ignoring auth or path-only\n\tvar minimumAuth = minimumScheme && (urlObj.auth===siteUrlObj.auth || options.removeAuth || pathOnly);\n\t\n\t// Matching host or path-only\n\tvar www = options.ignore_www ? \"stripped\" : \"full\";\n\tvar minimumHost = minimumAuth && (urlObj.host[www]===siteUrlObj.host[www] || pathOnly);\n\t\n\t// Matching port or path-only\n\tvar minimumPort = minimumHost && (urlObj.port===siteUrlObj.port || pathOnly);\n\t\n\turlObj.extra.relation.minimumScheme = minimumScheme;\n\turlObj.extra.relation.minimumAuth   = minimumAuth;\n\turlObj.extra.relation.minimumHost   = minimumHost;\n\turlObj.extra.relation.minimumPort   = minimumPort;\n\t\n\turlObj.extra.relation.maximumScheme = !minimumScheme || minimumScheme && !minimumAuth;\n\turlObj.extra.relation.maximumAuth   = !minimumScheme || minimumScheme && !minimumHost;\n\turlObj.extra.relation.maximumHost   = !minimumScheme || minimumScheme && !minimumPort;\n}\n\n\n\nfunction findRelation_pathOn(urlObj, siteUrlObj, options)\n{\n\tvar queryOnly = urlObj.extra.hrefInfo.minimumQueryOnly;\n\tvar hashOnly  = urlObj.extra.hrefInfo.minimumHashOnly;\n\tvar empty     = urlObj.extra.hrefInfo.empty;\t// not required, but self-documenting\n\t\n\t// From upToPath()\n\tvar minimumPort   = urlObj.extra.relation.minimumPort;\n\tvar minimumScheme = urlObj.extra.relation.minimumScheme;\n\t\n\t// Matching port and path\n\tvar minimumPath = minimumPort && urlObj.path.absolute.string===siteUrlObj.path.absolute.string;\n\t\n\t// Matching resource or query/hash-only or empty\n\tvar matchingResource = (urlObj.resource===siteUrlObj.resource || !urlObj.resource && siteUrlObj.extra.resourceIsIndex) || (options.removeDirectoryIndexes && urlObj.extra.resourceIsIndex && !siteUrlObj.resource);\n\tvar minimumResource = minimumPath && (matchingResource || queryOnly || hashOnly || empty);\n\t\n\t// Matching query or hash-only/empty\n\tvar query = options.removeEmptyQueries ? \"stripped\" : \"full\";\n\tvar urlQuery = urlObj.query.string[query];\n\tvar siteUrlQuery = siteUrlObj.query.string[query];\n\tvar minimumQuery = (minimumResource && !!urlQuery && urlQuery===siteUrlQuery) || ((hashOnly || empty) && !urlObj.extra.hrefInfo.separatorOnlyQuery);\n\t\n\tvar minimumHash = minimumQuery && urlObj.hash===siteUrlObj.hash;\n\t\n\turlObj.extra.relation.minimumPath     = minimumPath;\n\turlObj.extra.relation.minimumResource = minimumResource;\n\turlObj.extra.relation.minimumQuery    = minimumQuery;\n\turlObj.extra.relation.minimumHash     = minimumHash;\n\t\n\turlObj.extra.relation.maximumPort     = !minimumScheme || minimumScheme && !minimumPath;\n\turlObj.extra.relation.maximumPath     = !minimumScheme || minimumScheme && !minimumResource;\n\turlObj.extra.relation.maximumResource = !minimumScheme || minimumScheme && !minimumQuery;\n\turlObj.extra.relation.maximumQuery    = !minimumScheme || minimumScheme && !minimumHash;\n\turlObj.extra.relation.maximumHash     = !minimumScheme || minimumScheme && !minimumHash;\t// there's nothing after hash, so it's the same as maximumQuery\n\t\n\t// Matching path and/or resource with existing but non-matching site query\n\turlObj.extra.relation.overridesQuery  = minimumPath && urlObj.extra.relation.maximumResource && !minimumQuery && !!siteUrlQuery;\n}\n\n\n\nmodule.exports =\n{\n\tpathOn:   findRelation_pathOn,\n\tupToPath: findRelation_upToPath\n};\n"]}