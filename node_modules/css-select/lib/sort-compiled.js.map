{"version":3,"sources":["sort.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,eAAjB;;AAEA;;;;;;AAMA,IAAI,YAAY,QAAQ,kBAAR,CAAhB;;AAEA,IAAI,aAAa;AAChB,YAAW,IADK;AAEhB,SAAQ,EAFQ;AAGhB,SAAQ,CAHQ;AAIhB,MAAK,CAJW;AAKhB,QAAO,CALS;AAMhB,MAAK,CANW;AAOhB,MAAK,CAPW;AAQhB,SAAQ,CARQ;AAShB,UAAS;AATO,CAAjB;;AAYA,SAAS,eAAT,CAAyB,GAAzB,EAA6B;AAC5B,KAAI,QAAQ,IAAI,GAAJ,CAAQ,YAAR,CAAZ;AACA,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,IAAI,MAAvB,EAA+B,GAA/B,EAAmC;AAClC,MAAI,UAAU,MAAM,CAAN,CAAd;;AAEA,MAAG,UAAU,CAAb,EAAgB;;AAEhB,OAAI,IAAI,IAAI,IAAI,CAAhB,EAAmB,KAAK,CAAL,IAAU,UAAU,MAAM,CAAN,CAAvC,EAAiD,GAAjD,EAAqD;AACpD,OAAI,QAAQ,IAAI,IAAI,CAAR,CAAZ;AACA,OAAI,IAAI,CAAR,IAAa,IAAI,CAAJ,CAAb;AACA,OAAI,CAAJ,IAAS,KAAT;AACA,SAAM,IAAI,CAAV,IAAe,MAAM,CAAN,CAAf;AACA,SAAM,CAAN,IAAW,OAAX;AACA;AACD;AACD;;AAED,SAAS,YAAT,CAAsB,KAAtB,EAA4B;AAC3B,KAAI,OAAO,UAAU,MAAM,IAAhB,CAAX;;AAEA,KAAG,SAAS,UAAU,SAAtB,EAAgC;AAC/B,SAAO,WAAW,MAAM,MAAjB,CAAP;;AAEA,MAAG,SAAS,WAAW,MAApB,IAA8B,MAAM,IAAN,KAAe,IAAhD,EAAqD;AACpD;AACA,UAAO,CAAP;AACA;;AAED,MAAG,MAAM,UAAT,EAAoB;AACnB;AACA;AACA,YAAS,CAAT;AACA;AACD,EAbD,MAaO,IAAG,SAAS,UAAU,MAAtB,EAA6B;AACnC,MAAG,CAAC,MAAM,IAAV,EAAe;AACd,UAAO,CAAP;AACA,GAFD,MAEO,IAAG,MAAM,IAAN,KAAe,KAAf,IAAwB,MAAM,IAAN,KAAe,UAA1C,EAAqD;AAC3D,UAAO,CAAP,CAD2D,CACjD;AACV,GAFM,MAEA,IAAG,MAAM,IAAN,KAAe,SAAf,IAA4B,MAAM,IAAN,KAAe,KAA9C,EAAoD;AAC1D,UAAO,CAAP;AACA,QAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,MAAM,IAAN,CAAW,MAA9B,EAAsC,GAAtC,EAA0C;AACzC;AACA,QAAG,MAAM,IAAN,CAAW,CAAX,EAAc,MAAd,KAAyB,CAA5B,EAA+B;AAC/B,QAAI,MAAM,aAAa,MAAM,IAAN,CAAW,CAAX,EAAc,CAAd,CAAb,CAAV;AACA;AACA,QAAG,QAAQ,CAAX,EAAa;AACZ,YAAO,CAAP;AACA;AACA;AACD,QAAG,MAAM,IAAT,EAAe,OAAO,GAAP;AACf;AACD,OAAG,MAAM,IAAN,CAAW,MAAX,GAAoB,CAApB,IAAyB,OAAO,CAAnC,EAAsC,QAAQ,CAAR;AACtC,GAdM,MAcA;AACN,UAAO,CAAP;AACA;AACD;AACD,QAAO,IAAP;AACA","file":"sort-compiled.js","sourcesContent":["module.exports = sortByProcedure;\n\n/*\n\tsort the parts of the passed selector,\n\tas there is potential for optimization\n\t(some types of selectors are faster than others)\n*/\n\nvar procedure = require(\"./procedure.json\");\n\nvar attributes = {\n\t__proto__: null,\n\texists: 10,\n\tequals: 8,\n\tnot: 7,\n\tstart: 6,\n\tend: 6,\n\tany: 5,\n\thyphen: 4,\n\telement: 4\n};\n\nfunction sortByProcedure(arr){\n\tvar procs = arr.map(getProcedure);\n\tfor(var i = 1; i < arr.length; i++){\n\t\tvar procNew = procs[i];\n\n\t\tif(procNew < 0) continue;\n\n\t\tfor(var j = i - 1; j >= 0 && procNew < procs[j]; j--){\n\t\t\tvar token = arr[j + 1];\n\t\t\tarr[j + 1] = arr[j];\n\t\t\tarr[j] = token;\n\t\t\tprocs[j + 1] = procs[j];\n\t\t\tprocs[j] = procNew;\n\t\t}\n\t}\n}\n\nfunction getProcedure(token){\n\tvar proc = procedure[token.type];\n\n\tif(proc === procedure.attribute){\n\t\tproc = attributes[token.action];\n\n\t\tif(proc === attributes.equals && token.name === \"id\"){\n\t\t\t//prefer ID selectors (eg. #ID)\n\t\t\tproc = 9;\n\t\t}\n\n\t\tif(token.ignoreCase){\n\t\t\t//ignoreCase adds some overhead, prefer \"normal\" token\n\t\t\t//this is a binary operation, to ensure it's still an int\n\t\t\tproc >>= 1;\n\t\t}\n\t} else if(proc === procedure.pseudo){\n\t\tif(!token.data){\n\t\t\tproc = 3;\n\t\t} else if(token.name === \"has\" || token.name === \"contains\"){\n\t\t\tproc = 0; //expensive in any case\n\t\t} else if(token.name === \"matches\" || token.name === \"not\"){\n\t\t\tproc = 0;\n\t\t\tfor(var i = 0; i < token.data.length; i++){\n\t\t\t\t//TODO better handling of complex selectors\n\t\t\t\tif(token.data[i].length !== 1) continue;\n\t\t\t\tvar cur = getProcedure(token.data[i][0]);\n\t\t\t\t//avoid executing :has or :contains\n\t\t\t\tif(cur === 0){\n\t\t\t\t\tproc = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(cur > proc) proc = cur;\n\t\t\t}\n\t\t\tif(token.data.length > 1 && proc > 0) proc -= 1;\n\t\t} else {\n\t\t\tproc = 1;\n\t\t}\n\t}\n\treturn proc;\n}\n"]}