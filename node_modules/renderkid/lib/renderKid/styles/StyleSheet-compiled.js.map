{"version":3,"sources":["StyleSheet.js"],"names":[],"mappings":"AAAA;AACA,IAAI,IAAJ,EAAU,UAAV;;AAEA,OAAO,QAAQ,QAAR,CAAP;;AAEA,OAAO,OAAP,GAAiB,aAAc,YAAW;AACxC,MAAI,IAAJ;;AAEA,SAAO,UAAP;;AAEA,WAAS,UAAT,GAAsB;AACpB,SAAK,gBAAL,GAAwB,EAAxB;AACD;;AAED,aAAW,SAAX,CAAqB,OAArB,GAA+B,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AACxD,QAAI,GAAJ,EAAS,GAAT;AACA,QAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WAAK,QAAL,CAAc,QAAd,EAAwB,MAAxB;AACD,KAFD,MAEO,IAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;AACvC,WAAK,GAAL,IAAY,QAAZ,EAAsB;AACpB,cAAM,SAAS,GAAT,CAAN;AACA,aAAK,QAAL,CAAc,GAAd,EAAmB,GAAnB;AACD;AACF;AACD,WAAO,IAAP;AACD,GAXD;;AAaA,aAAW,SAAX,CAAqB,QAArB,GAAgC,UAAS,CAAT,EAAY,MAAZ,EAAoB;AAClD,QAAI,CAAJ,EAAO,GAAP,EAAY,GAAZ,EAAiB,QAAjB;AACA,UAAM,KAAK,cAAL,CAAoB,CAApB,CAAN;AACA,SAAK,IAAI,CAAJ,EAAO,MAAM,IAAI,MAAtB,EAA8B,IAAI,GAAlC,EAAuC,GAAvC,EAA4C;AAC1C,iBAAW,IAAI,CAAJ,CAAX;AACA,WAAK,cAAL,CAAoB,QAApB,EAA8B,MAA9B;AACD;AACD,WAAO,IAAP;AACD,GARD;;AAUA,aAAW,SAAX,CAAqB,cAArB,GAAsC,UAAS,CAAT,EAAY,MAAZ,EAAoB;AACxD,QAAI,IAAJ,EAAU,QAAV;AACA,eAAW,KAAK,iBAAL,CAAuB,CAAvB,CAAX;AACA,QAAI,EAAE,OAAO,KAAK,gBAAL,CAAsB,QAAtB,CAAT,CAAJ,EAA+C;AAC7C,aAAO,IAAI,IAAJ,CAAS,QAAT,CAAP;AACA,WAAK,gBAAL,CAAsB,QAAtB,IAAkC,IAAlC;AACD;AACD,SAAK,SAAL,CAAe,MAAf;AACA,WAAO,IAAP;AACD,GATD;;AAWA,aAAW,SAAX,CAAqB,WAArB,GAAmC,UAAS,EAAT,EAAa;AAC9C,QAAI,GAAJ,EAAS,IAAT,EAAe,KAAf,EAAsB,QAAtB;AACA,YAAQ,EAAR;AACA,UAAM,KAAK,gBAAX;AACA,SAAK,QAAL,IAAiB,GAAjB,EAAsB;AACpB,aAAO,IAAI,QAAJ,CAAP;AACA,UAAI,KAAK,QAAL,CAAc,OAAd,CAAsB,EAAtB,CAAJ,EAA+B;AAC7B,cAAM,IAAN,CAAW,IAAX;AACD;AACF;AACD,WAAO,KAAP;AACD,GAXD;;AAaA,aAAW,iBAAX,GAA+B,UAAS,QAAT,EAAmB;AAChD,WAAO,SAAS,OAAT,CAAiB,QAAjB,EAA2B,GAA3B,EAAgC,OAAhC,CAAwC,yBAAxC,EAAmE,IAAnE,EAAyE,IAAzE,EAAP;AACD,GAFD;;AAIA,aAAW,cAAX,GAA4B,UAAS,CAAT,EAAY;AACtC,WAAO,EAAE,IAAF,GAAS,KAAT,CAAe,GAAf,CAAP;AACD,GAFD;;AAIA,SAAO,UAAP;AAED,CAlE6B,EAA9B","file":"StyleSheet-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.9.3\nvar Rule, StyleSheet;\n\nRule = require('./Rule');\n\nmodule.exports = StyleSheet = (function() {\n  var self;\n\n  self = StyleSheet;\n\n  function StyleSheet() {\n    this._rulesBySelector = {};\n  }\n\n  StyleSheet.prototype.setRule = function(selector, styles) {\n    var key, val;\n    if (typeof selector === 'string') {\n      this._setRule(selector, styles);\n    } else if (typeof selector === 'object') {\n      for (key in selector) {\n        val = selector[key];\n        this._setRule(key, val);\n      }\n    }\n    return this;\n  };\n\n  StyleSheet.prototype._setRule = function(s, styles) {\n    var i, len, ref, selector;\n    ref = self.splitSelectors(s);\n    for (i = 0, len = ref.length; i < len; i++) {\n      selector = ref[i];\n      this._setSingleRule(selector, styles);\n    }\n    return this;\n  };\n\n  StyleSheet.prototype._setSingleRule = function(s, styles) {\n    var rule, selector;\n    selector = self.normalizeSelector(s);\n    if (!(rule = this._rulesBySelector[selector])) {\n      rule = new Rule(selector);\n      this._rulesBySelector[selector] = rule;\n    }\n    rule.setStyles(styles);\n    return this;\n  };\n\n  StyleSheet.prototype.getRulesFor = function(el) {\n    var ref, rule, rules, selector;\n    rules = [];\n    ref = this._rulesBySelector;\n    for (selector in ref) {\n      rule = ref[selector];\n      if (rule.selector.matches(el)) {\n        rules.push(rule);\n      }\n    }\n    return rules;\n  };\n\n  StyleSheet.normalizeSelector = function(selector) {\n    return selector.replace(/[\\s]+/g, ' ').replace(/[\\s]*([>\\,\\+]{1})[\\s]*/g, '$1').trim();\n  };\n\n  StyleSheet.splitSelectors = function(s) {\n    return s.trim().split(',');\n  };\n\n  return StyleSheet;\n\n})();\n"]}