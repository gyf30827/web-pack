{"version":3,"sources":["partitionObject.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAI,gBAAgB,QAAQ,iBAAR,CAApB;;AAEA;;;;;AAKA,SAAS,eAAT,CAAyB,MAAzB,EAAiC,QAAjC,EAA2C,OAA3C,EAAoD;AAClD,MAAI,QAAQ,EAAZ;AACA,MAAI,SAAS,EAAb;AACA,gBAAc,MAAd,EAAsB,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AAC1C,QAAI,SAAS,IAAT,CAAc,OAAd,EAAuB,KAAvB,EAA8B,GAA9B,EAAmC,MAAnC,CAAJ,EAAgD;AAC9C,YAAM,GAAN,IAAa,KAAb;AACD,KAFD,MAEO;AACL,aAAO,GAAP,IAAc,KAAd;AACD;AACF,GAND;AAOA,SAAO,CAAC,KAAD,EAAQ,MAAR,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,eAAjB","file":"partitionObject-compiled.js","sourcesContent":["/**\n * Copyright 2015-present Facebook. All Rights Reserved.\n *\n * @typechecks\n * \n */\n\n'use strict';\n\nvar forEachObject = require('./forEachObject');\n\n/**\n * Partitions an object given a predicate. All elements satisfying the predicate\n * are part of the first returned object, and all elements that don't are in the\n * second.\n */\nfunction partitionObject(object, callback, context) {\n  var first = {};\n  var second = {};\n  forEachObject(object, function (value, key) {\n    if (callback.call(context, value, key, object)) {\n      first[key] = value;\n    } else {\n      second[key] = value;\n    }\n  });\n  return [first, second];\n}\n\nmodule.exports = partitionObject;"]}