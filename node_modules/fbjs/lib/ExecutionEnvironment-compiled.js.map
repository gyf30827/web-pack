{"version":3,"sources":["ExecutionEnvironment.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA,IAAI,YAAY,CAAC,EAAE,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,QAAxC,IAAoD,OAAO,QAAP,CAAgB,aAAtE,CAAjB;;AAEA;;;;;;AAMA,IAAI,uBAAuB;;AAEzB,aAAW,SAFc;;AAIzB,iBAAe,OAAO,MAAP,KAAkB,WAJR;;AAMzB,wBAAsB,aAAa,CAAC,EAAE,OAAO,gBAAP,IAA2B,OAAO,WAApC,CANX;;AAQzB,kBAAgB,aAAa,CAAC,CAAC,OAAO,MARb;;AAUzB,cAAY,CAAC,SAVY,CAUF;;AAVE,CAA3B;;AAcA,OAAO,OAAP,GAAiB,oBAAjB","file":"ExecutionEnvironment-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;"]}