{"version":3,"sources":["getMarkupWrap.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;AAQA;;AAEA,IAAI,uBAAuB,QAAQ,wBAAR,CAA3B;;AAEA,IAAI,YAAY,QAAQ,aAAR,CAAhB;;AAEA;;;AAGA,IAAI,YAAY,qBAAqB,SAArB,GAAiC,SAAS,aAAT,CAAuB,KAAvB,CAAjC,GAAiE,IAAjF;;AAEA;;;;;;;AAOA,IAAI,aAAa,EAAjB;;AAEA,IAAI,aAAa,CAAC,CAAD,EAAI,0BAAJ,EAAgC,WAAhC,CAAjB;AACA,IAAI,YAAY,CAAC,CAAD,EAAI,SAAJ,EAAe,UAAf,CAAhB;AACA,IAAI,SAAS,CAAC,CAAD,EAAI,oBAAJ,EAA0B,uBAA1B,CAAb;;AAEA,IAAI,UAAU,CAAC,CAAD,EAAI,0CAAJ,EAAgD,QAAhD,CAAd;;AAEA,IAAI,aAAa;AACf,OAAK,CAAC,CAAD,EAAI,QAAJ,EAAc,QAAd,CADU;;AAGf,UAAQ,CAAC,CAAD,EAAI,OAAJ,EAAa,QAAb,CAHO;AAIf,SAAO,CAAC,CAAD,EAAI,kCAAJ,EAAwC,qBAAxC,CAJQ;AAKf,YAAU,CAAC,CAAD,EAAI,YAAJ,EAAkB,aAAlB,CALK;AAMf,WAAS,CAAC,CAAD,EAAI,UAAJ,EAAgB,WAAhB,CANM;AAOf,QAAM,CAAC,CAAD,EAAI,gBAAJ,EAAsB,kBAAtB,CAPS;;AASf,cAAY,UATG;AAUf,YAAU,UAVK;;AAYf,aAAW,SAZI;AAaf,cAAY,SAbG;AAcf,WAAS,SAdM;AAef,WAAS,SAfM;AAgBf,WAAS,SAhBM;;AAkBf,QAAM,MAlBS;AAmBf,QAAM;AAnBS,CAAjB;;AAsBA;AACA;AACA;AACA,IAAI,cAAc,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA+B,SAA/B,EAA0C,GAA1C,EAA+C,OAA/C,EAAwD,MAAxD,EAAgE,gBAAhE,EAAkF,MAAlF,EAA0F,MAA1F,EAAkG,SAAlG,EAA6G,SAA7G,EAAwH,UAAxH,EAAoI,gBAApI,EAAsJ,MAAtJ,EAA8J,MAA9J,EAAsK,MAAtK,EAA8K,OAA9K,CAAlB;AACA,YAAY,OAAZ,CAAoB,UAAU,QAAV,EAAoB;AACtC,aAAW,QAAX,IAAuB,OAAvB;AACA,aAAW,QAAX,IAAuB,IAAvB;AACD,CAHD;;AAKA;;;;;;;;AAQA,SAAS,aAAT,CAAuB,QAAvB,EAAiC;AAC/B,GAAC,CAAC,CAAC,SAAH,GAAe,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,UAAU,KAAV,EAAiB,sCAAjB,CAAxC,GAAmG,UAAU,KAAV,CAAlH,GAAqI,KAAK,CAA1I;AACA,MAAI,CAAC,WAAW,cAAX,CAA0B,QAA1B,CAAL,EAA0C;AACxC,eAAW,GAAX;AACD;AACD,MAAI,CAAC,WAAW,cAAX,CAA0B,QAA1B,CAAL,EAA0C;AACxC,QAAI,aAAa,GAAjB,EAAsB;AACpB,gBAAU,SAAV,GAAsB,UAAtB;AACD,KAFD,MAEO;AACL,gBAAU,SAAV,GAAsB,MAAM,QAAN,GAAiB,KAAjB,GAAyB,QAAzB,GAAoC,GAA1D;AACD;AACD,eAAW,QAAX,IAAuB,CAAC,UAAU,UAAlC;AACD;AACD,SAAO,WAAW,QAAX,IAAuB,WAAW,QAAX,CAAvB,GAA8C,IAArD;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"getMarkupWrap-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;"]}