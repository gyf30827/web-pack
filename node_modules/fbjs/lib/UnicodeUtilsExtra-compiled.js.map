{"version":3,"sources":["UnicodeUtilsExtra.js"],"names":[],"mappings":"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","file":"UnicodeUtilsExtra-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * Unicode-enabled extra utility functions not always needed.\n */\n\n'use strict';\n\nvar UnicodeUtils = require('./UnicodeUtils');\n\n/**\n * @param {number} codePoint  Valid Unicode code-point\n * @param {number} len        Zero-padded minimum width of result\n * @return {string}           A zero-padded hexadecimal string (00XXXX)\n */\nfunction zeroPaddedHex(codePoint, len) {\n  var codePointHex = codePoint.toString(16).toUpperCase();\n  var numZeros = Math.max(0, len - codePointHex.length);\n  var result = '';\n  for (var i = 0; i < numZeros; i++) {\n    result += '0';\n  }\n  result += codePointHex;\n  return result;\n}\n\n/**\n * @param {number} codePoint  Valid Unicode code-point\n * @return {string}           A formatted Unicode code-point string\n *                            of the format U+XXXX, U+XXXXX, or U+XXXXXX\n */\nfunction formatCodePoint(codePoint) {\n  codePoint = codePoint || 0; // NaN --> 0\n  var formatted = '';\n  if (codePoint <= 0xFFFF) {\n    formatted = zeroPaddedHex(codePoint, 4);\n  } else {\n    formatted = codePoint.toString(16).toUpperCase();\n  }\n  return 'U+' + formatted;\n}\n\n/**\n * Get a list of formatted (string) Unicode code-points from a String\n *\n * @param {string} str        Valid Unicode string\n * @return {array<string>}    A list of formatted code-point strings\n */\nfunction getCodePointsFormatted(str) {\n  var codePoints = UnicodeUtils.getCodePoints(str);\n  return codePoints.map(formatCodePoint);\n}\n\nvar specialEscape = {\n  0x07: '\\\\a',\n  0x08: '\\\\b',\n  0x0C: '\\\\f',\n  0x0A: '\\\\n',\n  0x0D: '\\\\r',\n  0x09: '\\\\t',\n  0x0B: '\\\\v',\n  0x22: '\\\\\"',\n  0x5c: '\\\\\\\\'\n};\n\n/**\n * Returns a double-quoted PHP string with all non-printable and\n * non-US-ASCII sequences escaped.\n *\n * @param {string} str Valid Unicode string\n * @return {string}    Double-quoted string with Unicode sequences escaped\n */\nfunction phpEscape(s) {\n  var result = '\"';\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = UnicodeUtils.getCodePoints(s)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var cp = _step.value;\n\n      var special = specialEscape[cp];\n      if (special !== undefined) {\n        result += special;\n      } else if (cp >= 0x20 && cp <= 0x7e) {\n        result += String.fromCodePoint(cp);\n      } else if (cp <= 0xFFFF) {\n        result += '\\\\u{' + zeroPaddedHex(cp, 4) + '}';\n      } else {\n        result += '\\\\u{' + zeroPaddedHex(cp, 6) + '}';\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  result += '\"';\n  return result;\n}\n\n/**\n * Returns a double-quoted Java or JavaScript string with all\n * non-printable and non-US-ASCII sequences escaped.\n *\n * @param {string} str Valid Unicode string\n * @return {string}    Double-quoted string with Unicode sequences escaped\n */\nfunction jsEscape(s) {\n  var result = '\"';\n  for (var i = 0; i < s.length; i++) {\n    var cp = s.charCodeAt(i);\n    var special = specialEscape[cp];\n    if (special !== undefined) {\n      result += special;\n    } else if (cp >= 0x20 && cp <= 0x7e) {\n      result += String.fromCodePoint(cp);\n    } else {\n      result += '\\\\u' + zeroPaddedHex(cp, 4);\n    }\n  }\n  result += '\"';\n  return result;\n}\n\nfunction c11Escape(s) {\n  var result = '';\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = UnicodeUtils.getCodePoints(s)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var cp = _step2.value;\n\n      var special = specialEscape[cp];\n      if (special !== undefined) {\n        result += special;\n      } else if (cp >= 0x20 && cp <= 0x7e) {\n        result += String.fromCodePoint(cp);\n      } else if (cp <= 0xFFFF) {\n        result += '\\\\u' + zeroPaddedHex(cp, 4);\n      } else {\n        result += '\\\\U' + zeroPaddedHex(cp, 8);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n        _iterator2['return']();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Returns a double-quoted C string with all non-printable and\n * non-US-ASCII sequences escaped.\n *\n * @param {string} str Valid Unicode string\n * @return {string}    Double-quoted string with Unicode sequences escaped\n */\nfunction cEscape(s) {\n  return 'u8\"' + c11Escape(s) + '\"';\n}\n\n/**\n * Returns a double-quoted Objective-C string with all non-printable\n * and non-US-ASCII sequences escaped.\n *\n * @param {string} str Valid Unicode string\n * @return {string}    Double-quoted string with Unicode sequences escaped\n */\nfunction objcEscape(s) {\n  return '@\"' + c11Escape(s) + '\"';\n}\n\n/**\n * Returns a double-quoted Python string with all non-printable\n * and non-US-ASCII sequences escaped.\n *\n * @param {string} str Valid Unicode string\n * @return {string}    Double-quoted string with Unicode sequences escaped\n */\nfunction pyEscape(s) {\n  return 'u\"' + c11Escape(s) + '\"';\n}\n\nvar UnicodeUtilsExtra = {\n  formatCodePoint: formatCodePoint,\n  getCodePointsFormatted: getCodePointsFormatted,\n  zeroPaddedHex: zeroPaddedHex,\n  phpEscape: phpEscape,\n  jsEscape: jsEscape,\n  cEscape: cEscape,\n  objcEscape: objcEscape,\n  pyEscape: pyEscape\n};\n\nmodule.exports = UnicodeUtilsExtra;"]}