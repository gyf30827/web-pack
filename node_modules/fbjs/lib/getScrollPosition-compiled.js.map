{"version":3,"sources":["getScrollPosition.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA;;AAEA,IAAI,2BAA2B,QAAQ,4BAAR,CAA/B;AACA,IAAI,6BAA6B,QAAQ,8BAAR,CAAjC;;AAEA;;;;;;;;;;;;AAYA,SAAS,iBAAT,CAA2B,UAA3B,EAAuC;AACrC,MAAI,wBAAwB,yBAAyB,WAAW,aAAX,IAA4B,WAAW,QAAhE,CAA5B;AACA,MAAI,WAAW,MAAX,IAAqB,sBAAsB,WAAW,MAA1D,EAAkE;AAChE,iBAAa,qBAAb;AACD;AACD,MAAI,iBAAiB,2BAA2B,UAA3B,CAArB;;AAEA,MAAI,WAAW,eAAe,qBAAf,GAAuC,WAAW,aAAX,CAAyB,eAAhE,GAAkF,UAAjG;;AAEA,MAAI,OAAO,WAAW,WAAX,GAAyB,SAAS,WAA7C;AACA,MAAI,OAAO,WAAW,YAAX,GAA0B,SAAS,YAA9C;;AAEA,iBAAe,CAAf,GAAmB,KAAK,GAAL,CAAS,CAAT,EAAY,KAAK,GAAL,CAAS,eAAe,CAAxB,EAA2B,IAA3B,CAAZ,CAAnB;AACA,iBAAe,CAAf,GAAmB,KAAK,GAAL,CAAS,CAAT,EAAY,KAAK,GAAL,CAAS,eAAe,CAAxB,EAA2B,IAA3B,CAAZ,CAAnB;;AAEA,SAAO,cAAP;AACD;;AAED,OAAO,OAAP,GAAiB,iBAAjB","file":"getScrollPosition-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar getDocumentScrollElement = require('./getDocumentScrollElement');\nvar getUnboundedScrollPosition = require('./getUnboundedScrollPosition');\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are bounded. This means that if the scroll position is\n * negative or exceeds the element boundaries (which is possible using inertial\n * scrolling), you will get zero or the maximum scroll position, respectively.\n *\n * If you need the unbound scroll position, use `getUnboundedScrollPosition`.\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getScrollPosition(scrollable) {\n  var documentScrollElement = getDocumentScrollElement(scrollable.ownerDocument || scrollable.document);\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    scrollable = documentScrollElement;\n  }\n  var scrollPosition = getUnboundedScrollPosition(scrollable);\n\n  var viewport = scrollable === documentScrollElement ? scrollable.ownerDocument.documentElement : scrollable;\n\n  var xMax = scrollable.scrollWidth - viewport.clientWidth;\n  var yMax = scrollable.scrollHeight - viewport.clientHeight;\n\n  scrollPosition.x = Math.max(0, Math.min(scrollPosition.x, xMax));\n  scrollPosition.y = Math.max(0, Math.min(scrollPosition.y, yMax));\n\n  return scrollPosition;\n}\n\nmodule.exports = getScrollPosition;"]}