{"version":3,"sources":["memoizeStringOnly.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA;;;;AAIA,SAAS,iBAAT,CAA2B,QAA3B,EAAqC;AACnC,MAAI,QAAQ,EAAZ;AACA,SAAO,UAAU,MAAV,EAAkB;AACvB,QAAI,CAAC,MAAM,cAAN,CAAqB,MAArB,CAAL,EAAmC;AACjC,YAAM,MAAN,IAAgB,SAAS,IAAT,CAAc,IAAd,EAAoB,MAApB,CAAhB;AACD;AACD,WAAO,MAAM,MAAN,CAAP;AACD,GALD;AAMD;;AAED,OAAO,OAAP,GAAiB,iBAAjB","file":"memoizeStringOnly-compiled.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;"]}