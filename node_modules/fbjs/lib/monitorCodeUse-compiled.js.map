{"version":3,"sources":["monitorCodeUse.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA,IAAI,YAAY,QAAQ,aAAR,CAAhB;;AAEA;;;;;;;AAOA,SAAS,cAAT,CAAwB,SAAxB,EAAmC,IAAnC,EAAyC;AACvC,IAAE,aAAa,CAAC,aAAa,IAAb,CAAkB,SAAlB,CAAhB,IAAgD,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,UAAU,KAAV,EAAiB,mEAAjB,CAAxC,GAAgI,UAAU,KAAV,CAAhL,GAAmM,KAAK,CAAxM;AACD;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"monitorCodeUse-compiled.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Provides open-source compatible instrumentation for monitoring certain API\n * uses before we're ready to issue a warning or refactor. It accepts an event\n * name which may only contain the characters [a-z0-9_] and an optional data\n * object with further information.\n */\n\nfunction monitorCodeUse(eventName, data) {\n  !(eventName && !/[^a-z0-9_]/.test(eventName)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You must provide an eventName using only the characters [a-z0-9_]') : invariant(false) : void 0;\n}\n\nmodule.exports = monitorCodeUse;"]}