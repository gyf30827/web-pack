{"version":3,"sources":["partitionObjectByKey.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAI,kBAAkB,QAAQ,mBAAR,CAAtB;;AAEA;;;;;;AAMA,SAAS,oBAAT,CAA8B,MAA9B,EAAsC,SAAtC,EAAiD;AAC/C,SAAO,gBAAgB,MAAhB,EAAwB,UAAU,CAAV,EAAa,GAAb,EAAkB;AAC/C,WAAO,UAAU,GAAV,CAAc,GAAd,CAAP;AACD,GAFM,CAAP;AAGD;;AAED,OAAO,OAAP,GAAiB,oBAAjB","file":"partitionObjectByKey-compiled.js","sourcesContent":["/**\n * Copyright 2015-present Facebook. All Rights Reserved.\n *\n * @typechecks\n * \n */\n\n'use strict';\n\nvar partitionObject = require('./partitionObject');\n\n/**\n * Partitions the enumerable properties of an object into two objects, given a\n * whitelist `Set` for the first object. This is comparable to\n * `whitelistObjectKeys`, but eventually keeping all the keys. Returns a tuple\n * of objects `[first, second]`.\n */\nfunction partitionObjectByKey(source, whitelist) {\n  return partitionObject(source, function (_, key) {\n    return whitelist.has(key);\n  });\n}\n\nmodule.exports = partitionObjectByKey;"]}