{"version":3,"sources":["_shouldPolyfillES6Collection.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;;AAUA;;;;;AAIA,SAAS,2BAAT,CAAqC,cAArC,EAAqD;AACnD,MAAI,aAAa,OAAO,cAAP,CAAjB;AACA,MAAI,cAAc,IAAlB,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED;AACA;AACA;AACA;AACA,MAAI,OAAO,OAAO,MAAd,KAAyB,UAA7B,EAAyC;AACvC,WAAO,IAAP;AACD;;AAED,MAAI,QAAQ,WAAW,SAAvB;;AAEA;AACA;AACA;AACA,SAAO,cAAc,IAAd,IAAsB,OAAO,UAAP,KAAsB,UAA5C,IAA0D,OAAO,MAAM,KAAb,KAAuB,UAAjF,IAA+F,IAAI,UAAJ,GAAiB,IAAjB,KAA0B,CAAzH,IAA8H,OAAO,MAAM,IAAb,KAAsB,UAApJ,IAAkK,OAAO,MAAM,OAAb,KAAyB,UAAlM;AACD;;AAED,OAAO,OAAP,GAAiB,2BAAjB","file":"_shouldPolyfillES6Collection-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @preventMunge\n * \n */\n\n/**\n * Checks whether a collection name (e.g. \"Map\" or \"Set\") has a native polyfill\n * that is safe to be used.\n */\nfunction shouldPolyfillES6Collection(collectionName) {\n  var Collection = global[collectionName];\n  if (Collection == null) {\n    return true;\n  }\n\n  // The iterator protocol depends on `Symbol.iterator`. If a collection is\n  // implemented, but `Symbol` is not, it's going to break iteration because\n  // we'll be using custom \"@@iterator\" instead, which is not implemented on\n  // native collections.\n  if (typeof global.Symbol !== 'function') {\n    return true;\n  }\n\n  var proto = Collection.prototype;\n\n  // These checks are adapted from es6-shim: https://fburl.com/34437854\n  // NOTE: `isCallableWithoutNew` and `!supportsSubclassing` are not checked\n  // because they make debugging with \"break on exceptions\" difficult.\n  return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';\n}\n\nmodule.exports = shouldPolyfillES6Collection;"]}