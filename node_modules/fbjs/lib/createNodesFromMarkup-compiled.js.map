{"version":3,"sources":["createNodesFromMarkup.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;AASA;;AAEA,IAAI,uBAAuB,QAAQ,wBAAR,CAA3B;;AAEA,IAAI,uBAAuB,QAAQ,wBAAR,CAA3B;AACA,IAAI,gBAAgB,QAAQ,iBAAR,CAApB;AACA,IAAI,YAAY,QAAQ,aAAR,CAAhB;;AAEA;;;AAGA,IAAI,YAAY,qBAAqB,SAArB,GAAiC,SAAS,aAAT,CAAuB,KAAvB,CAAjC,GAAiE,IAAjF;;AAEA;;;AAGA,IAAI,kBAAkB,YAAtB;;AAEA;;;;;;AAMA,SAAS,WAAT,CAAqB,MAArB,EAA6B;AAC3B,MAAI,gBAAgB,OAAO,KAAP,CAAa,eAAb,CAApB;AACA,SAAO,iBAAiB,cAAc,CAAd,EAAiB,WAAjB,EAAxB;AACD;;AAED;;;;;;;;;;AAUA,SAAS,qBAAT,CAA+B,MAA/B,EAAuC,YAAvC,EAAqD;AACnD,MAAI,OAAO,SAAX;AACA,GAAC,CAAC,CAAC,SAAH,GAAe,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,UAAU,KAAV,EAAiB,6CAAjB,CAAxC,GAA0G,UAAU,KAAV,CAAzH,GAA4I,KAAK,CAAjJ;AACA,MAAI,WAAW,YAAY,MAAZ,CAAf;;AAEA,MAAI,OAAO,YAAY,cAAc,QAAd,CAAvB;AACA,MAAI,IAAJ,EAAU;AACR,SAAK,SAAL,GAAiB,KAAK,CAAL,IAAU,MAAV,GAAmB,KAAK,CAAL,CAApC;;AAEA,QAAI,YAAY,KAAK,CAAL,CAAhB;AACA,WAAO,WAAP,EAAoB;AAClB,aAAO,KAAK,SAAZ;AACD;AACF,GAPD,MAOO;AACL,SAAK,SAAL,GAAiB,MAAjB;AACD;;AAED,MAAI,UAAU,KAAK,oBAAL,CAA0B,QAA1B,CAAd;AACA,MAAI,QAAQ,MAAZ,EAAoB;AAClB,KAAC,YAAD,GAAgB,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,UAAU,KAAV,EAAiB,mEAAjB,CAAxC,GAAgI,UAAU,KAAV,CAAhJ,GAAmK,KAAK,CAAxK;AACA,yBAAqB,OAArB,EAA8B,OAA9B,CAAsC,YAAtC;AACD;;AAED,MAAI,QAAQ,MAAM,IAAN,CAAW,KAAK,UAAhB,CAAZ;AACA,SAAO,KAAK,SAAZ,EAAuB;AACrB,SAAK,WAAL,CAAiB,KAAK,SAAtB;AACD;AACD,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,qBAAjB","file":"createNodesFromMarkup-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;"]}