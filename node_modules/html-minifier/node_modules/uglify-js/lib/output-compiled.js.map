{"version":3,"sources":["output.js"],"names":[],"mappings":"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","file":"output-compiled.js","sourcesContent":["/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nvar EXPECT_DIRECTIVE = /^$|[;{][\\s\\n]*$/;\n\nfunction is_some_comments(comment) {\n    // multiline comment\n    return comment.type == \"comment2\" && /@preserve|@license|@cc_on/i.test(comment.value);\n}\n\nfunction OutputStream(options) {\n\n    options = defaults(options, {\n        ascii_only       : false,\n        beautify         : false,\n        bracketize       : false,\n        comments         : false,\n        ie8              : false,\n        indent_level     : 4,\n        indent_start     : 0,\n        inline_script    : true,\n        keep_quoted_props: false,\n        max_line_len     : false,\n        preamble         : null,\n        preserve_line    : false,\n        quote_keys       : false,\n        quote_style      : 0,\n        semicolons       : true,\n        shebang          : true,\n        source_map       : null,\n        webkit           : false,\n        width            : 80,\n        wrap_iife        : false,\n    }, true);\n\n    // Convert comment option to RegExp if neccessary and set up comments filter\n    var comment_filter = return_false; // Default case, throw all comments away\n    if (options.comments) {\n        var comments = options.comments;\n        if (typeof options.comments === \"string\" && /^\\/.*\\/[a-zA-Z]*$/.test(options.comments)) {\n            var regex_pos = options.comments.lastIndexOf(\"/\");\n            comments = new RegExp(\n                options.comments.substr(1, regex_pos - 1),\n                options.comments.substr(regex_pos + 1)\n            );\n        }\n        if (comments instanceof RegExp) {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments.test(comment.value);\n            };\n        }\n        else if (typeof comments === \"function\") {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments(this, comment);\n            };\n        }\n        else if (comments === \"some\") {\n            comment_filter = is_some_comments;\n        } else { // NOTE includes \"all\" option\n            comment_filter = return_true;\n        }\n    }\n\n    var indentation = 0;\n    var current_col = 0;\n    var current_line = 1;\n    var current_pos = 0;\n    var OUTPUT = \"\";\n\n    var to_utf8 = options.ascii_only ? function(str, identifier) {\n        return str.replace(/[\\u0000-\\u001f\\u007f-\\uffff]/g, function(ch) {\n            var code = ch.charCodeAt(0).toString(16);\n            if (code.length <= 2 && !identifier) {\n                while (code.length < 2) code = \"0\" + code;\n                return \"\\\\x\" + code;\n            } else {\n                while (code.length < 4) code = \"0\" + code;\n                return \"\\\\u\" + code;\n            }\n        });\n    } : function(str) {\n        return str.replace(/[\\ud800-\\udbff](?![\\udc00-\\udfff])/g, function(ch) {\n            return \"\\\\u\" + ch.charCodeAt(0).toString(16);\n        }).replace(/(^|[^\\ud800-\\udbff])([\\udc00-\\udfff])/g, function(match, prefix, ch) {\n            return prefix + \"\\\\u\" + ch.charCodeAt(0).toString(16);\n        });\n    };\n\n    function make_string(str, quote) {\n        var dq = 0, sq = 0;\n        str = str.replace(/[\\\\\\b\\f\\n\\r\\v\\t\\x22\\x27\\u2028\\u2029\\0\\ufeff]/g,\n          function(s, i){\n            switch (s) {\n              case '\"': ++dq; return '\"';\n              case \"'\": ++sq; return \"'\";\n              case \"\\\\\": return \"\\\\\\\\\";\n              case \"\\n\": return \"\\\\n\";\n              case \"\\r\": return \"\\\\r\";\n              case \"\\t\": return \"\\\\t\";\n              case \"\\b\": return \"\\\\b\";\n              case \"\\f\": return \"\\\\f\";\n              case \"\\x0B\": return options.ie8 ? \"\\\\x0B\" : \"\\\\v\";\n              case \"\\u2028\": return \"\\\\u2028\";\n              case \"\\u2029\": return \"\\\\u2029\";\n              case \"\\ufeff\": return \"\\\\ufeff\";\n              case \"\\0\":\n                  return /[0-9]/.test(str.charAt(i+1)) ? \"\\\\x00\" : \"\\\\0\";\n            }\n            return s;\n        });\n        function quote_single() {\n            return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n        }\n        function quote_double() {\n            return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n        }\n        str = to_utf8(str);\n        switch (options.quote_style) {\n          case 1:\n            return quote_single();\n          case 2:\n            return quote_double();\n          case 3:\n            return quote == \"'\" ? quote_single() : quote_double();\n          default:\n            return dq > sq ? quote_single() : quote_double();\n        }\n    };\n\n    function encode_string(str, quote) {\n        var ret = make_string(str, quote);\n        if (options.inline_script) {\n            ret = ret.replace(/<\\x2fscript([>\\/\\t\\n\\f\\r ])/gi, \"<\\\\/script$1\");\n            ret = ret.replace(/\\x3c!--/g, \"\\\\x3c!--\");\n            ret = ret.replace(/--\\x3e/g, \"--\\\\x3e\");\n        }\n        return ret;\n    };\n\n    function make_name(name) {\n        name = name.toString();\n        name = to_utf8(name, true);\n        return name;\n    };\n\n    function make_indent(back) {\n        return repeat_string(\" \", options.indent_start + indentation - back * options.indent_level);\n    };\n\n    /* -----[ beautification/minification ]----- */\n\n    var might_need_space = false;\n    var might_need_semicolon = false;\n    var might_add_newline = 0;\n    var last = \"\";\n    var mapping_token, mapping_name, mappings = options.source_map && [];\n\n    var do_add_mapping = mappings ? function() {\n        mappings.forEach(function(mapping) {\n            try {\n                options.source_map.add(\n                    mapping.token.file,\n                    mapping.line, mapping.col,\n                    mapping.token.line, mapping.token.col,\n                    !mapping.name && mapping.token.type == \"name\" ? mapping.token.value : mapping.name\n                );\n            } catch(ex) {\n                AST_Node.warn(\"Couldn't figure out mapping for {file}:{line},{col} → {cline},{ccol} [{name}]\", {\n                    file: mapping.token.file,\n                    line: mapping.token.line,\n                    col: mapping.token.col,\n                    cline: mapping.line,\n                    ccol: mapping.col,\n                    name: mapping.name || \"\"\n                })\n            }\n        });\n        mappings = [];\n    } : noop;\n\n    var ensure_line_len = options.max_line_len ? function() {\n        if (current_col > options.max_line_len) {\n            if (might_add_newline) {\n                var left = OUTPUT.slice(0, might_add_newline);\n                var right = OUTPUT.slice(might_add_newline);\n                if (mappings) {\n                    var delta = right.length - current_col;\n                    mappings.forEach(function(mapping) {\n                        mapping.line++;\n                        mapping.col += delta;\n                    });\n                }\n                OUTPUT = left + \"\\n\" + right;\n                current_line++;\n                current_pos++;\n                current_col = right.length;\n            }\n            if (current_col > options.max_line_len) {\n                AST_Node.warn(\"Output exceeds {max_line_len} characters\", options);\n            }\n        }\n        if (might_add_newline) {\n            might_add_newline = 0;\n            do_add_mapping();\n        }\n    } : noop;\n\n    var requireSemicolonChars = makePredicate(\"( [ + * / - , .\");\n\n    function print(str) {\n        str = String(str);\n        var ch = str.charAt(0);\n        var prev = last.charAt(last.length - 1);\n        if (might_need_semicolon) {\n            might_need_semicolon = false;\n\n            if (prev == \":\" && ch == \"}\" || (!ch || \";}\".indexOf(ch) < 0) && prev != \";\") {\n                if (options.semicolons || requireSemicolonChars(ch)) {\n                    OUTPUT += \";\";\n                    current_col++;\n                    current_pos++;\n                } else {\n                    ensure_line_len();\n                    OUTPUT += \"\\n\";\n                    current_pos++;\n                    current_line++;\n                    current_col = 0;\n\n                    if (/^\\s+$/.test(str)) {\n                        // reset the semicolon flag, since we didn't print one\n                        // now and might still have to later\n                        might_need_semicolon = true;\n                    }\n                }\n\n                if (!options.beautify)\n                    might_need_space = false;\n            }\n        }\n\n        if (!options.beautify && options.preserve_line && stack[stack.length - 1]) {\n            var target_line = stack[stack.length - 1].start.line;\n            while (current_line < target_line) {\n                ensure_line_len();\n                OUTPUT += \"\\n\";\n                current_pos++;\n                current_line++;\n                current_col = 0;\n                might_need_space = false;\n            }\n        }\n\n        if (might_need_space) {\n            if ((is_identifier_char(prev)\n                    && (is_identifier_char(ch) || ch == \"\\\\\"))\n                || (ch == \"/\" && ch == prev)\n                || ((ch == \"+\" || ch == \"-\") && ch == last))\n            {\n                OUTPUT += \" \";\n                current_col++;\n                current_pos++;\n            }\n            might_need_space = false;\n        }\n\n        if (mapping_token) {\n            mappings.push({\n                token: mapping_token,\n                name: mapping_name,\n                line: current_line,\n                col: current_col\n            });\n            mapping_token = false;\n            if (!might_add_newline) do_add_mapping();\n        }\n\n        OUTPUT += str;\n        current_pos += str.length;\n        var a = str.split(/\\r?\\n/), n = a.length - 1;\n        current_line += n;\n        current_col += a[0].length;\n        if (n > 0) {\n            ensure_line_len();\n            current_col = a[n].length;\n        }\n        last = str;\n    };\n\n    var space = options.beautify ? function() {\n        print(\" \");\n    } : function() {\n        might_need_space = true;\n    };\n\n    var indent = options.beautify ? function(half) {\n        if (options.beautify) {\n            print(make_indent(half ? 0.5 : 0));\n        }\n    } : noop;\n\n    var with_indent = options.beautify ? function(col, cont) {\n        if (col === true) col = next_indent();\n        var save_indentation = indentation;\n        indentation = col;\n        var ret = cont();\n        indentation = save_indentation;\n        return ret;\n    } : function(col, cont) { return cont() };\n\n    var newline = options.beautify ? function() {\n        print(\"\\n\");\n    } : options.max_line_len ? function() {\n        ensure_line_len();\n        might_add_newline = OUTPUT.length;\n    } : noop;\n\n    var semicolon = options.beautify ? function() {\n        print(\";\");\n    } : function() {\n        might_need_semicolon = true;\n    };\n\n    function force_semicolon() {\n        might_need_semicolon = false;\n        print(\";\");\n    };\n\n    function next_indent() {\n        return indentation + options.indent_level;\n    };\n\n    function with_block(cont) {\n        var ret;\n        print(\"{\");\n        newline();\n        with_indent(next_indent(), function(){\n            ret = cont();\n        });\n        indent();\n        print(\"}\");\n        return ret;\n    };\n\n    function with_parens(cont) {\n        print(\"(\");\n        //XXX: still nice to have that for argument lists\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\")\");\n        return ret;\n    };\n\n    function with_square(cont) {\n        print(\"[\");\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\"]\");\n        return ret;\n    };\n\n    function comma() {\n        print(\",\");\n        space();\n    };\n\n    function colon() {\n        print(\":\");\n        space();\n    };\n\n    var add_mapping = mappings ? function(token, name) {\n        mapping_token = token;\n        mapping_name = name;\n    } : noop;\n\n    function get() {\n        if (might_add_newline) {\n            ensure_line_len();\n        }\n        return OUTPUT;\n    };\n\n    var stack = [];\n    return {\n        get             : get,\n        toString        : get,\n        indent          : indent,\n        indentation     : function() { return indentation },\n        current_width   : function() { return current_col - indentation },\n        should_break    : function() { return options.width && this.current_width() >= options.width },\n        newline         : newline,\n        print           : print,\n        space           : space,\n        comma           : comma,\n        colon           : colon,\n        last            : function() { return last },\n        semicolon       : semicolon,\n        force_semicolon : force_semicolon,\n        to_utf8         : to_utf8,\n        print_name      : function(name) { print(make_name(name)) },\n        print_string    : function(str, quote, escape_directive) {\n            var encoded = encode_string(str, quote);\n            if (escape_directive === true && encoded.indexOf(\"\\\\\") === -1) {\n                // Insert semicolons to break directive prologue\n                if (!EXPECT_DIRECTIVE.test(OUTPUT)) {\n                    force_semicolon();\n                }\n                force_semicolon();\n            }\n            print(encoded);\n        },\n        encode_string   : encode_string,\n        next_indent     : next_indent,\n        with_indent     : with_indent,\n        with_block      : with_block,\n        with_parens     : with_parens,\n        with_square     : with_square,\n        add_mapping     : add_mapping,\n        option          : function(opt) { return options[opt] },\n        comment_filter  : comment_filter,\n        line            : function() { return current_line },\n        col             : function() { return current_col },\n        pos             : function() { return current_pos },\n        push_node       : function(node) { stack.push(node) },\n        pop_node        : function() { return stack.pop() },\n        parent          : function(n) {\n            return stack[stack.length - 2 - (n || 0)];\n        }\n    };\n\n};\n\n/* -----[ code generators ]----- */\n\n(function(){\n\n    /* -----[ utils ]----- */\n\n    function DEFPRINT(nodetype, generator) {\n        nodetype.DEFMETHOD(\"_codegen\", generator);\n    };\n\n    var in_directive = false;\n    var active_scope = null;\n    var use_asm = null;\n\n    AST_Node.DEFMETHOD(\"print\", function(stream, force_parens){\n        var self = this, generator = self._codegen;\n        if (self instanceof AST_Scope) {\n            active_scope = self;\n        }\n        else if (!use_asm && self instanceof AST_Directive && self.value == \"use asm\") {\n            use_asm = active_scope;\n        }\n        function doit() {\n            self.add_comments(stream);\n            self.add_source_map(stream);\n            generator(self, stream);\n        }\n        stream.push_node(self);\n        if (force_parens || self.needs_parens(stream)) {\n            stream.with_parens(doit);\n        } else {\n            doit();\n        }\n        stream.pop_node();\n        if (self === use_asm) {\n            use_asm = null;\n        }\n    });\n    AST_Node.DEFMETHOD(\"_print\", AST_Node.prototype.print);\n\n    AST_Node.DEFMETHOD(\"print_to_string\", function(options){\n        var s = OutputStream(options);\n        if (!options) s._readonly = true;\n        this.print(s);\n        return s.get();\n    });\n\n    /* -----[ comments ]----- */\n\n    AST_Node.DEFMETHOD(\"add_comments\", function(output){\n        if (output._readonly) return;\n        var self = this;\n        var start = self.start;\n        if (start && !start._comments_dumped) {\n            start._comments_dumped = true;\n            var comments = start.comments_before || [];\n\n            // XXX: ugly fix for https://github.com/mishoo/UglifyJS2/issues/112\n            //               and https://github.com/mishoo/UglifyJS2/issues/372\n            if (self instanceof AST_Exit && self.value) {\n                self.value.walk(new TreeWalker(function(node){\n                    if (node.start && node.start.comments_before) {\n                        comments = comments.concat(node.start.comments_before);\n                        node.start.comments_before = [];\n                    }\n                    if (node instanceof AST_Function ||\n                        node instanceof AST_Array ||\n                        node instanceof AST_Object)\n                    {\n                        return true; // don't go inside.\n                    }\n                }));\n            }\n\n            if (output.pos() == 0) {\n                if (comments.length > 0 && output.option(\"shebang\") && comments[0].type == \"comment5\") {\n                    output.print(\"#!\" + comments.shift().value + \"\\n\");\n                    output.indent();\n                }\n                var preamble = output.option(\"preamble\");\n                if (preamble) {\n                    output.print(preamble.replace(/\\r\\n?|[\\n\\u2028\\u2029]|\\s*$/g, \"\\n\"));\n                }\n            }\n\n            comments = comments.filter(output.comment_filter, self);\n\n            // Keep single line comments after nlb, after nlb\n            if (!output.option(\"beautify\") && comments.length > 0 &&\n                /comment[134]/.test(comments[0].type) &&\n                output.col() !== 0 && comments[0].nlb)\n            {\n                output.print(\"\\n\");\n            }\n\n            comments.forEach(function(c){\n                if (/comment[134]/.test(c.type)) {\n                    output.print(\"//\" + c.value + \"\\n\");\n                    output.indent();\n                }\n                else if (c.type == \"comment2\") {\n                    output.print(\"/*\" + c.value + \"*/\");\n                    if (start.nlb) {\n                        output.print(\"\\n\");\n                        output.indent();\n                    } else {\n                        output.space();\n                    }\n                }\n            });\n        }\n    });\n\n    /* -----[ PARENTHESES ]----- */\n\n    function PARENS(nodetype, func) {\n        if (Array.isArray(nodetype)) {\n            nodetype.forEach(function(nodetype){\n                PARENS(nodetype, func);\n            });\n        } else {\n            nodetype.DEFMETHOD(\"needs_parens\", func);\n        }\n    };\n\n    PARENS(AST_Node, function(){\n        return false;\n    });\n\n    // a function expression needs parens around it when it's provably\n    // the first token to appear in a statement.\n    PARENS(AST_Function, function(output){\n        if (first_in_statement(output)) {\n            return true;\n        }\n\n        if (output.option('webkit')) {\n            var p = output.parent();\n            if (p instanceof AST_PropAccess && p.expression === this) {\n                return true;\n            }\n        }\n\n        if (output.option('wrap_iife')) {\n            var p = output.parent();\n            return p instanceof AST_Call && p.expression === this;\n        }\n\n        return false;\n    });\n\n    // same goes for an object literal, because otherwise it would be\n    // interpreted as a block of code.\n    PARENS(AST_Object, function(output){\n        return first_in_statement(output);\n    });\n\n    PARENS(AST_Unary, function(output){\n        var p = output.parent();\n        return p instanceof AST_PropAccess && p.expression === this\n            || p instanceof AST_Call && p.expression === this;\n    });\n\n    PARENS(AST_Sequence, function(output){\n        var p = output.parent();\n        return p instanceof AST_Call             // (foo, bar)() or foo(1, (2, 3), 4)\n            || p instanceof AST_Unary            // !(foo, bar, baz)\n            || p instanceof AST_Binary           // 1 + (2, 3) + 4 ==> 8\n            || p instanceof AST_VarDef           // var a = (1, 2), b = a + a; ==> b == 4\n            || p instanceof AST_PropAccess       // (1, {foo:2}).foo or (1, {foo:2})[\"foo\"] ==> 2\n            || p instanceof AST_Array            // [ 1, (2, 3), 4 ] ==> [ 1, 3, 4 ]\n            || p instanceof AST_ObjectProperty   // { foo: (1, 2) }.foo ==> 2\n            || p instanceof AST_Conditional      /* (false, true) ? (a = 10, b = 20) : (c = 30)\n                                                  * ==> 20 (side effect, set a := 10 and b := 20) */\n        ;\n    });\n\n    PARENS(AST_Binary, function(output){\n        var p = output.parent();\n        // (foo && bar)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // typeof (foo && bar)\n        if (p instanceof AST_Unary)\n            return true;\n        // (foo && bar)[\"prop\"], (foo && bar).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n        // this deals with precedence: 3 * (2 + 1)\n        if (p instanceof AST_Binary) {\n            var po = p.operator, pp = PRECEDENCE[po];\n            var so = this.operator, sp = PRECEDENCE[so];\n            if (pp > sp\n                || (pp == sp\n                    && this === p.right)) {\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_PropAccess, function(output){\n        var p = output.parent();\n        if (p instanceof AST_New && p.expression === this) {\n            // i.e. new (foo.bar().baz)\n            //\n            // if there's one call into this subtree, then we need\n            // parens around it too, otherwise the call will be\n            // interpreted as passing the arguments to the upper New\n            // expression.\n            var parens = false;\n            this.walk(new TreeWalker(function(node) {\n                if (parens || node instanceof AST_Scope) return true;\n                if (node instanceof AST_Call) {\n                    parens = true;\n                    return true;\n                }\n            }));\n            return parens;\n        }\n    });\n\n    PARENS(AST_Call, function(output){\n        var p = output.parent(), p1;\n        if (p instanceof AST_New && p.expression === this)\n            return true;\n\n        // workaround for Safari bug.\n        // https://bugs.webkit.org/show_bug.cgi?id=123506\n        return this.expression instanceof AST_Function\n            && p instanceof AST_PropAccess\n            && p.expression === this\n            && (p1 = output.parent(1)) instanceof AST_Assign\n            && p1.left === p;\n    });\n\n    PARENS(AST_New, function(output){\n        var p = output.parent();\n        if (!need_constructor_parens(this, output)\n            && (p instanceof AST_PropAccess // (new Date).getTime(), (new Date)[\"getTime\"]()\n                || p instanceof AST_Call && p.expression === this)) // (new foo)(bar)\n            return true;\n    });\n\n    PARENS(AST_Number, function(output){\n        var p = output.parent();\n        if (p instanceof AST_PropAccess && p.expression === this) {\n            var value = this.getValue();\n            if (value < 0 || /^0/.test(make_num(value))) {\n                return true;\n            }\n        }\n    });\n\n    PARENS([ AST_Assign, AST_Conditional ], function(output){\n        var p = output.parent();\n        // !(a = false) → true\n        if (p instanceof AST_Unary)\n            return true;\n        // 1 + (a = 2) + 3 → 6, side effect setting a = 2\n        if (p instanceof AST_Binary && !(p instanceof AST_Assign))\n            return true;\n        // (a = func)() —or— new (a = Object)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // (a = foo) ? bar : baz\n        if (p instanceof AST_Conditional && p.condition === this)\n            return true;\n        // (a = foo)[\"prop\"] —or— (a = foo).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n    });\n\n    /* -----[ PRINTERS ]----- */\n\n    DEFPRINT(AST_Directive, function(self, output){\n        output.print_string(self.value, self.quote);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Debugger, function(self, output){\n        output.print(\"debugger\");\n        output.semicolon();\n    });\n\n    /* -----[ statements ]----- */\n\n    function display_body(body, is_toplevel, output, allow_directives) {\n        var last = body.length - 1;\n        in_directive = allow_directives;\n        body.forEach(function(stmt, i){\n            if (in_directive === true && !(stmt instanceof AST_Directive ||\n                stmt instanceof AST_EmptyStatement ||\n                (stmt instanceof AST_SimpleStatement && stmt.body instanceof AST_String)\n            )) {\n                in_directive = false;\n            }\n            if (!(stmt instanceof AST_EmptyStatement)) {\n                output.indent();\n                stmt.print(output);\n                if (!(i == last && is_toplevel)) {\n                    output.newline();\n                    if (is_toplevel) output.newline();\n                }\n            }\n            if (in_directive === true &&\n                stmt instanceof AST_SimpleStatement &&\n                stmt.body instanceof AST_String\n            ) {\n                in_directive = false;\n            }\n        });\n        in_directive = false;\n    };\n\n    AST_StatementWithBody.DEFMETHOD(\"_do_print_body\", function(output){\n        force_statement(this.body, output);\n    });\n\n    DEFPRINT(AST_Statement, function(self, output){\n        self.body.print(output);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Toplevel, function(self, output){\n        display_body(self.body, true, output, true);\n        output.print(\"\");\n    });\n    DEFPRINT(AST_LabeledStatement, function(self, output){\n        self.label.print(output);\n        output.colon();\n        self.body.print(output);\n    });\n    DEFPRINT(AST_SimpleStatement, function(self, output){\n        self.body.print(output);\n        output.semicolon();\n    });\n    function print_bracketed(body, output, allow_directives) {\n        if (body.length > 0) output.with_block(function(){\n            display_body(body, false, output, allow_directives);\n        });\n        else output.print(\"{}\");\n    };\n    DEFPRINT(AST_BlockStatement, function(self, output){\n        print_bracketed(self.body, output);\n    });\n    DEFPRINT(AST_EmptyStatement, function(self, output){\n        output.semicolon();\n    });\n    DEFPRINT(AST_Do, function(self, output){\n        output.print(\"do\");\n        output.space();\n        make_block(self.body, output);\n        output.space();\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.semicolon();\n    });\n    DEFPRINT(AST_While, function(self, output){\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_For, function(self, output){\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function(){\n            if (self.init) {\n                if (self.init instanceof AST_Definitions) {\n                    self.init.print(output);\n                } else {\n                    parenthesize_for_noin(self.init, output, true);\n                }\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.condition) {\n                self.condition.print(output);\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.step) {\n                self.step.print(output);\n            }\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_ForIn, function(self, output){\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function(){\n            self.init.print(output);\n            output.space();\n            output.print(\"in\");\n            output.space();\n            self.object.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_With, function(self, output){\n        output.print(\"with\");\n        output.space();\n        output.with_parens(function(){\n            self.expression.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n\n    /* -----[ functions ]----- */\n    AST_Lambda.DEFMETHOD(\"_do_print\", function(output, nokeyword){\n        var self = this;\n        if (!nokeyword) {\n            output.print(\"function\");\n        }\n        if (self.name) {\n            output.space();\n            self.name.print(output);\n        }\n        output.with_parens(function(){\n            self.argnames.forEach(function(arg, i){\n                if (i) output.comma();\n                arg.print(output);\n            });\n        });\n        output.space();\n        print_bracketed(self.body, output, true);\n    });\n    DEFPRINT(AST_Lambda, function(self, output){\n        self._do_print(output);\n    });\n\n    /* -----[ exits ]----- */\n    AST_Exit.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        if (this.value) {\n            output.space();\n            this.value.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Return, function(self, output){\n        self._do_print(output, \"return\");\n    });\n    DEFPRINT(AST_Throw, function(self, output){\n        self._do_print(output, \"throw\");\n    });\n\n    /* -----[ loop control ]----- */\n    AST_LoopControl.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        if (this.label) {\n            output.space();\n            this.label.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Break, function(self, output){\n        self._do_print(output, \"break\");\n    });\n    DEFPRINT(AST_Continue, function(self, output){\n        self._do_print(output, \"continue\");\n    });\n\n    /* -----[ if ]----- */\n    function make_then(self, output) {\n        var b = self.body;\n        if (output.option(\"bracketize\")\n            || output.option(\"ie8\") && b instanceof AST_Do)\n            return make_block(b, output);\n        // The squeezer replaces \"block\"-s that contain only a single\n        // statement with the statement itself; technically, the AST\n        // is correct, but this can create problems when we output an\n        // IF having an ELSE clause where the THEN clause ends in an\n        // IF *without* an ELSE block (then the outer ELSE would refer\n        // to the inner IF).  This function checks for this case and\n        // adds the block brackets if needed.\n        if (!b) return output.force_semicolon();\n        while (true) {\n            if (b instanceof AST_If) {\n                if (!b.alternative) {\n                    make_block(self.body, output);\n                    return;\n                }\n                b = b.alternative;\n            }\n            else if (b instanceof AST_StatementWithBody) {\n                b = b.body;\n            }\n            else break;\n        }\n        force_statement(self.body, output);\n    };\n    DEFPRINT(AST_If, function(self, output){\n        output.print(\"if\");\n        output.space();\n        output.with_parens(function(){\n            self.condition.print(output);\n        });\n        output.space();\n        if (self.alternative) {\n            make_then(self, output);\n            output.space();\n            output.print(\"else\");\n            output.space();\n            if (self.alternative instanceof AST_If)\n                self.alternative.print(output);\n            else\n                force_statement(self.alternative, output);\n        } else {\n            self._do_print_body(output);\n        }\n    });\n\n    /* -----[ switch ]----- */\n    DEFPRINT(AST_Switch, function(self, output){\n        output.print(\"switch\");\n        output.space();\n        output.with_parens(function(){\n            self.expression.print(output);\n        });\n        output.space();\n        var last = self.body.length - 1;\n        if (last < 0) output.print(\"{}\");\n        else output.with_block(function(){\n            self.body.forEach(function(branch, i){\n                output.indent(true);\n                branch.print(output);\n                if (i < last && branch.body.length > 0)\n                    output.newline();\n            });\n        });\n    });\n    AST_SwitchBranch.DEFMETHOD(\"_do_print_body\", function(output){\n        output.newline();\n        this.body.forEach(function(stmt){\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    });\n    DEFPRINT(AST_Default, function(self, output){\n        output.print(\"default:\");\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_Case, function(self, output){\n        output.print(\"case\");\n        output.space();\n        self.expression.print(output);\n        output.print(\":\");\n        self._do_print_body(output);\n    });\n\n    /* -----[ exceptions ]----- */\n    DEFPRINT(AST_Try, function(self, output){\n        output.print(\"try\");\n        output.space();\n        print_bracketed(self.body, output);\n        if (self.bcatch) {\n            output.space();\n            self.bcatch.print(output);\n        }\n        if (self.bfinally) {\n            output.space();\n            self.bfinally.print(output);\n        }\n    });\n    DEFPRINT(AST_Catch, function(self, output){\n        output.print(\"catch\");\n        output.space();\n        output.with_parens(function(){\n            self.argname.print(output);\n        });\n        output.space();\n        print_bracketed(self.body, output);\n    });\n    DEFPRINT(AST_Finally, function(self, output){\n        output.print(\"finally\");\n        output.space();\n        print_bracketed(self.body, output);\n    });\n\n    /* -----[ var/const ]----- */\n    AST_Definitions.DEFMETHOD(\"_do_print\", function(output, kind){\n        output.print(kind);\n        output.space();\n        this.definitions.forEach(function(def, i){\n            if (i) output.comma();\n            def.print(output);\n        });\n        var p = output.parent();\n        var in_for = p instanceof AST_For || p instanceof AST_ForIn;\n        var avoid_semicolon = in_for && p.init === this;\n        if (!avoid_semicolon)\n            output.semicolon();\n    });\n    DEFPRINT(AST_Var, function(self, output){\n        self._do_print(output, \"var\");\n    });\n\n    function parenthesize_for_noin(node, output, noin) {\n        var parens = false;\n        // need to take some precautions here:\n        //    https://github.com/mishoo/UglifyJS2/issues/60\n        if (noin) node.walk(new TreeWalker(function(node) {\n            if (parens || node instanceof AST_Scope) return true;\n            if (node instanceof AST_Binary && node.operator == \"in\") {\n                parens = true;\n                return true;\n            }\n        }));\n        node.print(output, parens);\n    };\n\n    DEFPRINT(AST_VarDef, function(self, output){\n        self.name.print(output);\n        if (self.value) {\n            output.space();\n            output.print(\"=\");\n            output.space();\n            var p = output.parent(1);\n            var noin = p instanceof AST_For || p instanceof AST_ForIn;\n            parenthesize_for_noin(self.value, output, noin);\n        }\n    });\n\n    /* -----[ other expressions ]----- */\n    DEFPRINT(AST_Call, function(self, output){\n        self.expression.print(output);\n        if (self instanceof AST_New && !need_constructor_parens(self, output))\n            return;\n        if (self.expression instanceof AST_Call || self.expression instanceof AST_Lambda) {\n            output.add_mapping(self.start);\n        }\n        output.with_parens(function(){\n            self.args.forEach(function(expr, i){\n                if (i) output.comma();\n                expr.print(output);\n            });\n        });\n    });\n    DEFPRINT(AST_New, function(self, output){\n        output.print(\"new\");\n        output.space();\n        AST_Call.prototype._codegen(self, output);\n    });\n\n    AST_Sequence.DEFMETHOD(\"_do_print\", function(output){\n        this.expressions.forEach(function(node, index) {\n            if (index > 0) {\n                output.comma();\n                if (output.should_break()) {\n                    output.newline();\n                    output.indent();\n                }\n            }\n            node.print(output);\n        });\n    });\n    DEFPRINT(AST_Sequence, function(self, output){\n        self._do_print(output);\n        // var p = output.parent();\n        // if (p instanceof AST_Statement) {\n        //     output.with_indent(output.next_indent(), function(){\n        //         self._do_print(output);\n        //     });\n        // } else {\n        //     self._do_print(output);\n        // }\n    });\n    DEFPRINT(AST_Dot, function(self, output){\n        var expr = self.expression;\n        expr.print(output);\n        var prop = self.property;\n        if (output.option(\"ie8\") && RESERVED_WORDS(prop)) {\n            output.print(\"[\");\n            output.add_mapping(self.end);\n            output.print_string(prop);\n            output.print(\"]\");\n        } else {\n            if (expr instanceof AST_Number && expr.getValue() >= 0) {\n                if (!/[xa-f.)]/i.test(output.last())) {\n                    output.print(\".\");\n                }\n            }\n            output.print(\".\");\n            // the name after dot would be mapped about here.\n            output.add_mapping(self.end);\n            output.print_name(prop);\n        }\n    });\n    DEFPRINT(AST_Sub, function(self, output){\n        self.expression.print(output);\n        output.print(\"[\");\n        self.property.print(output);\n        output.print(\"]\");\n    });\n    DEFPRINT(AST_UnaryPrefix, function(self, output){\n        var op = self.operator;\n        output.print(op);\n        if (/^[a-z]/i.test(op)\n            || (/[+-]$/.test(op)\n                && self.expression instanceof AST_UnaryPrefix\n                && /^[+-]/.test(self.expression.operator))) {\n            output.space();\n        }\n        self.expression.print(output);\n    });\n    DEFPRINT(AST_UnaryPostfix, function(self, output){\n        self.expression.print(output);\n        output.print(self.operator);\n    });\n    DEFPRINT(AST_Binary, function(self, output){\n        var op = self.operator;\n        self.left.print(output);\n        if (op[0] == \">\" /* \">>\" \">>>\" \">\" \">=\" */\n            && self.left instanceof AST_UnaryPostfix\n            && self.left.operator == \"--\") {\n            // space is mandatory to avoid outputting -->\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        output.print(op);\n        if ((op == \"<\" || op == \"<<\")\n            && self.right instanceof AST_UnaryPrefix\n            && self.right.operator == \"!\"\n            && self.right.expression instanceof AST_UnaryPrefix\n            && self.right.expression.operator == \"--\") {\n            // space is mandatory to avoid outputting <!--\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        self.right.print(output);\n    });\n    DEFPRINT(AST_Conditional, function(self, output){\n        self.condition.print(output);\n        output.space();\n        output.print(\"?\");\n        output.space();\n        self.consequent.print(output);\n        output.space();\n        output.colon();\n        self.alternative.print(output);\n    });\n\n    /* -----[ literals ]----- */\n    DEFPRINT(AST_Array, function(self, output){\n        output.with_square(function(){\n            var a = self.elements, len = a.length;\n            if (len > 0) output.space();\n            a.forEach(function(exp, i){\n                if (i) output.comma();\n                exp.print(output);\n                // If the final element is a hole, we need to make sure it\n                // doesn't look like a trailing comma, by inserting an actual\n                // trailing comma.\n                if (i === len - 1 && exp instanceof AST_Hole)\n                  output.comma();\n            });\n            if (len > 0) output.space();\n        });\n    });\n    DEFPRINT(AST_Object, function(self, output){\n        if (self.properties.length > 0) output.with_block(function(){\n            self.properties.forEach(function(prop, i){\n                if (i) {\n                    output.print(\",\");\n                    output.newline();\n                }\n                output.indent();\n                prop.print(output);\n            });\n            output.newline();\n        });\n        else output.print(\"{}\");\n    });\n\n    function print_property_name(key, quote, output) {\n        if (output.option(\"quote_keys\")) {\n            output.print_string(key + \"\");\n        } else if ((typeof key == \"number\"\n                    || !output.option(\"beautify\")\n                    && +key + \"\" == key)\n                   && parseFloat(key) >= 0) {\n            output.print(make_num(key));\n        } else if (RESERVED_WORDS(key) ? !output.option(\"ie8\") : is_identifier_string(key)) {\n            if (quote && output.option(\"keep_quoted_props\")) {\n                output.print_string(key, quote);\n            } else {\n                output.print_name(key);\n            }\n        } else {\n            output.print_string(key, quote);\n        }\n    }\n\n    DEFPRINT(AST_ObjectKeyVal, function(self, output){\n        print_property_name(self.key, self.quote, output);\n        output.colon();\n        self.value.print(output);\n    });\n    AST_ObjectProperty.DEFMETHOD(\"_print_getter_setter\", function(type, output) {\n        output.print(type);\n        output.space();\n        print_property_name(this.key.name, this.quote, output);\n        this.value._do_print(output, true);\n    });\n    DEFPRINT(AST_ObjectSetter, function(self, output){\n        self._print_getter_setter(\"set\", output);\n    });\n    DEFPRINT(AST_ObjectGetter, function(self, output){\n        self._print_getter_setter(\"get\", output);\n    });\n    DEFPRINT(AST_Symbol, function(self, output){\n        var def = self.definition();\n        output.print_name(def ? def.mangled_name || def.name : self.name);\n    });\n    DEFPRINT(AST_Hole, noop);\n    DEFPRINT(AST_This, function(self, output){\n        output.print(\"this\");\n    });\n    DEFPRINT(AST_Constant, function(self, output){\n        output.print(self.getValue());\n    });\n    DEFPRINT(AST_String, function(self, output){\n        output.print_string(self.getValue(), self.quote, in_directive);\n    });\n    DEFPRINT(AST_Number, function(self, output){\n        if (use_asm && self.start && self.start.raw != null) {\n            output.print(self.start.raw);\n        } else {\n            output.print(make_num(self.getValue()));\n        }\n    });\n\n    DEFPRINT(AST_RegExp, function(self, output){\n        var regexp = self.getValue();\n        var str = regexp.toString();\n        if (regexp.raw_source) {\n            str = \"/\" + regexp.raw_source + str.slice(str.lastIndexOf(\"/\"));\n        }\n        str = output.to_utf8(str);\n        output.print(str);\n        var p = output.parent();\n        if (p instanceof AST_Binary && /^in/.test(p.operator) && p.left === self)\n            output.print(\" \");\n    });\n\n    function force_statement(stat, output) {\n        if (output.option(\"bracketize\")) {\n            make_block(stat, output);\n        } else {\n            if (!stat || stat instanceof AST_EmptyStatement)\n                output.force_semicolon();\n            else\n                stat.print(output);\n        }\n    };\n\n    // self should be AST_New.  decide if we want to show parens or not.\n    function need_constructor_parens(self, output) {\n        // Always print parentheses with arguments\n        if (self.args.length > 0) return true;\n\n        return output.option(\"beautify\");\n    };\n\n    function best_of(a) {\n        var best = a[0], len = best.length;\n        for (var i = 1; i < a.length; ++i) {\n            if (a[i].length < len) {\n                best = a[i];\n                len = best.length;\n            }\n        }\n        return best;\n    };\n\n    function make_num(num) {\n        var str = num.toString(10), a = [ str.replace(/^0\\./, \".\").replace('e+', 'e') ], m;\n        if (Math.floor(num) === num) {\n            if (num >= 0) {\n                a.push(\"0x\" + num.toString(16).toLowerCase(), // probably pointless\n                       \"0\" + num.toString(8)); // same.\n            } else {\n                a.push(\"-0x\" + (-num).toString(16).toLowerCase(), // probably pointless\n                       \"-0\" + (-num).toString(8)); // same.\n            }\n            if ((m = /^(.*?)(0+)$/.exec(num))) {\n                a.push(m[1] + \"e\" + m[2].length);\n            }\n        } else if ((m = /^0?\\.(0+)(.*)$/.exec(num))) {\n            a.push(m[2] + \"e-\" + (m[1].length + m[2].length),\n                   str.substr(str.indexOf(\".\")));\n        }\n        return best_of(a);\n    };\n\n    function make_block(stmt, output) {\n        if (!stmt || stmt instanceof AST_EmptyStatement)\n            output.print(\"{}\");\n        else if (stmt instanceof AST_BlockStatement)\n            stmt.print(output);\n        else output.with_block(function(){\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    };\n\n    /* -----[ source map generators ]----- */\n\n    function DEFMAP(nodetype, generator) {\n        nodetype.DEFMETHOD(\"add_source_map\", function(stream){\n            generator(this, stream);\n        });\n    };\n\n    // We could easily add info for ALL nodes, but it seems to me that\n    // would be quite wasteful, hence this noop in the base class.\n    DEFMAP(AST_Node, noop);\n\n    function basic_sourcemap_gen(self, output) {\n        output.add_mapping(self.start);\n    };\n\n    // XXX: I'm not exactly sure if we need it for all of these nodes,\n    // or if we should add even more.\n\n    DEFMAP(AST_Directive, basic_sourcemap_gen);\n    DEFMAP(AST_Debugger, basic_sourcemap_gen);\n    DEFMAP(AST_Symbol, basic_sourcemap_gen);\n    DEFMAP(AST_Jump, basic_sourcemap_gen);\n    DEFMAP(AST_StatementWithBody, basic_sourcemap_gen);\n    DEFMAP(AST_LabeledStatement, noop); // since the label symbol will mark it\n    DEFMAP(AST_Lambda, basic_sourcemap_gen);\n    DEFMAP(AST_Switch, basic_sourcemap_gen);\n    DEFMAP(AST_SwitchBranch, basic_sourcemap_gen);\n    DEFMAP(AST_BlockStatement, basic_sourcemap_gen);\n    DEFMAP(AST_Toplevel, noop);\n    DEFMAP(AST_New, basic_sourcemap_gen);\n    DEFMAP(AST_Try, basic_sourcemap_gen);\n    DEFMAP(AST_Catch, basic_sourcemap_gen);\n    DEFMAP(AST_Finally, basic_sourcemap_gen);\n    DEFMAP(AST_Definitions, basic_sourcemap_gen);\n    DEFMAP(AST_Constant, basic_sourcemap_gen);\n    DEFMAP(AST_ObjectSetter, function(self, output){\n        output.add_mapping(self.start, self.key.name);\n    });\n    DEFMAP(AST_ObjectGetter, function(self, output){\n        output.add_mapping(self.start, self.key.name);\n    });\n    DEFMAP(AST_ObjectProperty, function(self, output){\n        output.add_mapping(self.start, self.key);\n    });\n\n})();\n"]}