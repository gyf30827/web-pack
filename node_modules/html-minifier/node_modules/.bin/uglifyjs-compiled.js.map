{"version":3,"sources":["uglifyjs"],"names":[],"mappings":"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","file":"uglifyjs-compiled.js","sourcesContent":["\n// -*- js -*-\n\n\"use strict\";\n\n// workaround for tty output truncation upon process.exit()\n[process.stdout, process.stderr].forEach(function(stream){\n    if (stream._handle && stream._handle.setBlocking)\n        stream._handle.setBlocking(true);\n});\n\nvar fs = require(\"fs\");\nvar info = require(\"../package.json\");\nvar path = require(\"path\");\nvar program = require(\"commander\");\nvar UglifyJS = require(\"../tools/node\");\n\nvar skip_keys = [ \"cname\", \"enclosed\", \"inlined\", \"parent_scope\", \"scope\", \"thedef\", \"uses_eval\", \"uses_with\" ];\nvar files = {};\nvar options = {\n    compress: false,\n    mangle: false\n};\nprogram.version(info.name + \" \" + info.version);\nprogram.parseArgv = program.parse;\nprogram.parse = undefined;\nif (process.argv.indexOf(\"ast\") >= 0) program.helpInformation = UglifyJS.describe_ast;\nelse if (process.argv.indexOf(\"options\") >= 0) program.helpInformation = function() {\n    var text = [];\n    var options = UglifyJS.default_options();\n    for (var option in options) {\n        text.push(\"--\" + (option == \"output\" ? \"beautify\" : option == \"sourceMap\" ? \"source-map\" : option) + \" options:\");\n        text.push(format_object(options[option]));\n        text.push(\"\");\n    }\n    return text.join(\"\\n\");\n};\nprogram.option(\"-p, --parse <options>\", \"Specify parser options.\", parse_js());\nprogram.option(\"-c, --compress [options]\", \"Enable compressor/specify compressor options.\", parse_js());\nprogram.option(\"-m, --mangle [options]\", \"Mangle names/specify mangler options.\", parse_js());\nprogram.option(\"--mangle-props [options]\", \"Mangle properties/specify mangler options.\", parse_js());\nprogram.option(\"-b, --beautify [options]\", \"Beautify output/specify output options.\", parse_js());\nprogram.option(\"-o, --output <file>\", \"Output file (default STDOUT).\");\nprogram.option(\"--comments [filter]\", \"Preserve copyright comments in the output.\");\nprogram.option(\"--config-file <file>\", \"Read minify() options from JSON file.\");\nprogram.option(\"-d, --define <expr>[=value]\", \"Global definitions.\", parse_js(\"define\"));\nprogram.option(\"--ie8\", \"Support non-standard Internet Explorer 8.\");\nprogram.option(\"--keep-fnames\", \"Do not mangle/drop function names. Useful for code relying on Function.prototype.name.\");\nprogram.option(\"--name-cache <file>\", \"File to hold mangled name mappings.\");\nprogram.option(\"--no-rename\", \"Disable symbol expansion.\");\nprogram.option(\"--self\", \"Build UglifyJS as a library (implies --wrap UglifyJS)\");\nprogram.option(\"--source-map [options]\", \"Enable source map/specify source map options.\", parse_source_map());\nprogram.option(\"--timings\", \"Display operations run time on STDERR.\")\nprogram.option(\"--toplevel\", \"Compress and/or mangle variables in toplevel scope.\");\nprogram.option(\"--verbose\", \"Print diagnostic messages.\");\nprogram.option(\"--warn\", \"Print warning messages.\");\nprogram.option(\"--wrap <name>\", \"Embed everything as a function with “exports” corresponding to “name” globally.\");\nprogram.arguments(\"[files...]\").parseArgv(process.argv);\nif (program.configFile) {\n    options = JSON.parse(read_file(program.configFile));\n}\nif (!program.output && program.sourceMap && program.sourceMap.url != \"inline\") {\n    fatal(\"ERROR: cannot write source map to STDOUT\");\n}\n[\n    \"compress\",\n    \"ie8\",\n    \"mangle\",\n    \"rename\",\n    \"sourceMap\",\n    \"toplevel\",\n    \"wrap\"\n].forEach(function(name) {\n    if (name in program) {\n        if (name == \"rename\" && program[name]) return;\n        options[name] = program[name];\n    }\n});\nif (program.beautify) {\n    options.output = typeof program.beautify == \"object\" ? program.beautify : {};\n    if (!(\"beautify\" in options.output)) {\n        options.output.beautify = true;\n    }\n}\nif (program.comments) {\n    if (typeof options.output != \"object\") options.output = {};\n    options.output.comments = typeof program.comments == \"string\" ? program.comments : \"some\";\n}\nif (program.define) {\n    if (typeof options.compress != \"object\") options.compress = {};\n    if (typeof options.compress.global_defs != \"object\") options.compress.global_defs = {};\n    for (var expr in program.define) {\n        options.compress.global_defs[expr] = program.define[expr];\n    }\n}\nif (program.keepFnames) {\n    options.keep_fnames = true;\n}\nif (program.mangleProps) {\n    if (program.mangleProps.domprops) {\n        delete program.mangleProps.domprops;\n    } else {\n        if (typeof program.mangleProps != \"object\") program.mangleProps = {};\n        if (!Array.isArray(program.mangleProps.reserved)) program.mangleProps.reserved = [];\n        require(\"../tools/domprops\").forEach(function(name) {\n            UglifyJS._push_uniq(program.mangleProps.reserved, name);\n        });\n    }\n    if (typeof options.mangle != \"object\") options.mangle = {};\n    options.mangle.properties = program.mangleProps;\n}\nif (program.nameCache) {\n    options.nameCache = JSON.parse(read_file(program.nameCache, \"{}\"));\n}\nif (program.output == \"ast\") {\n    options.output = {\n        ast: true,\n        code: false\n    };\n}\nif (program.parse) {\n    if (!program.parse.acorn && !program.parse.spidermonkey) {\n        options.parse = program.parse;\n    } else if (program.sourceMap && program.sourceMap.content == \"inline\") {\n        fatal(\"ERROR: inline source map only works with built-in parser\");\n    }\n}\nvar convert_path = function(name) {\n    return name;\n};\nif (typeof program.sourceMap == \"object\" && \"base\" in program.sourceMap) {\n    convert_path = function() {\n        var base = program.sourceMap.base;\n        delete options.sourceMap.base;\n        return function(name) {\n            return path.relative(base, name);\n        };\n    }();\n}\nif (program.verbose) {\n    options.warnings = \"verbose\";\n} else if (program.warn) {\n    options.warnings = true;\n}\nif (program.self) {\n    if (program.args.length) {\n        print_error(\"WARN: Ignoring input files since --self was passed\");\n    }\n    if (!options.wrap) options.wrap = \"UglifyJS\";\n    simple_glob(UglifyJS.FILES).forEach(function(name) {\n        files[convert_path(name)] = read_file(name);\n    });\n    run();\n} else if (program.args.length) {\n    simple_glob(program.args).forEach(function(name) {\n        files[convert_path(name)] = read_file(name);\n    });\n    run();\n} else {\n    var chunks = [];\n    process.stdin.setEncoding(\"utf8\");\n    process.stdin.on(\"data\", function(chunk) {\n        chunks.push(chunk);\n    }).on(\"end\", function() {\n        files = [ chunks.join(\"\") ];\n        run();\n    });\n    process.stdin.resume();\n}\n\nfunction convert_ast(fn) {\n    return UglifyJS.AST_Node.from_mozilla_ast(Object.keys(files).reduce(fn, null));\n}\n\nfunction run() {\n    UglifyJS.AST_Node.warn_function = function(msg) {\n        print_error(\"WARN: \" + msg);\n    };\n    if (program.timings) options.timings = true;\n    try {\n        if (program.parse) {\n            if (program.parse.acorn) {\n                files = convert_ast(function(toplevel, name) {\n                    return require(\"acorn\").parse(files[name], {\n                        locations: true,\n                        program: toplevel,\n                        sourceFile: name\n                    });\n                });\n            } else if (program.parse.spidermonkey) {\n                files = convert_ast(function(toplevel, name) {\n                    var obj = JSON.parse(files[name]);\n                    if (!toplevel) return obj;\n                    toplevel.body = toplevel.body.concat(obj.body);\n                    return toplevel;\n                });\n            }\n        }\n    } catch (ex) {\n        fatal(ex);\n    }\n    var result = UglifyJS.minify(files, options);\n    if (result.error) {\n        var ex = result.error;\n        if (ex.name == \"SyntaxError\") {\n            print_error(\"Parse error at \" + ex.filename + \":\" + ex.line + \",\" + ex.col);\n            var col = ex.col;\n            var lines = files[ex.filename].split(/\\r?\\n/);\n            var line = lines[ex.line - 1];\n            if (!line && !col) {\n                line = lines[ex.line - 2];\n                col = line.length;\n            }\n            if (line) {\n                var limit = 70;\n                if (col > limit) {\n                    line = line.slice(col - limit);\n                    col = limit;\n                }\n                print_error(line.slice(0, 80));\n                print_error(line.slice(0, col).replace(/\\S/g, \" \") + \"^\");\n            }\n        }\n        if (ex.defs) {\n            print_error(\"Supported options:\");\n            print_error(format_object(ex.defs));\n        }\n        fatal(ex);\n    } else if (program.output == \"ast\") {\n        print(JSON.stringify(result.ast, function(key, value) {\n            if (skip_key(key)) return;\n            if (value instanceof UglifyJS.AST_Token) return;\n            if (value instanceof UglifyJS.Dictionary) return;\n            if (value instanceof UglifyJS.AST_Node) {\n                var result = {\n                    _class: \"AST_\" + value.TYPE\n                };\n                value.CTOR.PROPS.forEach(function(prop) {\n                    result[prop] = value[prop];\n                });\n                return result;\n            }\n            return value;\n        }, 2));\n    } else if (program.output == \"spidermonkey\") {\n        print(JSON.stringify(UglifyJS.minify(result.code, {\n            compress: false,\n            mangle: false,\n            output: {\n                ast: true,\n                code: false\n            }\n        }).ast.to_mozilla_ast(), null, 2));\n    } else if (program.output) {\n        fs.writeFileSync(program.output, result.code);\n        if (result.map) {\n            fs.writeFileSync(program.output + \".map\", result.map);\n        }\n    } else {\n        print(result.code);\n    }\n    if (program.nameCache) {\n        fs.writeFileSync(program.nameCache, JSON.stringify(options.nameCache));\n    }\n    if (result.timings) for (var phase in result.timings) {\n        print_error(\"- \" + phase + \": \" + result.timings[phase].toFixed(3) + \"s\");\n    }\n}\n\nfunction fatal(message) {\n    if (message instanceof Error) message = message.stack.replace(/^\\S*?Error:/, \"ERROR:\")\n    print_error(message);\n    process.exit(1);\n}\n\n// A file glob function that only supports \"*\" and \"?\" wildcards in the basename.\n// Example: \"foo/bar/*baz??.*.js\"\n// Argument `glob` may be a string or an array of strings.\n// Returns an array of strings. Garbage in, garbage out.\nfunction simple_glob(glob) {\n    if (Array.isArray(glob)) {\n        return [].concat.apply([], glob.map(simple_glob));\n    }\n    if (glob.match(/\\*|\\?/)) {\n        var dir = path.dirname(glob);\n        try {\n            var entries = fs.readdirSync(dir);\n        } catch (ex) {}\n        if (entries) {\n            var pattern = \"^\" + path.basename(glob)\n                .replace(/[.+^$[\\]\\\\(){}]/g, \"\\\\$&\")\n                .replace(/\\*/g, \"[^/\\\\\\\\]*\")\n                .replace(/\\?/g, \"[^/\\\\\\\\]\") + \"$\";\n            var mod = process.platform === \"win32\" ? \"i\" : \"\";\n            var rx = new RegExp(pattern, mod);\n            var results = entries.filter(function(name) {\n                return rx.test(name);\n            }).map(function(name) {\n                return path.join(dir, name);\n            });\n            if (results.length) return results;\n        }\n    }\n    return [ glob ];\n}\n\nfunction read_file(path, default_value) {\n    try {\n        return fs.readFileSync(path, \"utf8\");\n    } catch (ex) {\n        if (ex.code == \"ENOENT\" && default_value != null) return default_value;\n        fatal(ex);\n    }\n}\n\nfunction parse_js(flag) {\n    return function(value, options) {\n        options = options || {};\n        try {\n            UglifyJS.minify(value, {\n                parse: {\n                    expression: true\n                },\n                compress: false,\n                mangle: false,\n                output: {\n                    ast: true,\n                    code: false\n                }\n            }).ast.walk(new UglifyJS.TreeWalker(function(node) {\n                if (node instanceof UglifyJS.AST_Assign) {\n                    var name = node.left.print_to_string();\n                    var value = node.right;\n                    if (flag) {\n                        options[name] = value;\n                    } else if (value instanceof UglifyJS.AST_Array) {\n                        options[name] = value.elements.map(to_string);\n                    } else {\n                        options[name] = to_string(value);\n                    }\n                    return true;\n                }\n                if (node instanceof UglifyJS.AST_Symbol || node instanceof UglifyJS.AST_PropAccess) {\n                    var name = node.print_to_string();\n                    options[name] = true;\n                    return true;\n                }\n                if (!(node instanceof UglifyJS.AST_Sequence)) throw node;\n\n                function to_string(value) {\n                    return value instanceof UglifyJS.AST_Constant ? value.getValue() : value.print_to_string({\n                        quote_keys: true\n                    });\n                }\n            }));\n        } catch(ex) {\n            if (flag) {\n                fatal(\"Error parsing arguments for '\" + flag + \"': \" + value);\n            } else {\n                options[value] = null;\n            }\n        }\n        return options;\n    }\n}\n\nfunction parse_source_map() {\n    var parse = parse_js();\n    return function(value, options) {\n        var hasContent = options && \"content\" in options;\n        var settings = parse(value, options);\n        if (!hasContent && settings.content && settings.content != \"inline\") {\n            print_error(\"INFO: Using input source map: \" + settings.content);\n            settings.content = read_file(settings.content, settings.content);\n        }\n        return settings;\n    }\n}\n\nfunction skip_key(key) {\n    return skip_keys.indexOf(key) >= 0;\n}\n\nfunction format_object(obj) {\n    var lines = [];\n    var padding = \"\";\n    Object.keys(obj).map(function(name) {\n        if (padding.length < name.length) padding = Array(name.length + 1).join(\" \");\n        return [ name, JSON.stringify(obj[name]) ];\n    }).forEach(function(tokens) {\n        lines.push(\"  \" + tokens[0] + padding.slice(tokens[0].length - 2) + tokens[1]);\n    });\n    return lines.join(\"\\n\");\n}\n\nfunction print_error(msg) {\n    process.stderr.write(msg);\n    process.stderr.write(\"\\n\");\n}\n\nfunction print(txt) {\n    process.stdout.write(txt);\n    process.stdout.write(\"\\n\");\n}\n"]}