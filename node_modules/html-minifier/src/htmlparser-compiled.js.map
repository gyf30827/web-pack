{"version":3,"sources":["htmlparser.js"],"names":[],"mappings":"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","file":"htmlparser-compiled.js","sourcesContent":["/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n/*\n * // Use like so:\n * HTMLParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n * // or to get an XML string:\n * HTMLtoXML(htmlString);\n *\n * // or to get an XML DOM Document\n * HTMLtoDOM(htmlString);\n *\n * // or to inject into an existing document/DOM node\n * HTMLtoDOM(htmlString, document);\n * HTMLtoDOM(htmlString, document.body);\n *\n */\n\n/* global ActiveXObject, DOMDocument */\n\n'use strict';\n\nvar createMapFromString = require('./utils').createMapFromString;\n\nfunction makeMap(values) {\n  return createMapFromString(values, true);\n}\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/,\n    singleAttrAssigns = [/=/],\n    singleAttrValues = [\n      // attr value double quotes\n      /\"([^\"]*)\"+/.source,\n      // attr value, single quotes\n      /'([^']*)'+/.source,\n      // attr value, no quotes\n      /([^ \\t\\n\\f\\r\"'`=<>]+)/.source\n    ],\n    // https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n    qnameCapture = (function() {\n      var ncname = require('ncname').source.slice(1, -1);\n      return '((?:' + ncname + '\\\\:)?' + ncname + ')';\n    })(),\n    startTagOpen = new RegExp('^<' + qnameCapture),\n    startTagClose = /^\\s*(\\/?)>/,\n    endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>'),\n    doctype = /^<!DOCTYPE [^>]+>/i;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function(m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Empty Elements\nvar empty = makeMap('area,base,basefont,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr');\n\n// Inline Elements\nvar inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,noscript,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,svg,textarea,tt,u,var');\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar closeSelf = makeMap('colgroup,dd,dt,li,option,p,td,tfoot,th,thead,tr,source');\n\n// Attributes that have their values filled in disabled='disabled'\nvar fillAttrs = makeMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected');\n\n// Special Elements (can contain anything)\nvar special = makeMap('script,style');\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar nonPhrasing = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track');\n\nvar reCache = {};\n\nfunction attrForHandler(handler) {\n  var pattern = singleAttrIdentifier.source +\n                '(?:\\\\s*(' + joinSingleAttrAssigns(handler) + ')' +\n                '[ \\\\t\\\\n\\\\f\\\\r]*(?:' + singleAttrValues.join('|') + '))?';\n  if (handler.customAttrSurround) {\n    var attrClauses = [];\n    for (var i = handler.customAttrSurround.length - 1; i >= 0; i--) {\n      attrClauses[i] = '(?:' +\n                       '(' + handler.customAttrSurround[i][0].source + ')\\\\s*' +\n                       pattern +\n                       '\\\\s*(' + handler.customAttrSurround[i][1].source + ')' +\n                       ')';\n    }\n    attrClauses.push('(?:' + pattern + ')');\n    pattern = '(?:' + attrClauses.join('|') + ')';\n  }\n  return new RegExp('^\\\\s*' + pattern);\n}\n\nfunction joinSingleAttrAssigns(handler) {\n  return singleAttrAssigns.concat(\n    handler.customAttrAssign || []\n  ).map(function(assign) {\n    return '(?:' + assign.source + ')';\n  }).join('|');\n}\n\nfunction HTMLParser(html, handler) {\n  var stack = [], lastTag;\n  var attribute = attrForHandler(handler);\n  var last, prevTag, nextTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a script or style element\n    if (!lastTag || !special(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (/^<!--/.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (handler.comment) {\n              handler.comment(html.substring(4, commentEnd));\n            }\n            html = html.substring(commentEnd + 3);\n            prevTag = '';\n            continue;\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (/^<!\\[/.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            if (handler.comment) {\n              handler.comment(html.substring(2, conditionalEnd + 1), true /* non-standard */);\n            }\n            html = html.substring(conditionalEnd + 2);\n            prevTag = '';\n            continue;\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          if (handler.doctype) {\n            handler.doctype(doctypeMatch[0]);\n          }\n          html = html.substring(doctypeMatch[0].length);\n          prevTag = '';\n          continue;\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          html = html.substring(endTagMatch[0].length);\n          endTagMatch[0].replace(endTag, parseEndTag);\n          prevTag = '/' + endTagMatch[1].toLowerCase();\n          continue;\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag(html);\n        if (startTagMatch) {\n          html = startTagMatch.rest;\n          handleStartTag(startTagMatch);\n          prevTag = startTagMatch.tagName.toLowerCase();\n          continue;\n        }\n      }\n\n      var text;\n      if (textEnd >= 0) {\n        text = html.substring(0, textEnd);\n        html = html.substring(textEnd);\n      }\n      else {\n        text = html;\n        html = '';\n      }\n\n      // next tag\n      var nextTagMatch = parseStartTag(html);\n      if (nextTagMatch) {\n        nextTag = nextTagMatch.tagName;\n      }\n      else {\n        nextTagMatch = html.match(endTag);\n        if (nextTagMatch) {\n          nextTag = '/' + nextTagMatch[1];\n        }\n        else {\n          nextTag = '';\n        }\n      }\n\n      if (handler.chars) {\n        handler.chars(text, prevTag, nextTag);\n      }\n      prevTag = '';\n\n    }\n    else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)</' + stackedTag + '[^>]*>', 'i'));\n\n      html = html.replace(reStackedTag, function(all, text) {\n        if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n\n        if (handler.chars) {\n          handler.chars(text);\n        }\n\n        return '';\n      });\n\n      parseEndTag('</' + stackedTag + '>', stackedTag);\n    }\n\n    if (html === last) {\n      throw new Error('Parse Error: ' + html);\n    }\n  }\n\n  if (!handler.partialMarkup) {\n    // Clean up any remaining tags\n    parseEndTag();\n  }\n\n  function parseStartTag(input) {\n    var start = input.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: []\n      };\n      input = input.slice(start[0].length);\n      var end, attr;\n      while (!(end = input.match(startTagClose)) && (attr = input.match(attribute))) {\n        input = input.slice(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        match.rest = input.slice(end[0].length);\n        return match;\n      }\n    }\n  }\n\n  function handleStartTag(match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (handler.html5 && lastTag === 'p' && nonPhrasing(tagName)) {\n      parseEndTag('', lastTag);\n    }\n\n    if (!handler.html5 && !inline(tagName)) {\n      while (lastTag && inline(lastTag)) {\n        parseEndTag('', lastTag);\n      }\n    }\n\n    if (closeSelf(tagName) && lastTag === tagName) {\n      parseEndTag('', tagName);\n    }\n\n    var unary = empty(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var attrs = match.attrs.map(function(args) {\n      var name, value, customOpen, customClose, customAssign, quote;\n      var ncp = 7; // number of captured parts, scalar\n\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n\n      function populate(index) {\n        customAssign = args[index];\n        value = args[index + 1];\n        if (typeof value !== 'undefined') {\n          return '\"';\n        }\n        value = args[index + 2];\n        if (typeof value !== 'undefined') {\n          return '\\'';\n        }\n        value = args[index + 3];\n        if (typeof value === 'undefined' && fillAttrs(name)) {\n          value = name;\n        }\n        return '';\n      }\n\n      var j = 1;\n      if (handler.customAttrSurround) {\n        for (var i = 0, l = handler.customAttrSurround.length; i < l; i++, j += ncp) {\n          name = args[j + 1];\n          if (name) {\n            quote = populate(j + 2);\n            customOpen = args[j];\n            customClose = args[j + 6];\n            break;\n          }\n        }\n      }\n\n      if (!name && (name = args[j])) {\n        quote = populate(j + 1);\n      }\n\n      return {\n        name: name,\n        value: value,\n        customAssign: customAssign || '=',\n        customOpen: customOpen || '',\n        customClose: customClose || '',\n        quote: quote || ''\n      };\n    });\n\n    if (!unary) {\n      stack.push({ tag: tagName, attrs: attrs });\n      lastTag = tagName;\n      unarySlash = '';\n    }\n\n    if (handler.start) {\n      handler.start(tagName, attrs, unary, unarySlash);\n    }\n  }\n\n  function parseEndTag(tag, tagName) {\n    var pos;\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      var needle = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].tag.toLowerCase() === needle) {\n          break;\n        }\n      }\n    }\n    // If no tag name is provided, clean shop\n    else {\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (handler.end) {\n          handler.end(stack[i].tag, stack[i].attrs, i > pos || !tag);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    }\n    else if (tagName.toLowerCase() === 'br') {\n      if (handler.start) {\n        handler.start(tagName, [], true, '');\n      }\n    }\n    else if (tagName.toLowerCase() === 'p') {\n      if (handler.start) {\n        handler.start(tagName, [], false, '', true);\n      }\n      if (handler.end) {\n        handler.end(tagName, []);\n      }\n    }\n  }\n}\n\nexports.HTMLParser = HTMLParser;\nexports.HTMLtoXML = function(html) {\n  var results = '';\n\n  new HTMLParser(html, {\n    start: function(tag, attrs, unary) {\n      results += '<' + tag;\n\n      for (var i = 0, len = attrs.length; i < len; i++) {\n        results += ' ' + attrs[i].name + '=\"' + (attrs[i].value || '').replace(/\"/g, '&#34;') + '\"';\n      }\n\n      results += (unary ? '/' : '') + '>';\n    },\n    end: function(tag) {\n      results += '</' + tag + '>';\n    },\n    chars: function(text) {\n      results += text;\n    },\n    comment: function(text) {\n      results += '<!--' + text + '-->';\n    },\n    ignore: function(text) {\n      results += text;\n    }\n  });\n\n  return results;\n};\n\nexports.HTMLtoDOM = function(html, doc) {\n  // There can be only one of these elements\n  var one = {\n    html: true,\n    head: true,\n    body: true,\n    title: true\n  };\n\n  // Enforce a structure for the document\n  var structure = {\n    link: 'head',\n    base: 'head'\n  };\n\n  if (doc) {\n    doc = doc.ownerDocument || doc.getOwnerDocument && doc.getOwnerDocument() || doc;\n  }\n  else if (typeof DOMDocument !== 'undefined') {\n    doc = new DOMDocument();\n  }\n  else if (typeof document !== 'undefined' && document.implementation && document.implementation.createDocument) {\n    doc = document.implementation.createDocument('', '', null);\n  }\n  else if (typeof ActiveX !== 'undefined') {\n    doc = new ActiveXObject('Msxml.DOMDocument');\n  }\n\n  var elems = [],\n      documentElement = doc.documentElement ||\n        doc.getDocumentElement && doc.getDocumentElement();\n\n  // If we're dealing with an empty document then we\n  // need to pre-populate it with the HTML document structure\n  if (!documentElement && doc.createElement) {\n    (function() {\n      var html = doc.createElement('html');\n      var head = doc.createElement('head');\n      head.appendChild(doc.createElement('title'));\n      html.appendChild(head);\n      html.appendChild(doc.createElement('body'));\n      doc.appendChild(html);\n    })();\n  }\n\n  // Find all the unique elements\n  if (doc.getElementsByTagName) {\n    for (var i in one) {\n      one[i] = doc.getElementsByTagName(i)[0];\n    }\n  }\n\n  // If we're working with a document, inject contents into\n  // the body element\n  var curParentNode = one.body;\n\n  new HTMLParser(html, {\n    start: function(tagName, attrs, unary) {\n      // If it's a pre-built element, then we can ignore\n      // its construction\n      if (one[tagName]) {\n        curParentNode = one[tagName];\n        return;\n      }\n\n      var elem = doc.createElement(tagName);\n\n      for (var attr in attrs) {\n        elem.setAttribute(attrs[attr].name, attrs[attr].value);\n      }\n\n      if (structure[tagName] && typeof one[structure[tagName]] !== 'boolean') {\n        one[structure[tagName]].appendChild(elem);\n      }\n      else if (curParentNode && curParentNode.appendChild) {\n        curParentNode.appendChild(elem);\n      }\n\n      if (!unary) {\n        elems.push(elem);\n        curParentNode = elem;\n      }\n    },\n    end: function(/* tag */) {\n      elems.length -= 1;\n\n      // Init the new parentNode\n      curParentNode = elems[elems.length - 1];\n    },\n    chars: function(text) {\n      curParentNode.appendChild(doc.createTextNode(text));\n    },\n    comment: function(/* text */) {\n      // create comment node\n    },\n    ignore: function(/* text */) {\n      // What to do here?\n    }\n  });\n\n  return doc;\n};\n"]}